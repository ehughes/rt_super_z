/*
 * Generated by gen_defines.py
 *
 * DTS input file:
 *   C:/ELI/rt_super_z/rt_super_z/hello_world/build/zephyr/zephyr.dts.pre
 *
 * Directories with bindings:
 *   $ZEPHYR_BASE\dts\bindings
 *
 * Node dependency ordering (ordinal and path):
 *   0   /
 *   1   /aliases
 *   2   /chosen
 *   3   /cpus
 *   4   /power-states
 *   5   /power-states/idle
 *   6   /power-states/suspend
 *   7   /cpus/cpu@0
 *   8   /cpus/cpu@0/mpu@e000ed90
 *   9   /gpio_keys
 *   10  /soc
 *   11  /soc/interrupt-controller@e000e100
 *   12  /soc/peripheral@50000000
 *   13  /soc/peripheral@50000000/gpio@1
 *   14  /gpio_keys/button_0
 *   15  /soc/peripheral@50000000/gpio@0
 *   16  /gpio_keys/button_1
 *   17  /leds
 *   18  /leds/led_1
 *   19  /leds/led_2
 *   20  /leds/led_3
 *   21  /pwmleds
 *   22  /soc/peripheral@50000000/pwm@146000
 *   23  /pwmleds/blue_pwm_led
 *   24  /pwmleds/green_pwm_led
 *   25  /pwmleds/red_pwm_led
 *   26  /soc/timer@e000e010
 *   27  /soc/peripheral@50000000/clkctl@1000
 *   28  /soc/peripheral@50000000/clkctl@21000
 *   29  /soc/peripheral@50000000/ctimer@28000
 *   30  /soc/peripheral@50000000/ctimer@29000
 *   31  /soc/peripheral@50000000/ctimer@2a000
 *   32  /soc/peripheral@50000000/ctimer@2b000
 *   33  /soc/peripheral@50000000/ctimer@2c000
 *   34  /soc/peripheral@50000000/dma-controller@105000
 *   35  /soc/peripheral@50000000/flexcomm@106000
 *   36  /soc/peripheral@50000000/dma-controller@104000
 *   37  /soc/peripheral@50000000/flexcomm@107000
 *   38  /soc/peripheral@50000000/flexcomm@108000
 *   39  /soc/peripheral@50000000/flexcomm@109000
 *   40  /soc/peripheral@50000000/flexcomm@122000
 *   41  /soc/peripheral@50000000/flexcomm@123000
 *   42  /soc/peripheral@50000000/flexcomm@124000
 *   43  /soc/peripheral@50000000/flexcomm@125000
 *   44  /soc/peripheral@50000000/lpadc@13A0000
 *   45  /soc/peripheral@50000000/random@138000
 *   46  /soc/peripheral@50000000/rtc@30000
 *   47  /soc/peripheral@50000000/spi@126000
 *   48  /soc/peripheral@50000000/timers@113000
 *   49  /soc/peripheral@50000000/usbhs@144000
 *   50  /soc/peripheral@50000000/gpio@2
 *   51  /soc/peripheral@50000000/usdhc@136000
 *   52  /soc/peripheral@50000000/usdhc@137000
 *   53  /soc/peripheral@50000000/uuid@2f50
 *   54  /soc/peripheral@50000000/watchdog@e000
 *   55  /soc/peripheral@50000000/watchdog@2e000
 *   56  /soc/spi@134000
 *   57  /soc/spi@134000/is25wp064@0
 *   58  /soc/spi@134000/is25wp064@0/partitions
 *   59  /soc/spi@134000/is25wp064@0/partitions/partition@0
 *   60  /soc/spi@134000/is25wp064@0/partitions/partition@10000
 *   61  /soc/spi@134000/is25wp064@0/partitions/partition@310000
 *   62  /soc/spi@134000/is25wp064@0/partitions/partition@610000
 *   63  /soc/spi@134000/is25wp064@0/partitions/partition@630000
 *   64  /soc/sram@30018000
 *   65  /soc/sram@30018000/memory@20180000
 *   66  /soc/sram@30018000/memory@40140000
 *
 * Definitions derived from these nodes in dependency order are next,
 * followed by /chosen nodes.
 */

/*
 * Devicetree node: /
 *
 * Node identifier: DT_N
 */

/* Node's full path: */
#define DT_N_PATH "/"

/* Node's name with unit-address: */
#define DT_N_FULL_NAME "/"
#define DT_N_FOREACH_CHILD(fn) fn(DT_N_S_soc) fn(DT_N_S_chosen) fn(DT_N_S_aliases) fn(DT_N_S_cpus) fn(DT_N_S_gpio_keys) fn(DT_N_S_leds) fn(DT_N_S_pwmleds) fn(DT_N_S_power_states)
#define DT_N_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc, __VA_ARGS__) fn(DT_N_S_chosen, __VA_ARGS__) fn(DT_N_S_aliases, __VA_ARGS__) fn(DT_N_S_cpus, __VA_ARGS__) fn(DT_N_S_gpio_keys, __VA_ARGS__) fn(DT_N_S_leds, __VA_ARGS__) fn(DT_N_S_pwmleds, __VA_ARGS__) fn(DT_N_S_power_states, __VA_ARGS__)
#define DT_N_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc) fn(DT_N_S_chosen) fn(DT_N_S_aliases) fn(DT_N_S_cpus) fn(DT_N_S_gpio_keys) fn(DT_N_S_leds) fn(DT_N_S_pwmleds) fn(DT_N_S_power_states) 
#define DT_N_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc, __VA_ARGS__) fn(DT_N_S_chosen, __VA_ARGS__) fn(DT_N_S_aliases, __VA_ARGS__) fn(DT_N_S_cpus, __VA_ARGS__) fn(DT_N_S_gpio_keys, __VA_ARGS__) fn(DT_N_S_leds, __VA_ARGS__) fn(DT_N_S_pwmleds, __VA_ARGS__) fn(DT_N_S_power_states, __VA_ARGS__) 

/* Node's dependency ordinal: */
#define DT_N_ORD 0

/* Ordinals for what this node depends on directly: */
#define DT_N_REQUIRES_ORDS /* nothing */

/* Ordinals for what depends directly on this node: */
#define DT_N_SUPPORTS_ORDS \
	1, /* /aliases */ \
	2, /* /chosen */ \
	3, /* /cpus */ \
	4, /* /power-states */ \
	9, /* /gpio_keys */ \
	10, /* /soc */ \
	17, /* /leds */ \
	21, /* /pwmleds */

/* Existence and alternate IDs: */
#define DT_N_EXISTS 1
#define DT_N_INST_0_nxp_mimxrt685 DT_N

/* Macros for properties that are special in the specification: */
#define DT_N_REG_NUM 0
#define DT_N_RANGES_NUM 0
#define DT_N_FOREACH_RANGE(fn) 
#define DT_N_IRQ_NUM 0
#define DT_N_COMPAT_MATCHES_nxp_mimxrt685 1
#define DT_N_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_P_compatible {"nxp,mimxrt685"}
#define DT_N_P_compatible_IDX_0 "nxp,mimxrt685"
#define DT_N_P_compatible_IDX_0_EXISTS 1
#define DT_N_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N, compatible, 0)
#define DT_N_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N, compatible, 0, __VA_ARGS__)
#define DT_N_P_compatible_LEN 1
#define DT_N_P_compatible_EXISTS 1

/*
 * Devicetree node: /aliases
 *
 * Node identifier: DT_N_S_aliases
 */

/* Node's full path: */
#define DT_N_S_aliases_PATH "/aliases"

/* Node's name with unit-address: */
#define DT_N_S_aliases_FULL_NAME "aliases"

/* Node parent (/) identifier: */
#define DT_N_S_aliases_PARENT DT_N
#define DT_N_S_aliases_FOREACH_CHILD(fn) 
#define DT_N_S_aliases_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_aliases_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_aliases_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_aliases_ORD 1

/* Ordinals for what this node depends on directly: */
#define DT_N_S_aliases_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_aliases_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_aliases_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_aliases_REG_NUM 0
#define DT_N_S_aliases_RANGES_NUM 0
#define DT_N_S_aliases_FOREACH_RANGE(fn) 
#define DT_N_S_aliases_IRQ_NUM 0
#define DT_N_S_aliases_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_aliases_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /chosen
 *
 * Node identifier: DT_N_S_chosen
 */

/* Node's full path: */
#define DT_N_S_chosen_PATH "/chosen"

/* Node's name with unit-address: */
#define DT_N_S_chosen_FULL_NAME "chosen"

/* Node parent (/) identifier: */
#define DT_N_S_chosen_PARENT DT_N
#define DT_N_S_chosen_FOREACH_CHILD(fn) 
#define DT_N_S_chosen_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_chosen_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_chosen_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_chosen_ORD 2

/* Ordinals for what this node depends on directly: */
#define DT_N_S_chosen_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_chosen_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_chosen_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_chosen_REG_NUM 0
#define DT_N_S_chosen_RANGES_NUM 0
#define DT_N_S_chosen_FOREACH_RANGE(fn) 
#define DT_N_S_chosen_IRQ_NUM 0
#define DT_N_S_chosen_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_chosen_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /cpus
 *
 * Node identifier: DT_N_S_cpus
 */

/* Node's full path: */
#define DT_N_S_cpus_PATH "/cpus"

/* Node's name with unit-address: */
#define DT_N_S_cpus_FULL_NAME "cpus"

/* Node parent (/) identifier: */
#define DT_N_S_cpus_PARENT DT_N
#define DT_N_S_cpus_FOREACH_CHILD(fn) fn(DT_N_S_cpus_S_cpu_0)
#define DT_N_S_cpus_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__)
#define DT_N_S_cpus_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_cpus_S_cpu_0) 
#define DT_N_S_cpus_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__) 

/* Node's dependency ordinal: */
#define DT_N_S_cpus_ORD 3

/* Ordinals for what this node depends on directly: */
#define DT_N_S_cpus_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_cpus_SUPPORTS_ORDS \
	7, /* /cpus/cpu@0 */

/* Existence and alternate IDs: */
#define DT_N_S_cpus_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_cpus_REG_NUM 0
#define DT_N_S_cpus_RANGES_NUM 0
#define DT_N_S_cpus_FOREACH_RANGE(fn) 
#define DT_N_S_cpus_IRQ_NUM 0
#define DT_N_S_cpus_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_cpus_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /power-states
 *
 * Node identifier: DT_N_S_power_states
 */

/* Node's full path: */
#define DT_N_S_power_states_PATH "/power-states"

/* Node's name with unit-address: */
#define DT_N_S_power_states_FULL_NAME "power-states"

/* Node parent (/) identifier: */
#define DT_N_S_power_states_PARENT DT_N
#define DT_N_S_power_states_FOREACH_CHILD(fn) fn(DT_N_S_power_states_S_idle) fn(DT_N_S_power_states_S_suspend)
#define DT_N_S_power_states_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_power_states_S_idle, __VA_ARGS__) fn(DT_N_S_power_states_S_suspend, __VA_ARGS__)
#define DT_N_S_power_states_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_power_states_S_idle) fn(DT_N_S_power_states_S_suspend) 
#define DT_N_S_power_states_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_power_states_S_idle, __VA_ARGS__) fn(DT_N_S_power_states_S_suspend, __VA_ARGS__) 

/* Node's dependency ordinal: */
#define DT_N_S_power_states_ORD 4

/* Ordinals for what this node depends on directly: */
#define DT_N_S_power_states_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_power_states_SUPPORTS_ORDS \
	5, /* /power-states/idle */ \
	6, /* /power-states/suspend */

/* Existence and alternate IDs: */
#define DT_N_S_power_states_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_power_states_REG_NUM 0
#define DT_N_S_power_states_RANGES_NUM 0
#define DT_N_S_power_states_FOREACH_RANGE(fn) 
#define DT_N_S_power_states_IRQ_NUM 0
#define DT_N_S_power_states_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_power_states_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /power-states/idle
 *
 * Node identifier: DT_N_S_power_states_S_idle
 *
 * Binding (compatible = zephyr,power-state):
 *   $ZEPHYR_BASE\dts\bindings\power\zephyr,power-state.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_power_states_S_idle_PATH "/power-states/idle"

/* Node's name with unit-address: */
#define DT_N_S_power_states_S_idle_FULL_NAME "idle"

/* Node parent (/power-states) identifier: */
#define DT_N_S_power_states_S_idle_PARENT DT_N_S_power_states
#define DT_N_S_power_states_S_idle_FOREACH_CHILD(fn) 
#define DT_N_S_power_states_S_idle_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_power_states_S_idle_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_power_states_S_idle_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_power_states_S_idle_ORD 5

/* Ordinals for what this node depends on directly: */
#define DT_N_S_power_states_S_idle_REQUIRES_ORDS \
	4, /* /power-states */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_power_states_S_idle_SUPPORTS_ORDS \
	7, /* /cpus/cpu@0 */

/* Existence and alternate IDs: */
#define DT_N_S_power_states_S_idle_EXISTS 1
#define DT_N_INST_0_zephyr_power_state DT_N_S_power_states_S_idle
#define DT_N_NODELABEL_idle            DT_N_S_power_states_S_idle

/* Macros for properties that are special in the specification: */
#define DT_N_S_power_states_S_idle_REG_NUM 0
#define DT_N_S_power_states_S_idle_RANGES_NUM 0
#define DT_N_S_power_states_S_idle_FOREACH_RANGE(fn) 
#define DT_N_S_power_states_S_idle_IRQ_NUM 0
#define DT_N_S_power_states_S_idle_COMPAT_MATCHES_zephyr_power_state 1
#define DT_N_S_power_states_S_idle_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_power_states_S_idle_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_power_states_S_idle_P_power_state_name "runtime-idle"
#define DT_N_S_power_states_S_idle_P_power_state_name_STRING_TOKEN runtime_idle
#define DT_N_S_power_states_S_idle_P_power_state_name_STRING_UPPER_TOKEN RUNTIME_IDLE
#define DT_N_S_power_states_S_idle_P_power_state_name_ENUM_IDX 1
#define DT_N_S_power_states_S_idle_P_power_state_name_ENUM_TOKEN runtime_idle
#define DT_N_S_power_states_S_idle_P_power_state_name_ENUM_UPPER_TOKEN RUNTIME_IDLE
#define DT_N_S_power_states_S_idle_P_power_state_name_FOREACH_PROP_ELEM(fn) fn(DT_N_S_power_states_S_idle, power_state_name, 0) \
	fn(DT_N_S_power_states_S_idle, power_state_name, 1) \
	fn(DT_N_S_power_states_S_idle, power_state_name, 2) \
	fn(DT_N_S_power_states_S_idle, power_state_name, 3) \
	fn(DT_N_S_power_states_S_idle, power_state_name, 4) \
	fn(DT_N_S_power_states_S_idle, power_state_name, 5) \
	fn(DT_N_S_power_states_S_idle, power_state_name, 6) \
	fn(DT_N_S_power_states_S_idle, power_state_name, 7) \
	fn(DT_N_S_power_states_S_idle, power_state_name, 8) \
	fn(DT_N_S_power_states_S_idle, power_state_name, 9) \
	fn(DT_N_S_power_states_S_idle, power_state_name, 10) \
	fn(DT_N_S_power_states_S_idle, power_state_name, 11)
#define DT_N_S_power_states_S_idle_P_power_state_name_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_power_states_S_idle, power_state_name, 0, __VA_ARGS__) \
	fn(DT_N_S_power_states_S_idle, power_state_name, 1, __VA_ARGS__) \
	fn(DT_N_S_power_states_S_idle, power_state_name, 2, __VA_ARGS__) \
	fn(DT_N_S_power_states_S_idle, power_state_name, 3, __VA_ARGS__) \
	fn(DT_N_S_power_states_S_idle, power_state_name, 4, __VA_ARGS__) \
	fn(DT_N_S_power_states_S_idle, power_state_name, 5, __VA_ARGS__) \
	fn(DT_N_S_power_states_S_idle, power_state_name, 6, __VA_ARGS__) \
	fn(DT_N_S_power_states_S_idle, power_state_name, 7, __VA_ARGS__) \
	fn(DT_N_S_power_states_S_idle, power_state_name, 8, __VA_ARGS__) \
	fn(DT_N_S_power_states_S_idle, power_state_name, 9, __VA_ARGS__) \
	fn(DT_N_S_power_states_S_idle, power_state_name, 10, __VA_ARGS__) \
	fn(DT_N_S_power_states_S_idle, power_state_name, 11, __VA_ARGS__)
#define DT_N_S_power_states_S_idle_P_power_state_name_EXISTS 1
#define DT_N_S_power_states_S_idle_P_min_residency_us 10
#define DT_N_S_power_states_S_idle_P_min_residency_us_EXISTS 1

/*
 * Devicetree node: /power-states/suspend
 *
 * Node identifier: DT_N_S_power_states_S_suspend
 *
 * Binding (compatible = zephyr,power-state):
 *   $ZEPHYR_BASE\dts\bindings\power\zephyr,power-state.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_power_states_S_suspend_PATH "/power-states/suspend"

/* Node's name with unit-address: */
#define DT_N_S_power_states_S_suspend_FULL_NAME "suspend"

/* Node parent (/power-states) identifier: */
#define DT_N_S_power_states_S_suspend_PARENT DT_N_S_power_states
#define DT_N_S_power_states_S_suspend_FOREACH_CHILD(fn) 
#define DT_N_S_power_states_S_suspend_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_power_states_S_suspend_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_power_states_S_suspend_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_power_states_S_suspend_ORD 6

/* Ordinals for what this node depends on directly: */
#define DT_N_S_power_states_S_suspend_REQUIRES_ORDS \
	4, /* /power-states */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_power_states_S_suspend_SUPPORTS_ORDS \
	7, /* /cpus/cpu@0 */

/* Existence and alternate IDs: */
#define DT_N_S_power_states_S_suspend_EXISTS 1
#define DT_N_INST_1_zephyr_power_state DT_N_S_power_states_S_suspend
#define DT_N_NODELABEL_suspend         DT_N_S_power_states_S_suspend

/* Macros for properties that are special in the specification: */
#define DT_N_S_power_states_S_suspend_REG_NUM 0
#define DT_N_S_power_states_S_suspend_RANGES_NUM 0
#define DT_N_S_power_states_S_suspend_FOREACH_RANGE(fn) 
#define DT_N_S_power_states_S_suspend_IRQ_NUM 0
#define DT_N_S_power_states_S_suspend_COMPAT_MATCHES_zephyr_power_state 1
#define DT_N_S_power_states_S_suspend_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_power_states_S_suspend_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_power_states_S_suspend_P_power_state_name "suspend-to-idle"
#define DT_N_S_power_states_S_suspend_P_power_state_name_STRING_TOKEN suspend_to_idle
#define DT_N_S_power_states_S_suspend_P_power_state_name_STRING_UPPER_TOKEN SUSPEND_TO_IDLE
#define DT_N_S_power_states_S_suspend_P_power_state_name_ENUM_IDX 2
#define DT_N_S_power_states_S_suspend_P_power_state_name_ENUM_TOKEN suspend_to_idle
#define DT_N_S_power_states_S_suspend_P_power_state_name_ENUM_UPPER_TOKEN SUSPEND_TO_IDLE
#define DT_N_S_power_states_S_suspend_P_power_state_name_FOREACH_PROP_ELEM(fn) fn(DT_N_S_power_states_S_suspend, power_state_name, 0) \
	fn(DT_N_S_power_states_S_suspend, power_state_name, 1) \
	fn(DT_N_S_power_states_S_suspend, power_state_name, 2) \
	fn(DT_N_S_power_states_S_suspend, power_state_name, 3) \
	fn(DT_N_S_power_states_S_suspend, power_state_name, 4) \
	fn(DT_N_S_power_states_S_suspend, power_state_name, 5) \
	fn(DT_N_S_power_states_S_suspend, power_state_name, 6) \
	fn(DT_N_S_power_states_S_suspend, power_state_name, 7) \
	fn(DT_N_S_power_states_S_suspend, power_state_name, 8) \
	fn(DT_N_S_power_states_S_suspend, power_state_name, 9) \
	fn(DT_N_S_power_states_S_suspend, power_state_name, 10) \
	fn(DT_N_S_power_states_S_suspend, power_state_name, 11) \
	fn(DT_N_S_power_states_S_suspend, power_state_name, 12) \
	fn(DT_N_S_power_states_S_suspend, power_state_name, 13) \
	fn(DT_N_S_power_states_S_suspend, power_state_name, 14)
#define DT_N_S_power_states_S_suspend_P_power_state_name_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_power_states_S_suspend, power_state_name, 0, __VA_ARGS__) \
	fn(DT_N_S_power_states_S_suspend, power_state_name, 1, __VA_ARGS__) \
	fn(DT_N_S_power_states_S_suspend, power_state_name, 2, __VA_ARGS__) \
	fn(DT_N_S_power_states_S_suspend, power_state_name, 3, __VA_ARGS__) \
	fn(DT_N_S_power_states_S_suspend, power_state_name, 4, __VA_ARGS__) \
	fn(DT_N_S_power_states_S_suspend, power_state_name, 5, __VA_ARGS__) \
	fn(DT_N_S_power_states_S_suspend, power_state_name, 6, __VA_ARGS__) \
	fn(DT_N_S_power_states_S_suspend, power_state_name, 7, __VA_ARGS__) \
	fn(DT_N_S_power_states_S_suspend, power_state_name, 8, __VA_ARGS__) \
	fn(DT_N_S_power_states_S_suspend, power_state_name, 9, __VA_ARGS__) \
	fn(DT_N_S_power_states_S_suspend, power_state_name, 10, __VA_ARGS__) \
	fn(DT_N_S_power_states_S_suspend, power_state_name, 11, __VA_ARGS__) \
	fn(DT_N_S_power_states_S_suspend, power_state_name, 12, __VA_ARGS__) \
	fn(DT_N_S_power_states_S_suspend, power_state_name, 13, __VA_ARGS__) \
	fn(DT_N_S_power_states_S_suspend, power_state_name, 14, __VA_ARGS__)
#define DT_N_S_power_states_S_suspend_P_power_state_name_EXISTS 1
#define DT_N_S_power_states_S_suspend_P_min_residency_us 1000
#define DT_N_S_power_states_S_suspend_P_min_residency_us_EXISTS 1

/*
 * Devicetree node: /cpus/cpu@0
 *
 * Node identifier: DT_N_S_cpus_S_cpu_0
 *
 * Binding (compatible = arm,cortex-m33f):
 *   $ZEPHYR_BASE\dts\bindings\cpu\arm,cortex-m33f.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_cpus_S_cpu_0_PATH "/cpus/cpu@0"

/* Node's name with unit-address: */
#define DT_N_S_cpus_S_cpu_0_FULL_NAME "cpu@0"

/* Node parent (/cpus) identifier: */
#define DT_N_S_cpus_S_cpu_0_PARENT DT_N_S_cpus
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD(fn) fn(DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90)
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90) 
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90, __VA_ARGS__) 

/* Node's dependency ordinal: */
#define DT_N_S_cpus_S_cpu_0_ORD 7

/* Ordinals for what this node depends on directly: */
#define DT_N_S_cpus_S_cpu_0_REQUIRES_ORDS \
	3, /* /cpus */ \
	5, /* /power-states/idle */ \
	6, /* /power-states/suspend */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_cpus_S_cpu_0_SUPPORTS_ORDS \
	8, /* /cpus/cpu@0/mpu@e000ed90 */

/* Existence and alternate IDs: */
#define DT_N_S_cpus_S_cpu_0_EXISTS 1
#define DT_N_INST_0_arm_cortex_m33f DT_N_S_cpus_S_cpu_0
#define DT_N_NODELABEL_cpu0         DT_N_S_cpus_S_cpu_0

/* Macros for properties that are special in the specification: */
#define DT_N_S_cpus_S_cpu_0_REG_NUM 1
#define DT_N_S_cpus_S_cpu_0_REG_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_REG_IDX_0_VAL_ADDRESS 0 /* 0x0 */
#define DT_N_S_cpus_S_cpu_0_RANGES_NUM 0
#define DT_N_S_cpus_S_cpu_0_FOREACH_RANGE(fn) 
#define DT_N_S_cpus_S_cpu_0_IRQ_NUM 0
#define DT_N_S_cpus_S_cpu_0_COMPAT_MATCHES_arm_cortex_m33f 1
#define DT_N_S_cpus_S_cpu_0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_cpus_S_cpu_0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_cpus_S_cpu_0_P_cpu_power_states_IDX_0 DT_N_S_power_states_S_idle
#define DT_N_S_cpus_S_cpu_0_P_cpu_power_states_IDX_0_PH DT_N_S_power_states_S_idle
#define DT_N_S_cpus_S_cpu_0_P_cpu_power_states_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_cpu_power_states_IDX_1 DT_N_S_power_states_S_suspend
#define DT_N_S_cpus_S_cpu_0_P_cpu_power_states_IDX_1_PH DT_N_S_power_states_S_suspend
#define DT_N_S_cpus_S_cpu_0_P_cpu_power_states_IDX_1_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_cpu_power_states_FOREACH_PROP_ELEM(fn) fn(DT_N_S_cpus_S_cpu_0, cpu_power_states, 0) \
	fn(DT_N_S_cpus_S_cpu_0, cpu_power_states, 1)
#define DT_N_S_cpus_S_cpu_0_P_cpu_power_states_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_cpus_S_cpu_0, cpu_power_states, 0, __VA_ARGS__) \
	fn(DT_N_S_cpus_S_cpu_0, cpu_power_states, 1, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_0_P_cpu_power_states_LEN 2
#define DT_N_S_cpus_S_cpu_0_P_cpu_power_states_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_compatible {"arm,cortex-m33f"}
#define DT_N_S_cpus_S_cpu_0_P_compatible_IDX_0 "arm,cortex-m33f"
#define DT_N_S_cpus_S_cpu_0_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_cpus_S_cpu_0, compatible, 0)
#define DT_N_S_cpus_S_cpu_0_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_cpus_S_cpu_0, compatible, 0, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_0_P_compatible_LEN 1
#define DT_N_S_cpus_S_cpu_0_P_compatible_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_reg {0 /* 0x0 */}
#define DT_N_S_cpus_S_cpu_0_P_reg_IDX_0 0
#define DT_N_S_cpus_S_cpu_0_P_reg_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_cpus_S_cpu_0, reg, 0)
#define DT_N_S_cpus_S_cpu_0_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_cpus_S_cpu_0, reg, 0, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_0_P_reg_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_wakeup_source 0
#define DT_N_S_cpus_S_cpu_0_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /cpus/cpu@0/mpu@e000ed90
 *
 * Node identifier: DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90
 *
 * Binding (compatible = arm,armv8m-mpu):
 *   $ZEPHYR_BASE\dts\bindings\mmu_mpu\arm,armv8m-mpu.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_PATH "/cpus/cpu@0/mpu@e000ed90"

/* Node's name with unit-address: */
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_FULL_NAME "mpu@e000ed90"

/* Node parent (/cpus/cpu@0) identifier: */
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_PARENT DT_N_S_cpus_S_cpu_0
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_FOREACH_CHILD(fn) 
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_ORD 8

/* Ordinals for what this node depends on directly: */
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_REQUIRES_ORDS \
	7, /* /cpus/cpu@0 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_EXISTS 1
#define DT_N_INST_0_arm_armv8m_mpu DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90
#define DT_N_NODELABEL_mpu         DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90

/* Macros for properties that are special in the specification: */
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_REG_NUM 1
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_REG_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_REG_IDX_0_VAL_ADDRESS 3758157200 /* 0xe000ed90 */
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_REG_IDX_0_VAL_SIZE 64 /* 0x40 */
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_RANGES_NUM 0
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_FOREACH_RANGE(fn) 
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_IRQ_NUM 0
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_COMPAT_MATCHES_arm_armv8m_mpu 1
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_P_reg {3758157200 /* 0xe000ed90 */, 64 /* 0x40 */}
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_P_reg_IDX_0 3758157200
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_P_reg_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_P_reg_IDX_1 64
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_P_reg_IDX_1_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90, reg, 0) \
	fn(DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90, reg, 1)
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90, reg, 1, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_P_reg_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_P_arm_num_mpu_regions 8
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_P_arm_num_mpu_regions_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_P_compatible {"arm,armv8m-mpu"}
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_P_compatible_IDX_0 "arm,armv8m-mpu"
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90, compatible, 0)
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90, compatible, 0, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_P_compatible_LEN 1
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_P_compatible_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_P_wakeup_source 0
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /gpio_keys
 *
 * Node identifier: DT_N_S_gpio_keys
 *
 * Binding (compatible = gpio-keys):
 *   $ZEPHYR_BASE\dts\bindings\gpio\gpio-keys.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_gpio_keys_PATH "/gpio_keys"

/* Node's name with unit-address: */
#define DT_N_S_gpio_keys_FULL_NAME "gpio_keys"

/* Node parent (/) identifier: */
#define DT_N_S_gpio_keys_PARENT DT_N
#define DT_N_S_gpio_keys_FOREACH_CHILD(fn) fn(DT_N_S_gpio_keys_S_button_0) fn(DT_N_S_gpio_keys_S_button_1)
#define DT_N_S_gpio_keys_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_gpio_keys_S_button_0, __VA_ARGS__) fn(DT_N_S_gpio_keys_S_button_1, __VA_ARGS__)
#define DT_N_S_gpio_keys_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_gpio_keys_S_button_0) fn(DT_N_S_gpio_keys_S_button_1) 
#define DT_N_S_gpio_keys_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_gpio_keys_S_button_0, __VA_ARGS__) fn(DT_N_S_gpio_keys_S_button_1, __VA_ARGS__) 

/* Node's dependency ordinal: */
#define DT_N_S_gpio_keys_ORD 9

/* Ordinals for what this node depends on directly: */
#define DT_N_S_gpio_keys_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_gpio_keys_SUPPORTS_ORDS \
	14, /* /gpio_keys/button_0 */ \
	16, /* /gpio_keys/button_1 */

/* Existence and alternate IDs: */
#define DT_N_S_gpio_keys_EXISTS 1
#define DT_N_INST_0_gpio_keys DT_N_S_gpio_keys

/* Macros for properties that are special in the specification: */
#define DT_N_S_gpio_keys_REG_NUM 0
#define DT_N_S_gpio_keys_RANGES_NUM 0
#define DT_N_S_gpio_keys_FOREACH_RANGE(fn) 
#define DT_N_S_gpio_keys_IRQ_NUM 0
#define DT_N_S_gpio_keys_COMPAT_MATCHES_gpio_keys 1
#define DT_N_S_gpio_keys_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_gpio_keys_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_gpio_keys_P_compatible {"gpio-keys"}
#define DT_N_S_gpio_keys_P_compatible_IDX_0 "gpio-keys"
#define DT_N_S_gpio_keys_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_gpio_keys_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_gpio_keys, compatible, 0)
#define DT_N_S_gpio_keys_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_gpio_keys, compatible, 0, __VA_ARGS__)
#define DT_N_S_gpio_keys_P_compatible_LEN 1
#define DT_N_S_gpio_keys_P_compatible_EXISTS 1

/*
 * Devicetree node: /soc
 *
 * Node identifier: DT_N_S_soc
 */

/* Node's full path: */
#define DT_N_S_soc_PATH "/soc"

/* Node's name with unit-address: */
#define DT_N_S_soc_FULL_NAME "soc"

/* Node parent (/) identifier: */
#define DT_N_S_soc_PARENT DT_N
#define DT_N_S_soc_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_sram_30018000) fn(DT_N_S_soc_S_peripheral_50000000) fn(DT_N_S_soc_S_spi_134000) fn(DT_N_S_soc_S_interrupt_controller_e000e100) fn(DT_N_S_soc_S_timer_e000e010)
#define DT_N_S_soc_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_sram_30018000, __VA_ARGS__) fn(DT_N_S_soc_S_peripheral_50000000, __VA_ARGS__) fn(DT_N_S_soc_S_spi_134000, __VA_ARGS__) fn(DT_N_S_soc_S_interrupt_controller_e000e100, __VA_ARGS__) fn(DT_N_S_soc_S_timer_e000e010, __VA_ARGS__)
#define DT_N_S_soc_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_sram_30018000) fn(DT_N_S_soc_S_peripheral_50000000) fn(DT_N_S_soc_S_spi_134000) fn(DT_N_S_soc_S_interrupt_controller_e000e100) 
#define DT_N_S_soc_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_sram_30018000, __VA_ARGS__) fn(DT_N_S_soc_S_peripheral_50000000, __VA_ARGS__) fn(DT_N_S_soc_S_spi_134000, __VA_ARGS__) fn(DT_N_S_soc_S_interrupt_controller_e000e100, __VA_ARGS__) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_ORD 10

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_SUPPORTS_ORDS \
	11, /* /soc/interrupt-controller@e000e100 */ \
	12, /* /soc/peripheral@50000000 */ \
	26, /* /soc/timer@e000e010 */ \
	56, /* /soc/spi@134000 */ \
	64, /* /soc/sram@30018000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_EXISTS 1
#define DT_N_INST_0_simple_bus DT_N_S_soc

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_REG_NUM 0
#define DT_N_S_soc_RANGES_NUM 0
#define DT_N_S_soc_FOREACH_RANGE(fn) 
#define DT_N_S_soc_IRQ_NUM 0
#define DT_N_S_soc_COMPAT_MATCHES_simple_bus 1
#define DT_N_S_soc_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_P_compatible {"simple-bus"}
#define DT_N_S_soc_P_compatible_IDX_0 "simple-bus"
#define DT_N_S_soc_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc, compatible, 0)
#define DT_N_S_soc_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_P_compatible_LEN 1
#define DT_N_S_soc_P_compatible_EXISTS 1

/*
 * Devicetree node: /soc/interrupt-controller@e000e100
 *
 * Node identifier: DT_N_S_soc_S_interrupt_controller_e000e100
 *
 * Binding (compatible = arm,v8m-nvic):
 *   $ZEPHYR_BASE\dts\bindings\interrupt-controller\arm,v8m-nvic.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_PATH "/soc/interrupt-controller@e000e100"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_FULL_NAME "interrupt-controller@e000e100"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_PARENT DT_N_S_soc
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_ORD 11

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_REQUIRES_ORDS \
	10, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_SUPPORTS_ORDS \
	13, /* /soc/peripheral@50000000/gpio@1 */ \
	15, /* /soc/peripheral@50000000/gpio@0 */ \
	22, /* /soc/peripheral@50000000/pwm@146000 */ \
	29, /* /soc/peripheral@50000000/ctimer@28000 */ \
	30, /* /soc/peripheral@50000000/ctimer@29000 */ \
	31, /* /soc/peripheral@50000000/ctimer@2a000 */ \
	32, /* /soc/peripheral@50000000/ctimer@2b000 */ \
	33, /* /soc/peripheral@50000000/ctimer@2c000 */ \
	34, /* /soc/peripheral@50000000/dma-controller@105000 */ \
	35, /* /soc/peripheral@50000000/flexcomm@106000 */ \
	36, /* /soc/peripheral@50000000/dma-controller@104000 */ \
	37, /* /soc/peripheral@50000000/flexcomm@107000 */ \
	38, /* /soc/peripheral@50000000/flexcomm@108000 */ \
	39, /* /soc/peripheral@50000000/flexcomm@109000 */ \
	40, /* /soc/peripheral@50000000/flexcomm@122000 */ \
	41, /* /soc/peripheral@50000000/flexcomm@123000 */ \
	42, /* /soc/peripheral@50000000/flexcomm@124000 */ \
	43, /* /soc/peripheral@50000000/flexcomm@125000 */ \
	44, /* /soc/peripheral@50000000/lpadc@13A0000 */ \
	45, /* /soc/peripheral@50000000/random@138000 */ \
	46, /* /soc/peripheral@50000000/rtc@30000 */ \
	47, /* /soc/peripheral@50000000/spi@126000 */ \
	48, /* /soc/peripheral@50000000/timers@113000 */ \
	49, /* /soc/peripheral@50000000/usbhs@144000 */ \
	51, /* /soc/peripheral@50000000/usdhc@136000 */ \
	52, /* /soc/peripheral@50000000/usdhc@137000 */ \
	54, /* /soc/peripheral@50000000/watchdog@e000 */ \
	55, /* /soc/peripheral@50000000/watchdog@2e000 */ \
	56, /* /soc/spi@134000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_EXISTS 1
#define DT_N_INST_0_arm_v8m_nvic DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_NODELABEL_nvic      DT_N_S_soc_S_interrupt_controller_e000e100

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_REG_NUM 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_REG_IDX_0_VAL_ADDRESS 3758153984 /* 0xe000e100 */
#define DT_N_S_soc_S_interrupt_controller_e000e100_REG_IDX_0_VAL_SIZE 3072 /* 0xc00 */
#define DT_N_S_soc_S_interrupt_controller_e000e100_RANGES_NUM 0
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_IRQ_NUM 0
#define DT_N_S_soc_S_interrupt_controller_e000e100_COMPAT_MATCHES_arm_v8m_nvic 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg {3758153984 /* 0xe000e100 */, 3072 /* 0xc00 */}
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_IDX_0 3758153984
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_IDX_1 3072
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_interrupt_controller_e000e100, reg, 0) \
	fn(DT_N_S_soc_S_interrupt_controller_e000e100, reg, 1)
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_e000e100, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_arm_num_irq_priority_bits 3
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_arm_num_irq_priority_bits_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_interrupt_controller 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_interrupt_controller_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible {"arm,v8m-nvic"}
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_IDX_0 "arm,v8m-nvic"
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_interrupt_controller_e000e100, compatible, 0)
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_LEN 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_wakeup_source 0
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/peripheral@50000000
 *
 * Node identifier: DT_N_S_soc_S_peripheral_50000000
 */

/* Node's full path: */
#define DT_N_S_soc_S_peripheral_50000000_PATH "/soc/peripheral@50000000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_peripheral_50000000_FULL_NAME "peripheral@50000000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_peripheral_50000000_PARENT DT_N_S_soc
#define DT_N_S_soc_S_peripheral_50000000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_clkctl_1000) fn(DT_N_S_soc_S_peripheral_50000000_S_clkctl_21000) fn(DT_N_S_soc_S_peripheral_50000000_S_uuid_2f50) fn(DT_N_S_soc_S_peripheral_50000000_S_gpio_0) fn(DT_N_S_soc_S_peripheral_50000000_S_gpio_1) fn(DT_N_S_soc_S_peripheral_50000000_S_gpio_2) fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_106000) fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_107000) fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_108000) fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_109000) fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_122000) fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_123000) fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_124000) fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_125000) fn(DT_N_S_soc_S_peripheral_50000000_S_usbhs_144000) fn(DT_N_S_soc_S_peripheral_50000000_S_spi_126000) fn(DT_N_S_soc_S_peripheral_50000000_S_dma_controller_104000) fn(DT_N_S_soc_S_peripheral_50000000_S_dma_controller_105000) fn(DT_N_S_soc_S_peripheral_50000000_S_timers_113000) fn(DT_N_S_soc_S_peripheral_50000000_S_rtc_30000) fn(DT_N_S_soc_S_peripheral_50000000_S_random_138000) fn(DT_N_S_soc_S_peripheral_50000000_S_pwm_146000) fn(DT_N_S_soc_S_peripheral_50000000_S_watchdog_e000) fn(DT_N_S_soc_S_peripheral_50000000_S_watchdog_2e000) fn(DT_N_S_soc_S_peripheral_50000000_S_usdhc_136000) fn(DT_N_S_soc_S_peripheral_50000000_S_usdhc_137000) fn(DT_N_S_soc_S_peripheral_50000000_S_lpadc_13a0000) fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_28000) fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_29000) fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_2a000) fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_2b000) fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_2c000)
#define DT_N_S_soc_S_peripheral_50000000_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_clkctl_1000, __VA_ARGS__) fn(DT_N_S_soc_S_peripheral_50000000_S_clkctl_21000, __VA_ARGS__) fn(DT_N_S_soc_S_peripheral_50000000_S_uuid_2f50, __VA_ARGS__) fn(DT_N_S_soc_S_peripheral_50000000_S_gpio_0, __VA_ARGS__) fn(DT_N_S_soc_S_peripheral_50000000_S_gpio_1, __VA_ARGS__) fn(DT_N_S_soc_S_peripheral_50000000_S_gpio_2, __VA_ARGS__) fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_106000, __VA_ARGS__) fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_107000, __VA_ARGS__) fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_108000, __VA_ARGS__) fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_109000, __VA_ARGS__) fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_122000, __VA_ARGS__) fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_123000, __VA_ARGS__) fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_124000, __VA_ARGS__) fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_125000, __VA_ARGS__) fn(DT_N_S_soc_S_peripheral_50000000_S_usbhs_144000, __VA_ARGS__) fn(DT_N_S_soc_S_peripheral_50000000_S_spi_126000, __VA_ARGS__) fn(DT_N_S_soc_S_peripheral_50000000_S_dma_controller_104000, __VA_ARGS__) fn(DT_N_S_soc_S_peripheral_50000000_S_dma_controller_105000, __VA_ARGS__) fn(DT_N_S_soc_S_peripheral_50000000_S_timers_113000, __VA_ARGS__) fn(DT_N_S_soc_S_peripheral_50000000_S_rtc_30000, __VA_ARGS__) fn(DT_N_S_soc_S_peripheral_50000000_S_random_138000, __VA_ARGS__) fn(DT_N_S_soc_S_peripheral_50000000_S_pwm_146000, __VA_ARGS__) fn(DT_N_S_soc_S_peripheral_50000000_S_watchdog_e000, __VA_ARGS__) fn(DT_N_S_soc_S_peripheral_50000000_S_watchdog_2e000, __VA_ARGS__) fn(DT_N_S_soc_S_peripheral_50000000_S_usdhc_136000, __VA_ARGS__) fn(DT_N_S_soc_S_peripheral_50000000_S_usdhc_137000, __VA_ARGS__) fn(DT_N_S_soc_S_peripheral_50000000_S_lpadc_13a0000, __VA_ARGS__) fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_28000, __VA_ARGS__) fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_29000, __VA_ARGS__) fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_2a000, __VA_ARGS__) fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_2b000, __VA_ARGS__) fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_2c000, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_clkctl_1000) fn(DT_N_S_soc_S_peripheral_50000000_S_clkctl_21000) fn(DT_N_S_soc_S_peripheral_50000000_S_uuid_2f50) fn(DT_N_S_soc_S_peripheral_50000000_S_gpio_0) fn(DT_N_S_soc_S_peripheral_50000000_S_gpio_1) fn(DT_N_S_soc_S_peripheral_50000000_S_gpio_2) fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_106000) fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_107000) fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_109000) fn(DT_N_S_soc_S_peripheral_50000000_S_usbhs_144000) fn(DT_N_S_soc_S_peripheral_50000000_S_dma_controller_104000) fn(DT_N_S_soc_S_peripheral_50000000_S_timers_113000) fn(DT_N_S_soc_S_peripheral_50000000_S_random_138000) fn(DT_N_S_soc_S_peripheral_50000000_S_pwm_146000) fn(DT_N_S_soc_S_peripheral_50000000_S_watchdog_e000) fn(DT_N_S_soc_S_peripheral_50000000_S_usdhc_136000) fn(DT_N_S_soc_S_peripheral_50000000_S_lpadc_13a0000) fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_28000) fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_29000) fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_2a000) fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_2b000) fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_2c000) 
#define DT_N_S_soc_S_peripheral_50000000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_clkctl_1000, __VA_ARGS__) fn(DT_N_S_soc_S_peripheral_50000000_S_clkctl_21000, __VA_ARGS__) fn(DT_N_S_soc_S_peripheral_50000000_S_uuid_2f50, __VA_ARGS__) fn(DT_N_S_soc_S_peripheral_50000000_S_gpio_0, __VA_ARGS__) fn(DT_N_S_soc_S_peripheral_50000000_S_gpio_1, __VA_ARGS__) fn(DT_N_S_soc_S_peripheral_50000000_S_gpio_2, __VA_ARGS__) fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_106000, __VA_ARGS__) fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_107000, __VA_ARGS__) fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_109000, __VA_ARGS__) fn(DT_N_S_soc_S_peripheral_50000000_S_usbhs_144000, __VA_ARGS__) fn(DT_N_S_soc_S_peripheral_50000000_S_dma_controller_104000, __VA_ARGS__) fn(DT_N_S_soc_S_peripheral_50000000_S_timers_113000, __VA_ARGS__) fn(DT_N_S_soc_S_peripheral_50000000_S_random_138000, __VA_ARGS__) fn(DT_N_S_soc_S_peripheral_50000000_S_pwm_146000, __VA_ARGS__) fn(DT_N_S_soc_S_peripheral_50000000_S_watchdog_e000, __VA_ARGS__) fn(DT_N_S_soc_S_peripheral_50000000_S_usdhc_136000, __VA_ARGS__) fn(DT_N_S_soc_S_peripheral_50000000_S_lpadc_13a0000, __VA_ARGS__) fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_28000, __VA_ARGS__) fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_29000, __VA_ARGS__) fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_2a000, __VA_ARGS__) fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_2b000, __VA_ARGS__) fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_2c000, __VA_ARGS__) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_peripheral_50000000_ORD 12

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_peripheral_50000000_REQUIRES_ORDS \
	10, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_peripheral_50000000_SUPPORTS_ORDS \
	13, /* /soc/peripheral@50000000/gpio@1 */ \
	15, /* /soc/peripheral@50000000/gpio@0 */ \
	22, /* /soc/peripheral@50000000/pwm@146000 */ \
	27, /* /soc/peripheral@50000000/clkctl@1000 */ \
	28, /* /soc/peripheral@50000000/clkctl@21000 */ \
	29, /* /soc/peripheral@50000000/ctimer@28000 */ \
	30, /* /soc/peripheral@50000000/ctimer@29000 */ \
	31, /* /soc/peripheral@50000000/ctimer@2a000 */ \
	32, /* /soc/peripheral@50000000/ctimer@2b000 */ \
	33, /* /soc/peripheral@50000000/ctimer@2c000 */ \
	34, /* /soc/peripheral@50000000/dma-controller@105000 */ \
	35, /* /soc/peripheral@50000000/flexcomm@106000 */ \
	36, /* /soc/peripheral@50000000/dma-controller@104000 */ \
	37, /* /soc/peripheral@50000000/flexcomm@107000 */ \
	38, /* /soc/peripheral@50000000/flexcomm@108000 */ \
	39, /* /soc/peripheral@50000000/flexcomm@109000 */ \
	40, /* /soc/peripheral@50000000/flexcomm@122000 */ \
	41, /* /soc/peripheral@50000000/flexcomm@123000 */ \
	42, /* /soc/peripheral@50000000/flexcomm@124000 */ \
	43, /* /soc/peripheral@50000000/flexcomm@125000 */ \
	44, /* /soc/peripheral@50000000/lpadc@13A0000 */ \
	45, /* /soc/peripheral@50000000/random@138000 */ \
	46, /* /soc/peripheral@50000000/rtc@30000 */ \
	47, /* /soc/peripheral@50000000/spi@126000 */ \
	48, /* /soc/peripheral@50000000/timers@113000 */ \
	49, /* /soc/peripheral@50000000/usbhs@144000 */ \
	50, /* /soc/peripheral@50000000/gpio@2 */ \
	51, /* /soc/peripheral@50000000/usdhc@136000 */ \
	52, /* /soc/peripheral@50000000/usdhc@137000 */ \
	53, /* /soc/peripheral@50000000/uuid@2f50 */ \
	54, /* /soc/peripheral@50000000/watchdog@e000 */ \
	55, /* /soc/peripheral@50000000/watchdog@2e000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_peripheral_50000000_EXISTS 1
#define DT_N_NODELABEL_peripheral DT_N_S_soc_S_peripheral_50000000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_peripheral_50000000_REG_NUM 0
#define DT_N_S_soc_S_peripheral_50000000_RANGES_NUM 1
#define DT_N_S_soc_S_peripheral_50000000_RANGES_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_RANGES_IDX_0_VAL_CHILD_BUS_ADDRESS 0 /* 0x0 */
#define DT_N_S_soc_S_peripheral_50000000_RANGES_IDX_0_VAL_PARENT_BUS_ADDRESS 1342177280 /* 0x50000000 */
#define DT_N_S_soc_S_peripheral_50000000_RANGES_IDX_0_VAL_LENGTH 268435456 /* 0x10000000 */
#define DT_N_S_soc_S_peripheral_50000000_FOREACH_RANGE(fn) fn(DT_N_S_soc_S_peripheral_50000000, 0)
#define DT_N_S_soc_S_peripheral_50000000_IRQ_NUM 0
#define DT_N_S_soc_S_peripheral_50000000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_peripheral_50000000_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /soc/peripheral@50000000/gpio@1
 *
 * Node identifier: DT_N_S_soc_S_peripheral_50000000_S_gpio_1
 *
 * Binding (compatible = nxp,lpc-gpio):
 *   $ZEPHYR_BASE\dts\bindings\gpio\nxp,lpc-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_1_PATH "/soc/peripheral@50000000/gpio@1"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_1_FULL_NAME "gpio@1"

/* Node parent (/soc/peripheral@50000000) identifier: */
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_1_PARENT DT_N_S_soc_S_peripheral_50000000
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_1_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_1_ORD 13

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_1_REQUIRES_ORDS \
	11, /* /soc/interrupt-controller@e000e100 */ \
	12, /* /soc/peripheral@50000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_1_SUPPORTS_ORDS \
	14, /* /gpio_keys/button_0 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_1_EXISTS 1
#define DT_N_INST_1_nxp_lpc_gpio DT_N_S_soc_S_peripheral_50000000_S_gpio_1
#define DT_N_NODELABEL_gpio1     DT_N_S_soc_S_peripheral_50000000_S_gpio_1

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_1_REG_NUM 1
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_1_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_1_REG_IDX_0_VAL_ADDRESS 1343225856 /* 0x50100000 */
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_1_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_1_RANGES_NUM 0
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_1_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_1_IRQ_NUM 4
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_1_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_1_IRQ_IDX_0_VAL_irq 35
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_1_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_1_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_1_IRQ_IDX_0_VAL_priority 2
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_1_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_1_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_1_IRQ_IDX_1_VAL_irq 36
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_1_IRQ_IDX_1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_1_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_1_IRQ_IDX_1_VAL_priority 2
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_1_IRQ_IDX_1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_1_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_1_IRQ_IDX_2_VAL_irq 37
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_1_IRQ_IDX_2_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_1_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_1_IRQ_IDX_2_VAL_priority 2
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_1_IRQ_IDX_2_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_1_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_1_IRQ_IDX_3_VAL_irq 38
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_1_IRQ_IDX_3_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_1_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_1_IRQ_IDX_3_VAL_priority 2
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_1_IRQ_IDX_3_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_1_COMPAT_MATCHES_nxp_lpc_gpio 1
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_1_P_reg {1048576 /* 0x100000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_1_P_reg_IDX_0 1048576
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_1_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_1_P_reg_IDX_1 4096
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_1_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_1_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_gpio_1, reg, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_gpio_1, reg, 1)
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_1_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_gpio_1, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_gpio_1, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_1_P_reg_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_1_P_label "GPIO_1"
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_1_P_label_STRING_TOKEN GPIO_1
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_1_P_label_STRING_UPPER_TOKEN GPIO_1
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_1_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_gpio_1, label, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_gpio_1, label, 1) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_gpio_1, label, 2) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_gpio_1, label, 3) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_gpio_1, label, 4) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_gpio_1, label, 5)
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_1_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_gpio_1, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_gpio_1, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_gpio_1, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_gpio_1, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_gpio_1, label, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_gpio_1, label, 5, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_1_P_label_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_1_P_port 1
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_1_P_port_ENUM_IDX 1
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_1_P_port_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_1_P_gpio_controller 1
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_1_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_1_P_ngpios 32
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_1_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_1_P_status "okay"
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_1_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_1_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_1_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_1_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_1_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_1_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_gpio_1, status, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_gpio_1, status, 1) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_gpio_1, status, 2) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_gpio_1, status, 3)
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_1_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_gpio_1, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_gpio_1, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_gpio_1, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_gpio_1, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_1_P_status_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_1_P_compatible {"nxp,lpc-gpio"}
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_1_P_compatible_IDX_0 "nxp,lpc-gpio"
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_1_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_1_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_gpio_1, compatible, 0)
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_1_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_gpio_1, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_1_P_compatible_LEN 1
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_1_P_compatible_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_1_P_interrupts {35 /* 0x23 */, 2 /* 0x2 */, 36 /* 0x24 */, 2 /* 0x2 */, 37 /* 0x25 */, 2 /* 0x2 */, 38 /* 0x26 */, 2 /* 0x2 */}
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_1_P_interrupts_IDX_0 35
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_1_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_1_P_interrupts_IDX_1 2
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_1_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_1_P_interrupts_IDX_2 36
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_1_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_1_P_interrupts_IDX_3 2
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_1_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_1_P_interrupts_IDX_4 37
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_1_P_interrupts_IDX_4_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_1_P_interrupts_IDX_5 2
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_1_P_interrupts_IDX_5_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_1_P_interrupts_IDX_6 38
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_1_P_interrupts_IDX_6_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_1_P_interrupts_IDX_7 2
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_1_P_interrupts_IDX_7_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_1_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_gpio_1, interrupts, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_gpio_1, interrupts, 1) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_gpio_1, interrupts, 2) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_gpio_1, interrupts, 3) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_gpio_1, interrupts, 4) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_gpio_1, interrupts, 5) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_gpio_1, interrupts, 6) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_gpio_1, interrupts, 7)
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_1_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_gpio_1, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_gpio_1, interrupts, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_gpio_1, interrupts, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_gpio_1, interrupts, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_gpio_1, interrupts, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_gpio_1, interrupts, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_gpio_1, interrupts, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_gpio_1, interrupts, 7, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_1_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_1_P_wakeup_source 0
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_1_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /gpio_keys/button_0
 *
 * Node identifier: DT_N_S_gpio_keys_S_button_0
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_gpio_keys_S_button_0_PATH "/gpio_keys/button_0"

/* Node's name with unit-address: */
#define DT_N_S_gpio_keys_S_button_0_FULL_NAME "button_0"

/* Node parent (/gpio_keys) identifier: */
#define DT_N_S_gpio_keys_S_button_0_PARENT DT_N_S_gpio_keys
#define DT_N_S_gpio_keys_S_button_0_FOREACH_CHILD(fn) 
#define DT_N_S_gpio_keys_S_button_0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_gpio_keys_S_button_0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_gpio_keys_S_button_0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_gpio_keys_S_button_0_ORD 14

/* Ordinals for what this node depends on directly: */
#define DT_N_S_gpio_keys_S_button_0_REQUIRES_ORDS \
	9, /* /gpio_keys */ \
	13, /* /soc/peripheral@50000000/gpio@1 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_gpio_keys_S_button_0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_gpio_keys_S_button_0_EXISTS 1
#define DT_N_ALIAS_sw0               DT_N_S_gpio_keys_S_button_0
#define DT_N_NODELABEL_user_button_1 DT_N_S_gpio_keys_S_button_0

/* Macros for properties that are special in the specification: */
#define DT_N_S_gpio_keys_S_button_0_REG_NUM 0
#define DT_N_S_gpio_keys_S_button_0_RANGES_NUM 0
#define DT_N_S_gpio_keys_S_button_0_FOREACH_RANGE(fn) 
#define DT_N_S_gpio_keys_S_button_0_IRQ_NUM 0
#define DT_N_S_gpio_keys_S_button_0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_gpio_keys_S_button_0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_gpio_keys_S_button_0_P_gpios_IDX_0_EXISTS 1
#define DT_N_S_gpio_keys_S_button_0_P_gpios_IDX_0_PH DT_N_S_soc_S_peripheral_50000000_S_gpio_1
#define DT_N_S_gpio_keys_S_button_0_P_gpios_IDX_0_VAL_pin 1
#define DT_N_S_gpio_keys_S_button_0_P_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_gpio_keys_S_button_0_P_gpios_IDX_0_VAL_flags 1
#define DT_N_S_gpio_keys_S_button_0_P_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_gpio_keys_S_button_0_P_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_gpio_keys_S_button_0, gpios, 0)
#define DT_N_S_gpio_keys_S_button_0_P_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_gpio_keys_S_button_0, gpios, 0, __VA_ARGS__)
#define DT_N_S_gpio_keys_S_button_0_P_gpios_LEN 1
#define DT_N_S_gpio_keys_S_button_0_P_gpios_EXISTS 1
#define DT_N_S_gpio_keys_S_button_0_P_label "User SW1"
#define DT_N_S_gpio_keys_S_button_0_P_label_STRING_TOKEN User_SW1
#define DT_N_S_gpio_keys_S_button_0_P_label_STRING_UPPER_TOKEN USER_SW1
#define DT_N_S_gpio_keys_S_button_0_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_gpio_keys_S_button_0, label, 0) \
	fn(DT_N_S_gpio_keys_S_button_0, label, 1) \
	fn(DT_N_S_gpio_keys_S_button_0, label, 2) \
	fn(DT_N_S_gpio_keys_S_button_0, label, 3) \
	fn(DT_N_S_gpio_keys_S_button_0, label, 4) \
	fn(DT_N_S_gpio_keys_S_button_0, label, 5) \
	fn(DT_N_S_gpio_keys_S_button_0, label, 6) \
	fn(DT_N_S_gpio_keys_S_button_0, label, 7)
#define DT_N_S_gpio_keys_S_button_0_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_gpio_keys_S_button_0, label, 0, __VA_ARGS__) \
	fn(DT_N_S_gpio_keys_S_button_0, label, 1, __VA_ARGS__) \
	fn(DT_N_S_gpio_keys_S_button_0, label, 2, __VA_ARGS__) \
	fn(DT_N_S_gpio_keys_S_button_0, label, 3, __VA_ARGS__) \
	fn(DT_N_S_gpio_keys_S_button_0, label, 4, __VA_ARGS__) \
	fn(DT_N_S_gpio_keys_S_button_0, label, 5, __VA_ARGS__) \
	fn(DT_N_S_gpio_keys_S_button_0, label, 6, __VA_ARGS__) \
	fn(DT_N_S_gpio_keys_S_button_0, label, 7, __VA_ARGS__)
#define DT_N_S_gpio_keys_S_button_0_P_label_EXISTS 1

/*
 * Devicetree node: /soc/peripheral@50000000/gpio@0
 *
 * Node identifier: DT_N_S_soc_S_peripheral_50000000_S_gpio_0
 *
 * Binding (compatible = nxp,lpc-gpio):
 *   $ZEPHYR_BASE\dts\bindings\gpio\nxp,lpc-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_0_PATH "/soc/peripheral@50000000/gpio@0"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_0_FULL_NAME "gpio@0"

/* Node parent (/soc/peripheral@50000000) identifier: */
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_0_PARENT DT_N_S_soc_S_peripheral_50000000
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_0_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_0_ORD 15

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_0_REQUIRES_ORDS \
	11, /* /soc/interrupt-controller@e000e100 */ \
	12, /* /soc/peripheral@50000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_0_SUPPORTS_ORDS \
	16, /* /gpio_keys/button_1 */ \
	18, /* /leds/led_1 */ \
	19, /* /leds/led_2 */ \
	20, /* /leds/led_3 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_0_EXISTS 1
#define DT_N_INST_0_nxp_lpc_gpio DT_N_S_soc_S_peripheral_50000000_S_gpio_0
#define DT_N_NODELABEL_gpio0     DT_N_S_soc_S_peripheral_50000000_S_gpio_0

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_0_REG_NUM 1
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_0_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_0_REG_IDX_0_VAL_ADDRESS 1343225856 /* 0x50100000 */
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_0_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_0_RANGES_NUM 0
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_0_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_0_IRQ_NUM 4
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_0_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_0_IRQ_IDX_0_VAL_irq 4
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_0_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_0_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_0_IRQ_IDX_0_VAL_priority 2
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_0_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_0_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_0_IRQ_IDX_1_VAL_irq 5
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_0_IRQ_IDX_1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_0_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_0_IRQ_IDX_1_VAL_priority 2
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_0_IRQ_IDX_1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_0_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_0_IRQ_IDX_2_VAL_irq 6
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_0_IRQ_IDX_2_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_0_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_0_IRQ_IDX_2_VAL_priority 2
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_0_IRQ_IDX_2_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_0_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_0_IRQ_IDX_3_VAL_irq 7
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_0_IRQ_IDX_3_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_0_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_0_IRQ_IDX_3_VAL_priority 2
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_0_IRQ_IDX_3_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_0_COMPAT_MATCHES_nxp_lpc_gpio 1
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_0_P_reg {1048576 /* 0x100000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_0_P_reg_IDX_0 1048576
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_0_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_0_P_reg_IDX_1 4096
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_0_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_0_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_gpio_0, reg, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_gpio_0, reg, 1)
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_0_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_gpio_0, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_gpio_0, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_0_P_reg_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_0_P_label "GPIO_0"
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_0_P_label_STRING_TOKEN GPIO_0
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_0_P_label_STRING_UPPER_TOKEN GPIO_0
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_0_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_gpio_0, label, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_gpio_0, label, 1) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_gpio_0, label, 2) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_gpio_0, label, 3) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_gpio_0, label, 4) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_gpio_0, label, 5)
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_0_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_gpio_0, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_gpio_0, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_gpio_0, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_gpio_0, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_gpio_0, label, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_gpio_0, label, 5, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_0_P_label_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_0_P_port 0
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_0_P_port_ENUM_IDX 0
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_0_P_port_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_0_P_gpio_controller 1
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_0_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_0_P_ngpios 32
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_0_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_0_P_status "okay"
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_0_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_0_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_0_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_0_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_0_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_0_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_gpio_0, status, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_gpio_0, status, 1) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_gpio_0, status, 2) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_gpio_0, status, 3)
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_0_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_gpio_0, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_gpio_0, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_gpio_0, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_gpio_0, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_0_P_status_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_0_P_compatible {"nxp,lpc-gpio"}
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_0_P_compatible_IDX_0 "nxp,lpc-gpio"
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_0_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_0_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_gpio_0, compatible, 0)
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_0_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_gpio_0, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_0_P_compatible_LEN 1
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_0_P_compatible_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_0_P_interrupts {4 /* 0x4 */, 2 /* 0x2 */, 5 /* 0x5 */, 2 /* 0x2 */, 6 /* 0x6 */, 2 /* 0x2 */, 7 /* 0x7 */, 2 /* 0x2 */}
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_0_P_interrupts_IDX_0 4
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_0_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_0_P_interrupts_IDX_1 2
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_0_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_0_P_interrupts_IDX_2 5
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_0_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_0_P_interrupts_IDX_3 2
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_0_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_0_P_interrupts_IDX_4 6
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_0_P_interrupts_IDX_4_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_0_P_interrupts_IDX_5 2
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_0_P_interrupts_IDX_5_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_0_P_interrupts_IDX_6 7
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_0_P_interrupts_IDX_6_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_0_P_interrupts_IDX_7 2
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_0_P_interrupts_IDX_7_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_0_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_gpio_0, interrupts, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_gpio_0, interrupts, 1) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_gpio_0, interrupts, 2) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_gpio_0, interrupts, 3) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_gpio_0, interrupts, 4) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_gpio_0, interrupts, 5) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_gpio_0, interrupts, 6) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_gpio_0, interrupts, 7)
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_0_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_gpio_0, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_gpio_0, interrupts, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_gpio_0, interrupts, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_gpio_0, interrupts, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_gpio_0, interrupts, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_gpio_0, interrupts, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_gpio_0, interrupts, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_gpio_0, interrupts, 7, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_0_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_0_P_wakeup_source 0
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_0_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /gpio_keys/button_1
 *
 * Node identifier: DT_N_S_gpio_keys_S_button_1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_gpio_keys_S_button_1_PATH "/gpio_keys/button_1"

/* Node's name with unit-address: */
#define DT_N_S_gpio_keys_S_button_1_FULL_NAME "button_1"

/* Node parent (/gpio_keys) identifier: */
#define DT_N_S_gpio_keys_S_button_1_PARENT DT_N_S_gpio_keys
#define DT_N_S_gpio_keys_S_button_1_FOREACH_CHILD(fn) 
#define DT_N_S_gpio_keys_S_button_1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_gpio_keys_S_button_1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_gpio_keys_S_button_1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_gpio_keys_S_button_1_ORD 16

/* Ordinals for what this node depends on directly: */
#define DT_N_S_gpio_keys_S_button_1_REQUIRES_ORDS \
	9, /* /gpio_keys */ \
	15, /* /soc/peripheral@50000000/gpio@0 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_gpio_keys_S_button_1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_gpio_keys_S_button_1_EXISTS 1
#define DT_N_ALIAS_sw1               DT_N_S_gpio_keys_S_button_1
#define DT_N_NODELABEL_user_button_2 DT_N_S_gpio_keys_S_button_1

/* Macros for properties that are special in the specification: */
#define DT_N_S_gpio_keys_S_button_1_REG_NUM 0
#define DT_N_S_gpio_keys_S_button_1_RANGES_NUM 0
#define DT_N_S_gpio_keys_S_button_1_FOREACH_RANGE(fn) 
#define DT_N_S_gpio_keys_S_button_1_IRQ_NUM 0
#define DT_N_S_gpio_keys_S_button_1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_gpio_keys_S_button_1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_gpio_keys_S_button_1_P_gpios_IDX_0_EXISTS 1
#define DT_N_S_gpio_keys_S_button_1_P_gpios_IDX_0_PH DT_N_S_soc_S_peripheral_50000000_S_gpio_0
#define DT_N_S_gpio_keys_S_button_1_P_gpios_IDX_0_VAL_pin 10
#define DT_N_S_gpio_keys_S_button_1_P_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_gpio_keys_S_button_1_P_gpios_IDX_0_VAL_flags 1
#define DT_N_S_gpio_keys_S_button_1_P_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_gpio_keys_S_button_1_P_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_gpio_keys_S_button_1, gpios, 0)
#define DT_N_S_gpio_keys_S_button_1_P_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_gpio_keys_S_button_1, gpios, 0, __VA_ARGS__)
#define DT_N_S_gpio_keys_S_button_1_P_gpios_LEN 1
#define DT_N_S_gpio_keys_S_button_1_P_gpios_EXISTS 1
#define DT_N_S_gpio_keys_S_button_1_P_label "User SW2"
#define DT_N_S_gpio_keys_S_button_1_P_label_STRING_TOKEN User_SW2
#define DT_N_S_gpio_keys_S_button_1_P_label_STRING_UPPER_TOKEN USER_SW2
#define DT_N_S_gpio_keys_S_button_1_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_gpio_keys_S_button_1, label, 0) \
	fn(DT_N_S_gpio_keys_S_button_1, label, 1) \
	fn(DT_N_S_gpio_keys_S_button_1, label, 2) \
	fn(DT_N_S_gpio_keys_S_button_1, label, 3) \
	fn(DT_N_S_gpio_keys_S_button_1, label, 4) \
	fn(DT_N_S_gpio_keys_S_button_1, label, 5) \
	fn(DT_N_S_gpio_keys_S_button_1, label, 6) \
	fn(DT_N_S_gpio_keys_S_button_1, label, 7)
#define DT_N_S_gpio_keys_S_button_1_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_gpio_keys_S_button_1, label, 0, __VA_ARGS__) \
	fn(DT_N_S_gpio_keys_S_button_1, label, 1, __VA_ARGS__) \
	fn(DT_N_S_gpio_keys_S_button_1, label, 2, __VA_ARGS__) \
	fn(DT_N_S_gpio_keys_S_button_1, label, 3, __VA_ARGS__) \
	fn(DT_N_S_gpio_keys_S_button_1, label, 4, __VA_ARGS__) \
	fn(DT_N_S_gpio_keys_S_button_1, label, 5, __VA_ARGS__) \
	fn(DT_N_S_gpio_keys_S_button_1, label, 6, __VA_ARGS__) \
	fn(DT_N_S_gpio_keys_S_button_1, label, 7, __VA_ARGS__)
#define DT_N_S_gpio_keys_S_button_1_P_label_EXISTS 1

/*
 * Devicetree node: /leds
 *
 * Node identifier: DT_N_S_leds
 *
 * Binding (compatible = gpio-leds):
 *   $ZEPHYR_BASE\dts\bindings\gpio\gpio-leds.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_leds_PATH "/leds"

/* Node's name with unit-address: */
#define DT_N_S_leds_FULL_NAME "leds"

/* Node parent (/) identifier: */
#define DT_N_S_leds_PARENT DT_N
#define DT_N_S_leds_FOREACH_CHILD(fn) fn(DT_N_S_leds_S_led_1) fn(DT_N_S_leds_S_led_2) fn(DT_N_S_leds_S_led_3)
#define DT_N_S_leds_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_leds_S_led_1, __VA_ARGS__) fn(DT_N_S_leds_S_led_2, __VA_ARGS__) fn(DT_N_S_leds_S_led_3, __VA_ARGS__)
#define DT_N_S_leds_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_leds_S_led_1) fn(DT_N_S_leds_S_led_2) fn(DT_N_S_leds_S_led_3) 
#define DT_N_S_leds_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_leds_S_led_1, __VA_ARGS__) fn(DT_N_S_leds_S_led_2, __VA_ARGS__) fn(DT_N_S_leds_S_led_3, __VA_ARGS__) 

/* Node's dependency ordinal: */
#define DT_N_S_leds_ORD 17

/* Ordinals for what this node depends on directly: */
#define DT_N_S_leds_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_leds_SUPPORTS_ORDS \
	18, /* /leds/led_1 */ \
	19, /* /leds/led_2 */ \
	20, /* /leds/led_3 */

/* Existence and alternate IDs: */
#define DT_N_S_leds_EXISTS 1
#define DT_N_INST_0_gpio_leds DT_N_S_leds

/* Macros for properties that are special in the specification: */
#define DT_N_S_leds_REG_NUM 0
#define DT_N_S_leds_RANGES_NUM 0
#define DT_N_S_leds_FOREACH_RANGE(fn) 
#define DT_N_S_leds_IRQ_NUM 0
#define DT_N_S_leds_COMPAT_MATCHES_gpio_leds 1
#define DT_N_S_leds_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_leds_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /leds/led_1
 *
 * Node identifier: DT_N_S_leds_S_led_1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_leds_S_led_1_PATH "/leds/led_1"

/* Node's name with unit-address: */
#define DT_N_S_leds_S_led_1_FULL_NAME "led_1"

/* Node parent (/leds) identifier: */
#define DT_N_S_leds_S_led_1_PARENT DT_N_S_leds
#define DT_N_S_leds_S_led_1_FOREACH_CHILD(fn) 
#define DT_N_S_leds_S_led_1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_leds_S_led_1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_leds_S_led_1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_leds_S_led_1_ORD 18

/* Ordinals for what this node depends on directly: */
#define DT_N_S_leds_S_led_1_REQUIRES_ORDS \
	15, /* /soc/peripheral@50000000/gpio@0 */ \
	17, /* /leds */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_leds_S_led_1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_leds_S_led_1_EXISTS 1
#define DT_N_ALIAS_led0          DT_N_S_leds_S_led_1
#define DT_N_NODELABEL_green_led DT_N_S_leds_S_led_1

/* Macros for properties that are special in the specification: */
#define DT_N_S_leds_S_led_1_REG_NUM 0
#define DT_N_S_leds_S_led_1_RANGES_NUM 0
#define DT_N_S_leds_S_led_1_FOREACH_RANGE(fn) 
#define DT_N_S_leds_S_led_1_IRQ_NUM 0
#define DT_N_S_leds_S_led_1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_leds_S_led_1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_leds_S_led_1_P_gpios_IDX_0_EXISTS 1
#define DT_N_S_leds_S_led_1_P_gpios_IDX_0_PH DT_N_S_soc_S_peripheral_50000000_S_gpio_0
#define DT_N_S_leds_S_led_1_P_gpios_IDX_0_VAL_pin 14
#define DT_N_S_leds_S_led_1_P_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_leds_S_led_1_P_gpios_IDX_0_VAL_flags 0
#define DT_N_S_leds_S_led_1_P_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_leds_S_led_1_P_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_leds_S_led_1, gpios, 0)
#define DT_N_S_leds_S_led_1_P_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_leds_S_led_1, gpios, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_1_P_gpios_LEN 1
#define DT_N_S_leds_S_led_1_P_gpios_EXISTS 1
#define DT_N_S_leds_S_led_1_P_label "User LED_GREEN"
#define DT_N_S_leds_S_led_1_P_label_STRING_TOKEN User_LED_GREEN
#define DT_N_S_leds_S_led_1_P_label_STRING_UPPER_TOKEN USER_LED_GREEN
#define DT_N_S_leds_S_led_1_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_leds_S_led_1, label, 0) \
	fn(DT_N_S_leds_S_led_1, label, 1) \
	fn(DT_N_S_leds_S_led_1, label, 2) \
	fn(DT_N_S_leds_S_led_1, label, 3) \
	fn(DT_N_S_leds_S_led_1, label, 4) \
	fn(DT_N_S_leds_S_led_1, label, 5) \
	fn(DT_N_S_leds_S_led_1, label, 6) \
	fn(DT_N_S_leds_S_led_1, label, 7) \
	fn(DT_N_S_leds_S_led_1, label, 8) \
	fn(DT_N_S_leds_S_led_1, label, 9) \
	fn(DT_N_S_leds_S_led_1, label, 10) \
	fn(DT_N_S_leds_S_led_1, label, 11) \
	fn(DT_N_S_leds_S_led_1, label, 12) \
	fn(DT_N_S_leds_S_led_1, label, 13)
#define DT_N_S_leds_S_led_1_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_leds_S_led_1, label, 0, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_1, label, 1, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_1, label, 2, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_1, label, 3, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_1, label, 4, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_1, label, 5, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_1, label, 6, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_1, label, 7, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_1, label, 8, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_1, label, 9, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_1, label, 10, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_1, label, 11, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_1, label, 12, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_1, label, 13, __VA_ARGS__)
#define DT_N_S_leds_S_led_1_P_label_EXISTS 1

/*
 * Devicetree node: /leds/led_2
 *
 * Node identifier: DT_N_S_leds_S_led_2
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_leds_S_led_2_PATH "/leds/led_2"

/* Node's name with unit-address: */
#define DT_N_S_leds_S_led_2_FULL_NAME "led_2"

/* Node parent (/leds) identifier: */
#define DT_N_S_leds_S_led_2_PARENT DT_N_S_leds
#define DT_N_S_leds_S_led_2_FOREACH_CHILD(fn) 
#define DT_N_S_leds_S_led_2_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_leds_S_led_2_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_leds_S_led_2_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_leds_S_led_2_ORD 19

/* Ordinals for what this node depends on directly: */
#define DT_N_S_leds_S_led_2_REQUIRES_ORDS \
	15, /* /soc/peripheral@50000000/gpio@0 */ \
	17, /* /leds */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_leds_S_led_2_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_leds_S_led_2_EXISTS 1
#define DT_N_ALIAS_led1         DT_N_S_leds_S_led_2
#define DT_N_NODELABEL_blue_led DT_N_S_leds_S_led_2

/* Macros for properties that are special in the specification: */
#define DT_N_S_leds_S_led_2_REG_NUM 0
#define DT_N_S_leds_S_led_2_RANGES_NUM 0
#define DT_N_S_leds_S_led_2_FOREACH_RANGE(fn) 
#define DT_N_S_leds_S_led_2_IRQ_NUM 0
#define DT_N_S_leds_S_led_2_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_leds_S_led_2_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_leds_S_led_2_P_gpios_IDX_0_EXISTS 1
#define DT_N_S_leds_S_led_2_P_gpios_IDX_0_PH DT_N_S_soc_S_peripheral_50000000_S_gpio_0
#define DT_N_S_leds_S_led_2_P_gpios_IDX_0_VAL_pin 26
#define DT_N_S_leds_S_led_2_P_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_leds_S_led_2_P_gpios_IDX_0_VAL_flags 0
#define DT_N_S_leds_S_led_2_P_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_leds_S_led_2_P_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_leds_S_led_2, gpios, 0)
#define DT_N_S_leds_S_led_2_P_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_leds_S_led_2, gpios, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_2_P_gpios_LEN 1
#define DT_N_S_leds_S_led_2_P_gpios_EXISTS 1
#define DT_N_S_leds_S_led_2_P_label "User LED_BLUE"
#define DT_N_S_leds_S_led_2_P_label_STRING_TOKEN User_LED_BLUE
#define DT_N_S_leds_S_led_2_P_label_STRING_UPPER_TOKEN USER_LED_BLUE
#define DT_N_S_leds_S_led_2_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_leds_S_led_2, label, 0) \
	fn(DT_N_S_leds_S_led_2, label, 1) \
	fn(DT_N_S_leds_S_led_2, label, 2) \
	fn(DT_N_S_leds_S_led_2, label, 3) \
	fn(DT_N_S_leds_S_led_2, label, 4) \
	fn(DT_N_S_leds_S_led_2, label, 5) \
	fn(DT_N_S_leds_S_led_2, label, 6) \
	fn(DT_N_S_leds_S_led_2, label, 7) \
	fn(DT_N_S_leds_S_led_2, label, 8) \
	fn(DT_N_S_leds_S_led_2, label, 9) \
	fn(DT_N_S_leds_S_led_2, label, 10) \
	fn(DT_N_S_leds_S_led_2, label, 11) \
	fn(DT_N_S_leds_S_led_2, label, 12)
#define DT_N_S_leds_S_led_2_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_leds_S_led_2, label, 0, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_2, label, 1, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_2, label, 2, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_2, label, 3, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_2, label, 4, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_2, label, 5, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_2, label, 6, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_2, label, 7, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_2, label, 8, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_2, label, 9, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_2, label, 10, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_2, label, 11, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_2, label, 12, __VA_ARGS__)
#define DT_N_S_leds_S_led_2_P_label_EXISTS 1

/*
 * Devicetree node: /leds/led_3
 *
 * Node identifier: DT_N_S_leds_S_led_3
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_leds_S_led_3_PATH "/leds/led_3"

/* Node's name with unit-address: */
#define DT_N_S_leds_S_led_3_FULL_NAME "led_3"

/* Node parent (/leds) identifier: */
#define DT_N_S_leds_S_led_3_PARENT DT_N_S_leds
#define DT_N_S_leds_S_led_3_FOREACH_CHILD(fn) 
#define DT_N_S_leds_S_led_3_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_leds_S_led_3_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_leds_S_led_3_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_leds_S_led_3_ORD 20

/* Ordinals for what this node depends on directly: */
#define DT_N_S_leds_S_led_3_REQUIRES_ORDS \
	15, /* /soc/peripheral@50000000/gpio@0 */ \
	17, /* /leds */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_leds_S_led_3_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_leds_S_led_3_EXISTS 1
#define DT_N_ALIAS_led2        DT_N_S_leds_S_led_3
#define DT_N_NODELABEL_red_led DT_N_S_leds_S_led_3

/* Macros for properties that are special in the specification: */
#define DT_N_S_leds_S_led_3_REG_NUM 0
#define DT_N_S_leds_S_led_3_RANGES_NUM 0
#define DT_N_S_leds_S_led_3_FOREACH_RANGE(fn) 
#define DT_N_S_leds_S_led_3_IRQ_NUM 0
#define DT_N_S_leds_S_led_3_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_leds_S_led_3_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_leds_S_led_3_P_gpios_IDX_0_EXISTS 1
#define DT_N_S_leds_S_led_3_P_gpios_IDX_0_PH DT_N_S_soc_S_peripheral_50000000_S_gpio_0
#define DT_N_S_leds_S_led_3_P_gpios_IDX_0_VAL_pin 31
#define DT_N_S_leds_S_led_3_P_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_leds_S_led_3_P_gpios_IDX_0_VAL_flags 0
#define DT_N_S_leds_S_led_3_P_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_leds_S_led_3_P_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_leds_S_led_3, gpios, 0)
#define DT_N_S_leds_S_led_3_P_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_leds_S_led_3, gpios, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_3_P_gpios_LEN 1
#define DT_N_S_leds_S_led_3_P_gpios_EXISTS 1
#define DT_N_S_leds_S_led_3_P_label "User LED_RED"
#define DT_N_S_leds_S_led_3_P_label_STRING_TOKEN User_LED_RED
#define DT_N_S_leds_S_led_3_P_label_STRING_UPPER_TOKEN USER_LED_RED
#define DT_N_S_leds_S_led_3_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_leds_S_led_3, label, 0) \
	fn(DT_N_S_leds_S_led_3, label, 1) \
	fn(DT_N_S_leds_S_led_3, label, 2) \
	fn(DT_N_S_leds_S_led_3, label, 3) \
	fn(DT_N_S_leds_S_led_3, label, 4) \
	fn(DT_N_S_leds_S_led_3, label, 5) \
	fn(DT_N_S_leds_S_led_3, label, 6) \
	fn(DT_N_S_leds_S_led_3, label, 7) \
	fn(DT_N_S_leds_S_led_3, label, 8) \
	fn(DT_N_S_leds_S_led_3, label, 9) \
	fn(DT_N_S_leds_S_led_3, label, 10) \
	fn(DT_N_S_leds_S_led_3, label, 11)
#define DT_N_S_leds_S_led_3_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_leds_S_led_3, label, 0, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_3, label, 1, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_3, label, 2, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_3, label, 3, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_3, label, 4, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_3, label, 5, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_3, label, 6, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_3, label, 7, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_3, label, 8, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_3, label, 9, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_3, label, 10, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_3, label, 11, __VA_ARGS__)
#define DT_N_S_leds_S_led_3_P_label_EXISTS 1

/*
 * Devicetree node: /pwmleds
 *
 * Node identifier: DT_N_S_pwmleds
 *
 * Binding (compatible = pwm-leds):
 *   $ZEPHYR_BASE\dts\bindings\led\pwm-leds.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pwmleds_PATH "/pwmleds"

/* Node's name with unit-address: */
#define DT_N_S_pwmleds_FULL_NAME "pwmleds"

/* Node parent (/) identifier: */
#define DT_N_S_pwmleds_PARENT DT_N
#define DT_N_S_pwmleds_FOREACH_CHILD(fn) fn(DT_N_S_pwmleds_S_green_pwm_led) fn(DT_N_S_pwmleds_S_blue_pwm_led) fn(DT_N_S_pwmleds_S_red_pwm_led)
#define DT_N_S_pwmleds_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_pwmleds_S_green_pwm_led, __VA_ARGS__) fn(DT_N_S_pwmleds_S_blue_pwm_led, __VA_ARGS__) fn(DT_N_S_pwmleds_S_red_pwm_led, __VA_ARGS__)
#define DT_N_S_pwmleds_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_pwmleds_S_green_pwm_led) fn(DT_N_S_pwmleds_S_blue_pwm_led) 
#define DT_N_S_pwmleds_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_pwmleds_S_green_pwm_led, __VA_ARGS__) fn(DT_N_S_pwmleds_S_blue_pwm_led, __VA_ARGS__) 

/* Node's dependency ordinal: */
#define DT_N_S_pwmleds_ORD 21

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pwmleds_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pwmleds_SUPPORTS_ORDS \
	23, /* /pwmleds/blue_pwm_led */ \
	24, /* /pwmleds/green_pwm_led */ \
	25, /* /pwmleds/red_pwm_led */

/* Existence and alternate IDs: */
#define DT_N_S_pwmleds_EXISTS 1
#define DT_N_INST_0_pwm_leds DT_N_S_pwmleds

/* Macros for properties that are special in the specification: */
#define DT_N_S_pwmleds_REG_NUM 0
#define DT_N_S_pwmleds_RANGES_NUM 0
#define DT_N_S_pwmleds_FOREACH_RANGE(fn) 
#define DT_N_S_pwmleds_IRQ_NUM 0
#define DT_N_S_pwmleds_COMPAT_MATCHES_pwm_leds 1
#define DT_N_S_pwmleds_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pwmleds_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /soc/peripheral@50000000/pwm@146000
 *
 * Node identifier: DT_N_S_soc_S_peripheral_50000000_S_pwm_146000
 *
 * Binding (compatible = nxp,sctimer-pwm):
 *   $ZEPHYR_BASE\dts\bindings\pwm\nxp,sctimer-pwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_146000_PATH "/soc/peripheral@50000000/pwm@146000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_146000_FULL_NAME "pwm@146000"

/* Node parent (/soc/peripheral@50000000) identifier: */
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_146000_PARENT DT_N_S_soc_S_peripheral_50000000
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_146000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_146000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_146000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_146000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_146000_ORD 22

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_146000_REQUIRES_ORDS \
	11, /* /soc/interrupt-controller@e000e100 */ \
	12, /* /soc/peripheral@50000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_146000_SUPPORTS_ORDS \
	23, /* /pwmleds/blue_pwm_led */ \
	24, /* /pwmleds/green_pwm_led */ \
	25, /* /pwmleds/red_pwm_led */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_146000_EXISTS 1
#define DT_N_ALIAS_pwm_0            DT_N_S_soc_S_peripheral_50000000_S_pwm_146000
#define DT_N_INST_0_nxp_sctimer_pwm DT_N_S_soc_S_peripheral_50000000_S_pwm_146000
#define DT_N_NODELABEL_sc_timer     DT_N_S_soc_S_peripheral_50000000_S_pwm_146000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_146000_REG_NUM 1
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_146000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_146000_REG_IDX_0_VAL_ADDRESS 1343512576 /* 0x50146000 */
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_146000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_146000_RANGES_NUM 0
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_146000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_146000_IRQ_NUM 1
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_146000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_146000_IRQ_IDX_0_VAL_irq 12
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_146000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_146000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_146000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_146000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_146000_COMPAT_MATCHES_nxp_sctimer_pwm 1
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_146000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_146000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_146000_P_prescaler 8
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_146000_P_prescaler_ENUM_IDX 3
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_146000_P_prescaler_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_146000_P_label "SC_TIMER"
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_146000_P_label_STRING_TOKEN SC_TIMER
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_146000_P_label_STRING_UPPER_TOKEN SC_TIMER
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_146000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_pwm_146000, label, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_pwm_146000, label, 1) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_pwm_146000, label, 2) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_pwm_146000, label, 3) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_pwm_146000, label, 4) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_pwm_146000, label, 5) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_pwm_146000, label, 6) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_pwm_146000, label, 7)
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_146000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_pwm_146000, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_pwm_146000, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_pwm_146000, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_pwm_146000, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_pwm_146000, label, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_pwm_146000, label, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_pwm_146000, label, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_pwm_146000, label, 7, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_146000_P_label_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_146000_P_status "okay"
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_146000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_146000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_146000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_146000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_146000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_146000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_pwm_146000, status, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_pwm_146000, status, 1) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_pwm_146000, status, 2) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_pwm_146000, status, 3)
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_146000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_pwm_146000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_pwm_146000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_pwm_146000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_pwm_146000, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_146000_P_status_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_146000_P_compatible {"nxp,sctimer-pwm"}
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_146000_P_compatible_IDX_0 "nxp,sctimer-pwm"
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_146000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_146000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_pwm_146000, compatible, 0)
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_146000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_pwm_146000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_146000_P_compatible_LEN 1
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_146000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_146000_P_reg {1335296 /* 0x146000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_146000_P_reg_IDX_0 1335296
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_146000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_146000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_146000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_146000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_pwm_146000, reg, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_pwm_146000, reg, 1)
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_146000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_pwm_146000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_pwm_146000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_146000_P_reg_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_146000_P_interrupts {12 /* 0xc */, 0 /* 0x0 */}
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_146000_P_interrupts_IDX_0 12
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_146000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_146000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_146000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_146000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_pwm_146000, interrupts, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_pwm_146000, interrupts, 1)
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_146000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_pwm_146000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_pwm_146000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_146000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_146000_P_wakeup_source 0
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_146000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /pwmleds/blue_pwm_led
 *
 * Node identifier: DT_N_S_pwmleds_S_blue_pwm_led
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pwmleds_S_blue_pwm_led_PATH "/pwmleds/blue_pwm_led"

/* Node's name with unit-address: */
#define DT_N_S_pwmleds_S_blue_pwm_led_FULL_NAME "blue_pwm_led"

/* Node parent (/pwmleds) identifier: */
#define DT_N_S_pwmleds_S_blue_pwm_led_PARENT DT_N_S_pwmleds
#define DT_N_S_pwmleds_S_blue_pwm_led_FOREACH_CHILD(fn) 
#define DT_N_S_pwmleds_S_blue_pwm_led_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_pwmleds_S_blue_pwm_led_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_pwmleds_S_blue_pwm_led_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_pwmleds_S_blue_pwm_led_ORD 23

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pwmleds_S_blue_pwm_led_REQUIRES_ORDS \
	21, /* /pwmleds */ \
	22, /* /soc/peripheral@50000000/pwm@146000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pwmleds_S_blue_pwm_led_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_pwmleds_S_blue_pwm_led_EXISTS 1
#define DT_N_ALIAS_blue_pwm_led     DT_N_S_pwmleds_S_blue_pwm_led
#define DT_N_NODELABEL_blue_pwm_led DT_N_S_pwmleds_S_blue_pwm_led

/* Macros for properties that are special in the specification: */
#define DT_N_S_pwmleds_S_blue_pwm_led_REG_NUM 0
#define DT_N_S_pwmleds_S_blue_pwm_led_RANGES_NUM 0
#define DT_N_S_pwmleds_S_blue_pwm_led_FOREACH_RANGE(fn) 
#define DT_N_S_pwmleds_S_blue_pwm_led_IRQ_NUM 0
#define DT_N_S_pwmleds_S_blue_pwm_led_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pwmleds_S_blue_pwm_led_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_pwmleds_S_blue_pwm_led_P_pwms_IDX_0_EXISTS 1
#define DT_N_S_pwmleds_S_blue_pwm_led_P_pwms_IDX_0_PH DT_N_S_soc_S_peripheral_50000000_S_pwm_146000
#define DT_N_S_pwmleds_S_blue_pwm_led_P_pwms_IDX_0_VAL_channel 6
#define DT_N_S_pwmleds_S_blue_pwm_led_P_pwms_IDX_0_VAL_channel_EXISTS 1
#define DT_N_S_pwmleds_S_blue_pwm_led_P_pwms_IDX_0_VAL_flags 0
#define DT_N_S_pwmleds_S_blue_pwm_led_P_pwms_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_pwmleds_S_blue_pwm_led_P_pwms_FOREACH_PROP_ELEM(fn) fn(DT_N_S_pwmleds_S_blue_pwm_led, pwms, 0)
#define DT_N_S_pwmleds_S_blue_pwm_led_P_pwms_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_pwmleds_S_blue_pwm_led, pwms, 0, __VA_ARGS__)
#define DT_N_S_pwmleds_S_blue_pwm_led_P_pwms_LEN 1
#define DT_N_S_pwmleds_S_blue_pwm_led_P_pwms_EXISTS 1
#define DT_N_S_pwmleds_S_blue_pwm_led_P_label "Blue PWM LED"
#define DT_N_S_pwmleds_S_blue_pwm_led_P_label_STRING_TOKEN Blue_PWM_LED
#define DT_N_S_pwmleds_S_blue_pwm_led_P_label_STRING_UPPER_TOKEN BLUE_PWM_LED
#define DT_N_S_pwmleds_S_blue_pwm_led_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_pwmleds_S_blue_pwm_led, label, 0) \
	fn(DT_N_S_pwmleds_S_blue_pwm_led, label, 1) \
	fn(DT_N_S_pwmleds_S_blue_pwm_led, label, 2) \
	fn(DT_N_S_pwmleds_S_blue_pwm_led, label, 3) \
	fn(DT_N_S_pwmleds_S_blue_pwm_led, label, 4) \
	fn(DT_N_S_pwmleds_S_blue_pwm_led, label, 5) \
	fn(DT_N_S_pwmleds_S_blue_pwm_led, label, 6) \
	fn(DT_N_S_pwmleds_S_blue_pwm_led, label, 7) \
	fn(DT_N_S_pwmleds_S_blue_pwm_led, label, 8) \
	fn(DT_N_S_pwmleds_S_blue_pwm_led, label, 9) \
	fn(DT_N_S_pwmleds_S_blue_pwm_led, label, 10) \
	fn(DT_N_S_pwmleds_S_blue_pwm_led, label, 11)
#define DT_N_S_pwmleds_S_blue_pwm_led_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_pwmleds_S_blue_pwm_led, label, 0, __VA_ARGS__) \
	fn(DT_N_S_pwmleds_S_blue_pwm_led, label, 1, __VA_ARGS__) \
	fn(DT_N_S_pwmleds_S_blue_pwm_led, label, 2, __VA_ARGS__) \
	fn(DT_N_S_pwmleds_S_blue_pwm_led, label, 3, __VA_ARGS__) \
	fn(DT_N_S_pwmleds_S_blue_pwm_led, label, 4, __VA_ARGS__) \
	fn(DT_N_S_pwmleds_S_blue_pwm_led, label, 5, __VA_ARGS__) \
	fn(DT_N_S_pwmleds_S_blue_pwm_led, label, 6, __VA_ARGS__) \
	fn(DT_N_S_pwmleds_S_blue_pwm_led, label, 7, __VA_ARGS__) \
	fn(DT_N_S_pwmleds_S_blue_pwm_led, label, 8, __VA_ARGS__) \
	fn(DT_N_S_pwmleds_S_blue_pwm_led, label, 9, __VA_ARGS__) \
	fn(DT_N_S_pwmleds_S_blue_pwm_led, label, 10, __VA_ARGS__) \
	fn(DT_N_S_pwmleds_S_blue_pwm_led, label, 11, __VA_ARGS__)
#define DT_N_S_pwmleds_S_blue_pwm_led_P_label_EXISTS 1

/*
 * Devicetree node: /pwmleds/green_pwm_led
 *
 * Node identifier: DT_N_S_pwmleds_S_green_pwm_led
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pwmleds_S_green_pwm_led_PATH "/pwmleds/green_pwm_led"

/* Node's name with unit-address: */
#define DT_N_S_pwmleds_S_green_pwm_led_FULL_NAME "green_pwm_led"

/* Node parent (/pwmleds) identifier: */
#define DT_N_S_pwmleds_S_green_pwm_led_PARENT DT_N_S_pwmleds
#define DT_N_S_pwmleds_S_green_pwm_led_FOREACH_CHILD(fn) 
#define DT_N_S_pwmleds_S_green_pwm_led_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_pwmleds_S_green_pwm_led_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_pwmleds_S_green_pwm_led_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_pwmleds_S_green_pwm_led_ORD 24

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pwmleds_S_green_pwm_led_REQUIRES_ORDS \
	21, /* /pwmleds */ \
	22, /* /soc/peripheral@50000000/pwm@146000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pwmleds_S_green_pwm_led_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_pwmleds_S_green_pwm_led_EXISTS 1
#define DT_N_ALIAS_pwm_led0          DT_N_S_pwmleds_S_green_pwm_led
#define DT_N_ALIAS_green_pwm_led     DT_N_S_pwmleds_S_green_pwm_led
#define DT_N_NODELABEL_green_pwm_led DT_N_S_pwmleds_S_green_pwm_led

/* Macros for properties that are special in the specification: */
#define DT_N_S_pwmleds_S_green_pwm_led_REG_NUM 0
#define DT_N_S_pwmleds_S_green_pwm_led_RANGES_NUM 0
#define DT_N_S_pwmleds_S_green_pwm_led_FOREACH_RANGE(fn) 
#define DT_N_S_pwmleds_S_green_pwm_led_IRQ_NUM 0
#define DT_N_S_pwmleds_S_green_pwm_led_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pwmleds_S_green_pwm_led_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_pwmleds_S_green_pwm_led_P_pwms_IDX_0_EXISTS 1
#define DT_N_S_pwmleds_S_green_pwm_led_P_pwms_IDX_0_PH DT_N_S_soc_S_peripheral_50000000_S_pwm_146000
#define DT_N_S_pwmleds_S_green_pwm_led_P_pwms_IDX_0_VAL_channel 0
#define DT_N_S_pwmleds_S_green_pwm_led_P_pwms_IDX_0_VAL_channel_EXISTS 1
#define DT_N_S_pwmleds_S_green_pwm_led_P_pwms_IDX_0_VAL_flags 0
#define DT_N_S_pwmleds_S_green_pwm_led_P_pwms_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_pwmleds_S_green_pwm_led_P_pwms_FOREACH_PROP_ELEM(fn) fn(DT_N_S_pwmleds_S_green_pwm_led, pwms, 0)
#define DT_N_S_pwmleds_S_green_pwm_led_P_pwms_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_pwmleds_S_green_pwm_led, pwms, 0, __VA_ARGS__)
#define DT_N_S_pwmleds_S_green_pwm_led_P_pwms_LEN 1
#define DT_N_S_pwmleds_S_green_pwm_led_P_pwms_EXISTS 1
#define DT_N_S_pwmleds_S_green_pwm_led_P_label "Green PWM LED"
#define DT_N_S_pwmleds_S_green_pwm_led_P_label_STRING_TOKEN Green_PWM_LED
#define DT_N_S_pwmleds_S_green_pwm_led_P_label_STRING_UPPER_TOKEN GREEN_PWM_LED
#define DT_N_S_pwmleds_S_green_pwm_led_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_pwmleds_S_green_pwm_led, label, 0) \
	fn(DT_N_S_pwmleds_S_green_pwm_led, label, 1) \
	fn(DT_N_S_pwmleds_S_green_pwm_led, label, 2) \
	fn(DT_N_S_pwmleds_S_green_pwm_led, label, 3) \
	fn(DT_N_S_pwmleds_S_green_pwm_led, label, 4) \
	fn(DT_N_S_pwmleds_S_green_pwm_led, label, 5) \
	fn(DT_N_S_pwmleds_S_green_pwm_led, label, 6) \
	fn(DT_N_S_pwmleds_S_green_pwm_led, label, 7) \
	fn(DT_N_S_pwmleds_S_green_pwm_led, label, 8) \
	fn(DT_N_S_pwmleds_S_green_pwm_led, label, 9) \
	fn(DT_N_S_pwmleds_S_green_pwm_led, label, 10) \
	fn(DT_N_S_pwmleds_S_green_pwm_led, label, 11) \
	fn(DT_N_S_pwmleds_S_green_pwm_led, label, 12)
#define DT_N_S_pwmleds_S_green_pwm_led_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_pwmleds_S_green_pwm_led, label, 0, __VA_ARGS__) \
	fn(DT_N_S_pwmleds_S_green_pwm_led, label, 1, __VA_ARGS__) \
	fn(DT_N_S_pwmleds_S_green_pwm_led, label, 2, __VA_ARGS__) \
	fn(DT_N_S_pwmleds_S_green_pwm_led, label, 3, __VA_ARGS__) \
	fn(DT_N_S_pwmleds_S_green_pwm_led, label, 4, __VA_ARGS__) \
	fn(DT_N_S_pwmleds_S_green_pwm_led, label, 5, __VA_ARGS__) \
	fn(DT_N_S_pwmleds_S_green_pwm_led, label, 6, __VA_ARGS__) \
	fn(DT_N_S_pwmleds_S_green_pwm_led, label, 7, __VA_ARGS__) \
	fn(DT_N_S_pwmleds_S_green_pwm_led, label, 8, __VA_ARGS__) \
	fn(DT_N_S_pwmleds_S_green_pwm_led, label, 9, __VA_ARGS__) \
	fn(DT_N_S_pwmleds_S_green_pwm_led, label, 10, __VA_ARGS__) \
	fn(DT_N_S_pwmleds_S_green_pwm_led, label, 11, __VA_ARGS__) \
	fn(DT_N_S_pwmleds_S_green_pwm_led, label, 12, __VA_ARGS__)
#define DT_N_S_pwmleds_S_green_pwm_led_P_label_EXISTS 1

/*
 * Devicetree node: /pwmleds/red_pwm_led
 *
 * Node identifier: DT_N_S_pwmleds_S_red_pwm_led
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pwmleds_S_red_pwm_led_PATH "/pwmleds/red_pwm_led"

/* Node's name with unit-address: */
#define DT_N_S_pwmleds_S_red_pwm_led_FULL_NAME "red_pwm_led"

/* Node parent (/pwmleds) identifier: */
#define DT_N_S_pwmleds_S_red_pwm_led_PARENT DT_N_S_pwmleds
#define DT_N_S_pwmleds_S_red_pwm_led_FOREACH_CHILD(fn) 
#define DT_N_S_pwmleds_S_red_pwm_led_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_pwmleds_S_red_pwm_led_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_pwmleds_S_red_pwm_led_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_pwmleds_S_red_pwm_led_ORD 25

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pwmleds_S_red_pwm_led_REQUIRES_ORDS \
	21, /* /pwmleds */ \
	22, /* /soc/peripheral@50000000/pwm@146000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pwmleds_S_red_pwm_led_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_pwmleds_S_red_pwm_led_EXISTS 1
#define DT_N_ALIAS_red_pwm_led     DT_N_S_pwmleds_S_red_pwm_led
#define DT_N_NODELABEL_red_pwm_led DT_N_S_pwmleds_S_red_pwm_led

/* Macros for properties that are special in the specification: */
#define DT_N_S_pwmleds_S_red_pwm_led_REG_NUM 0
#define DT_N_S_pwmleds_S_red_pwm_led_RANGES_NUM 0
#define DT_N_S_pwmleds_S_red_pwm_led_FOREACH_RANGE(fn) 
#define DT_N_S_pwmleds_S_red_pwm_led_IRQ_NUM 0
#define DT_N_S_pwmleds_S_red_pwm_led_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pwmleds_S_red_pwm_led_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_pwmleds_S_red_pwm_led_P_pwms_IDX_0_EXISTS 1
#define DT_N_S_pwmleds_S_red_pwm_led_P_pwms_IDX_0_PH DT_N_S_soc_S_peripheral_50000000_S_pwm_146000
#define DT_N_S_pwmleds_S_red_pwm_led_P_pwms_IDX_0_VAL_channel 6
#define DT_N_S_pwmleds_S_red_pwm_led_P_pwms_IDX_0_VAL_channel_EXISTS 1
#define DT_N_S_pwmleds_S_red_pwm_led_P_pwms_IDX_0_VAL_flags 0
#define DT_N_S_pwmleds_S_red_pwm_led_P_pwms_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_pwmleds_S_red_pwm_led_P_pwms_FOREACH_PROP_ELEM(fn) fn(DT_N_S_pwmleds_S_red_pwm_led, pwms, 0)
#define DT_N_S_pwmleds_S_red_pwm_led_P_pwms_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_pwmleds_S_red_pwm_led, pwms, 0, __VA_ARGS__)
#define DT_N_S_pwmleds_S_red_pwm_led_P_pwms_LEN 1
#define DT_N_S_pwmleds_S_red_pwm_led_P_pwms_EXISTS 1
#define DT_N_S_pwmleds_S_red_pwm_led_P_label "Red PWM LED"
#define DT_N_S_pwmleds_S_red_pwm_led_P_label_STRING_TOKEN Red_PWM_LED
#define DT_N_S_pwmleds_S_red_pwm_led_P_label_STRING_UPPER_TOKEN RED_PWM_LED
#define DT_N_S_pwmleds_S_red_pwm_led_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_pwmleds_S_red_pwm_led, label, 0) \
	fn(DT_N_S_pwmleds_S_red_pwm_led, label, 1) \
	fn(DT_N_S_pwmleds_S_red_pwm_led, label, 2) \
	fn(DT_N_S_pwmleds_S_red_pwm_led, label, 3) \
	fn(DT_N_S_pwmleds_S_red_pwm_led, label, 4) \
	fn(DT_N_S_pwmleds_S_red_pwm_led, label, 5) \
	fn(DT_N_S_pwmleds_S_red_pwm_led, label, 6) \
	fn(DT_N_S_pwmleds_S_red_pwm_led, label, 7) \
	fn(DT_N_S_pwmleds_S_red_pwm_led, label, 8) \
	fn(DT_N_S_pwmleds_S_red_pwm_led, label, 9) \
	fn(DT_N_S_pwmleds_S_red_pwm_led, label, 10)
#define DT_N_S_pwmleds_S_red_pwm_led_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_pwmleds_S_red_pwm_led, label, 0, __VA_ARGS__) \
	fn(DT_N_S_pwmleds_S_red_pwm_led, label, 1, __VA_ARGS__) \
	fn(DT_N_S_pwmleds_S_red_pwm_led, label, 2, __VA_ARGS__) \
	fn(DT_N_S_pwmleds_S_red_pwm_led, label, 3, __VA_ARGS__) \
	fn(DT_N_S_pwmleds_S_red_pwm_led, label, 4, __VA_ARGS__) \
	fn(DT_N_S_pwmleds_S_red_pwm_led, label, 5, __VA_ARGS__) \
	fn(DT_N_S_pwmleds_S_red_pwm_led, label, 6, __VA_ARGS__) \
	fn(DT_N_S_pwmleds_S_red_pwm_led, label, 7, __VA_ARGS__) \
	fn(DT_N_S_pwmleds_S_red_pwm_led, label, 8, __VA_ARGS__) \
	fn(DT_N_S_pwmleds_S_red_pwm_led, label, 9, __VA_ARGS__) \
	fn(DT_N_S_pwmleds_S_red_pwm_led, label, 10, __VA_ARGS__)
#define DT_N_S_pwmleds_S_red_pwm_led_P_label_EXISTS 1

/*
 * Devicetree node: /soc/timer@e000e010
 *
 * Node identifier: DT_N_S_soc_S_timer_e000e010
 */

/* Node's full path: */
#define DT_N_S_soc_S_timer_e000e010_PATH "/soc/timer@e000e010"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timer_e000e010_FULL_NAME "timer@e000e010"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timer_e000e010_PARENT DT_N_S_soc
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timer_e000e010_ORD 26

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timer_e000e010_REQUIRES_ORDS \
	10, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timer_e000e010_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timer_e000e010_EXISTS 1
#define DT_N_INST_0_arm_armv8m_systick DT_N_S_soc_S_timer_e000e010
#define DT_N_NODELABEL_systick         DT_N_S_soc_S_timer_e000e010

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timer_e000e010_REG_NUM 1
#define DT_N_S_soc_S_timer_e000e010_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_REG_IDX_0_VAL_ADDRESS 3758153744 /* 0xe000e010 */
#define DT_N_S_soc_S_timer_e000e010_REG_IDX_0_VAL_SIZE 16 /* 0x10 */
#define DT_N_S_soc_S_timer_e000e010_RANGES_NUM 0
#define DT_N_S_soc_S_timer_e000e010_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timer_e000e010_IRQ_NUM 0
#define DT_N_S_soc_S_timer_e000e010_COMPAT_MATCHES_arm_armv8m_systick 1
#define DT_N_S_soc_S_timer_e000e010_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timer_e000e010_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timer_e000e010_P_compatible {"arm,armv8m-systick"}
#define DT_N_S_soc_S_timer_e000e010_P_compatible_IDX_0 "arm,armv8m-systick"
#define DT_N_S_soc_S_timer_e000e010_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_e000e010, compatible, 0)
#define DT_N_S_soc_S_timer_e000e010_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_e000e010, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_e000e010_P_compatible_LEN 1
#define DT_N_S_soc_S_timer_e000e010_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_reg {3758153744 /* 0xe000e010 */, 16 /* 0x10 */}
#define DT_N_S_soc_S_timer_e000e010_P_reg_IDX_0 3758153744
#define DT_N_S_soc_S_timer_e000e010_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_reg_IDX_1 16
#define DT_N_S_soc_S_timer_e000e010_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_e000e010, reg, 0) \
	fn(DT_N_S_soc_S_timer_e000e010, reg, 1)
#define DT_N_S_soc_S_timer_e000e010_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_e000e010, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timer_e000e010, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_timer_e000e010_P_reg_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_status "disabled"
#define DT_N_S_soc_S_timer_e000e010_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timer_e000e010_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timer_e000e010_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timer_e000e010_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timer_e000e010_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timer_e000e010_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_e000e010, status, 0) \
	fn(DT_N_S_soc_S_timer_e000e010, status, 1) \
	fn(DT_N_S_soc_S_timer_e000e010, status, 2) \
	fn(DT_N_S_soc_S_timer_e000e010, status, 3) \
	fn(DT_N_S_soc_S_timer_e000e010, status, 4) \
	fn(DT_N_S_soc_S_timer_e000e010, status, 5) \
	fn(DT_N_S_soc_S_timer_e000e010, status, 6) \
	fn(DT_N_S_soc_S_timer_e000e010, status, 7)
#define DT_N_S_soc_S_timer_e000e010_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_e000e010, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timer_e000e010, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timer_e000e010, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timer_e000e010, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timer_e000e010, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timer_e000e010, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timer_e000e010, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timer_e000e010, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_timer_e000e010_P_status_EXISTS 1

/*
 * Devicetree node: /soc/peripheral@50000000/clkctl@1000
 *
 * Node identifier: DT_N_S_soc_S_peripheral_50000000_S_clkctl_1000
 *
 * Binding (compatible = nxp,lpc-syscon):
 *   $ZEPHYR_BASE\dts\bindings\clock\nxp,lpc-syscon.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_peripheral_50000000_S_clkctl_1000_PATH "/soc/peripheral@50000000/clkctl@1000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_peripheral_50000000_S_clkctl_1000_FULL_NAME "clkctl@1000"

/* Node parent (/soc/peripheral@50000000) identifier: */
#define DT_N_S_soc_S_peripheral_50000000_S_clkctl_1000_PARENT DT_N_S_soc_S_peripheral_50000000
#define DT_N_S_soc_S_peripheral_50000000_S_clkctl_1000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_clkctl_1000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_peripheral_50000000_S_clkctl_1000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_clkctl_1000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_peripheral_50000000_S_clkctl_1000_ORD 27

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_peripheral_50000000_S_clkctl_1000_REQUIRES_ORDS \
	12, /* /soc/peripheral@50000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_peripheral_50000000_S_clkctl_1000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_peripheral_50000000_S_clkctl_1000_EXISTS 1
#define DT_N_INST_0_nxp_lpc_syscon DT_N_S_soc_S_peripheral_50000000_S_clkctl_1000
#define DT_N_NODELABEL_clkctl0     DT_N_S_soc_S_peripheral_50000000_S_clkctl_1000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_peripheral_50000000_S_clkctl_1000_REG_NUM 1
#define DT_N_S_soc_S_peripheral_50000000_S_clkctl_1000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_clkctl_1000_REG_IDX_0_VAL_ADDRESS 1342181376 /* 0x50001000 */
#define DT_N_S_soc_S_peripheral_50000000_S_clkctl_1000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_peripheral_50000000_S_clkctl_1000_RANGES_NUM 0
#define DT_N_S_soc_S_peripheral_50000000_S_clkctl_1000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_clkctl_1000_IRQ_NUM 0
#define DT_N_S_soc_S_peripheral_50000000_S_clkctl_1000_COMPAT_MATCHES_nxp_lpc_syscon 1
#define DT_N_S_soc_S_peripheral_50000000_S_clkctl_1000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_peripheral_50000000_S_clkctl_1000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_peripheral_50000000_S_clkctl_1000_P_reg {4096 /* 0x1000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_peripheral_50000000_S_clkctl_1000_P_reg_IDX_0 4096
#define DT_N_S_soc_S_peripheral_50000000_S_clkctl_1000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_clkctl_1000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_peripheral_50000000_S_clkctl_1000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_clkctl_1000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_clkctl_1000, reg, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_clkctl_1000, reg, 1)
#define DT_N_S_soc_S_peripheral_50000000_S_clkctl_1000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_clkctl_1000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_clkctl_1000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_clkctl_1000_P_reg_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_clkctl_1000_P_label "CLKCTL_0"
#define DT_N_S_soc_S_peripheral_50000000_S_clkctl_1000_P_label_STRING_TOKEN CLKCTL_0
#define DT_N_S_soc_S_peripheral_50000000_S_clkctl_1000_P_label_STRING_UPPER_TOKEN CLKCTL_0
#define DT_N_S_soc_S_peripheral_50000000_S_clkctl_1000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_clkctl_1000, label, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_clkctl_1000, label, 1) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_clkctl_1000, label, 2) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_clkctl_1000, label, 3) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_clkctl_1000, label, 4) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_clkctl_1000, label, 5) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_clkctl_1000, label, 6) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_clkctl_1000, label, 7)
#define DT_N_S_soc_S_peripheral_50000000_S_clkctl_1000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_clkctl_1000, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_clkctl_1000, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_clkctl_1000, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_clkctl_1000, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_clkctl_1000, label, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_clkctl_1000, label, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_clkctl_1000, label, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_clkctl_1000, label, 7, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_clkctl_1000_P_label_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_clkctl_1000_P_compatible {"nxp,lpc-syscon"}
#define DT_N_S_soc_S_peripheral_50000000_S_clkctl_1000_P_compatible_IDX_0 "nxp,lpc-syscon"
#define DT_N_S_soc_S_peripheral_50000000_S_clkctl_1000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_clkctl_1000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_clkctl_1000, compatible, 0)
#define DT_N_S_soc_S_peripheral_50000000_S_clkctl_1000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_clkctl_1000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_clkctl_1000_P_compatible_LEN 1
#define DT_N_S_soc_S_peripheral_50000000_S_clkctl_1000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_clkctl_1000_P_wakeup_source 0
#define DT_N_S_soc_S_peripheral_50000000_S_clkctl_1000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/peripheral@50000000/clkctl@21000
 *
 * Node identifier: DT_N_S_soc_S_peripheral_50000000_S_clkctl_21000
 *
 * Binding (compatible = nxp,lpc-syscon):
 *   $ZEPHYR_BASE\dts\bindings\clock\nxp,lpc-syscon.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_peripheral_50000000_S_clkctl_21000_PATH "/soc/peripheral@50000000/clkctl@21000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_peripheral_50000000_S_clkctl_21000_FULL_NAME "clkctl@21000"

/* Node parent (/soc/peripheral@50000000) identifier: */
#define DT_N_S_soc_S_peripheral_50000000_S_clkctl_21000_PARENT DT_N_S_soc_S_peripheral_50000000
#define DT_N_S_soc_S_peripheral_50000000_S_clkctl_21000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_clkctl_21000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_peripheral_50000000_S_clkctl_21000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_clkctl_21000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_peripheral_50000000_S_clkctl_21000_ORD 28

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_peripheral_50000000_S_clkctl_21000_REQUIRES_ORDS \
	12, /* /soc/peripheral@50000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_peripheral_50000000_S_clkctl_21000_SUPPORTS_ORDS \
	29, /* /soc/peripheral@50000000/ctimer@28000 */ \
	30, /* /soc/peripheral@50000000/ctimer@29000 */ \
	31, /* /soc/peripheral@50000000/ctimer@2a000 */ \
	32, /* /soc/peripheral@50000000/ctimer@2b000 */ \
	33, /* /soc/peripheral@50000000/ctimer@2c000 */ \
	35, /* /soc/peripheral@50000000/flexcomm@106000 */ \
	37, /* /soc/peripheral@50000000/flexcomm@107000 */ \
	38, /* /soc/peripheral@50000000/flexcomm@108000 */ \
	39, /* /soc/peripheral@50000000/flexcomm@109000 */ \
	40, /* /soc/peripheral@50000000/flexcomm@122000 */ \
	41, /* /soc/peripheral@50000000/flexcomm@123000 */ \
	42, /* /soc/peripheral@50000000/flexcomm@124000 */ \
	43, /* /soc/peripheral@50000000/flexcomm@125000 */ \
	47, /* /soc/peripheral@50000000/spi@126000 */ \
	51, /* /soc/peripheral@50000000/usdhc@136000 */ \
	52, /* /soc/peripheral@50000000/usdhc@137000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_peripheral_50000000_S_clkctl_21000_EXISTS 1
#define DT_N_INST_1_nxp_lpc_syscon DT_N_S_soc_S_peripheral_50000000_S_clkctl_21000
#define DT_N_NODELABEL_clkctl1     DT_N_S_soc_S_peripheral_50000000_S_clkctl_21000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_peripheral_50000000_S_clkctl_21000_REG_NUM 1
#define DT_N_S_soc_S_peripheral_50000000_S_clkctl_21000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_clkctl_21000_REG_IDX_0_VAL_ADDRESS 1342312448 /* 0x50021000 */
#define DT_N_S_soc_S_peripheral_50000000_S_clkctl_21000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_peripheral_50000000_S_clkctl_21000_RANGES_NUM 0
#define DT_N_S_soc_S_peripheral_50000000_S_clkctl_21000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_clkctl_21000_IRQ_NUM 0
#define DT_N_S_soc_S_peripheral_50000000_S_clkctl_21000_COMPAT_MATCHES_nxp_lpc_syscon 1
#define DT_N_S_soc_S_peripheral_50000000_S_clkctl_21000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_peripheral_50000000_S_clkctl_21000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_peripheral_50000000_S_clkctl_21000_P_reg {135168 /* 0x21000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_peripheral_50000000_S_clkctl_21000_P_reg_IDX_0 135168
#define DT_N_S_soc_S_peripheral_50000000_S_clkctl_21000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_clkctl_21000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_peripheral_50000000_S_clkctl_21000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_clkctl_21000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_clkctl_21000, reg, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_clkctl_21000, reg, 1)
#define DT_N_S_soc_S_peripheral_50000000_S_clkctl_21000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_clkctl_21000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_clkctl_21000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_clkctl_21000_P_reg_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_clkctl_21000_P_label "CLKCTL_1"
#define DT_N_S_soc_S_peripheral_50000000_S_clkctl_21000_P_label_STRING_TOKEN CLKCTL_1
#define DT_N_S_soc_S_peripheral_50000000_S_clkctl_21000_P_label_STRING_UPPER_TOKEN CLKCTL_1
#define DT_N_S_soc_S_peripheral_50000000_S_clkctl_21000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_clkctl_21000, label, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_clkctl_21000, label, 1) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_clkctl_21000, label, 2) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_clkctl_21000, label, 3) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_clkctl_21000, label, 4) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_clkctl_21000, label, 5) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_clkctl_21000, label, 6) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_clkctl_21000, label, 7)
#define DT_N_S_soc_S_peripheral_50000000_S_clkctl_21000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_clkctl_21000, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_clkctl_21000, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_clkctl_21000, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_clkctl_21000, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_clkctl_21000, label, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_clkctl_21000, label, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_clkctl_21000, label, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_clkctl_21000, label, 7, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_clkctl_21000_P_label_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_clkctl_21000_P_compatible {"nxp,lpc-syscon"}
#define DT_N_S_soc_S_peripheral_50000000_S_clkctl_21000_P_compatible_IDX_0 "nxp,lpc-syscon"
#define DT_N_S_soc_S_peripheral_50000000_S_clkctl_21000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_clkctl_21000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_clkctl_21000, compatible, 0)
#define DT_N_S_soc_S_peripheral_50000000_S_clkctl_21000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_clkctl_21000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_clkctl_21000_P_compatible_LEN 1
#define DT_N_S_soc_S_peripheral_50000000_S_clkctl_21000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_clkctl_21000_P_wakeup_source 0
#define DT_N_S_soc_S_peripheral_50000000_S_clkctl_21000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/peripheral@50000000/ctimer@28000
 *
 * Node identifier: DT_N_S_soc_S_peripheral_50000000_S_ctimer_28000
 *
 * Binding (compatible = nxp,lpc-ctimer):
 *   $ZEPHYR_BASE\dts\bindings\timer\nxp,lpc-ctimer.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_28000_PATH "/soc/peripheral@50000000/ctimer@28000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_28000_FULL_NAME "ctimer@28000"

/* Node parent (/soc/peripheral@50000000) identifier: */
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_28000_PARENT DT_N_S_soc_S_peripheral_50000000
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_28000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_28000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_28000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_28000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_28000_ORD 29

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_28000_REQUIRES_ORDS \
	11, /* /soc/interrupt-controller@e000e100 */ \
	12, /* /soc/peripheral@50000000 */ \
	28, /* /soc/peripheral@50000000/clkctl@21000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_28000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_28000_EXISTS 1
#define DT_N_INST_0_nxp_lpc_ctimer DT_N_S_soc_S_peripheral_50000000_S_ctimer_28000
#define DT_N_NODELABEL_ctimer0     DT_N_S_soc_S_peripheral_50000000_S_ctimer_28000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_28000_REG_NUM 1
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_28000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_28000_REG_IDX_0_VAL_ADDRESS 1342341120 /* 0x50028000 */
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_28000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_28000_RANGES_NUM 0
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_28000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_28000_IRQ_NUM 1
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_28000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_28000_IRQ_IDX_0_VAL_irq 10
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_28000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_28000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_28000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_28000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_28000_COMPAT_MATCHES_nxp_lpc_ctimer 1
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_28000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_28000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_28000_P_reg {163840 /* 0x28000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_28000_P_reg_IDX_0 163840
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_28000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_28000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_28000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_28000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_28000, reg, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_28000, reg, 1)
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_28000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_28000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_28000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_28000_P_reg_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_28000_P_interrupts {10 /* 0xa */, 0 /* 0x0 */}
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_28000_P_interrupts_IDX_0 10
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_28000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_28000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_28000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_28000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_28000, interrupts, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_28000, interrupts, 1)
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_28000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_28000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_28000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_28000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_28000_P_label "CTIMER_0"
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_28000_P_label_STRING_TOKEN CTIMER_0
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_28000_P_label_STRING_UPPER_TOKEN CTIMER_0
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_28000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_28000, label, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_28000, label, 1) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_28000, label, 2) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_28000, label, 3) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_28000, label, 4) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_28000, label, 5) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_28000, label, 6) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_28000, label, 7)
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_28000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_28000, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_28000, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_28000, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_28000, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_28000, label, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_28000, label, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_28000, label, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_28000, label, 7, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_28000_P_label_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_28000_P_clk_source 1
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_28000_P_clk_source_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_28000_P_mode 0
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_28000_P_mode_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_28000_P_input 0
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_28000_P_input_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_28000_P_prescale 0
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_28000_P_prescale_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_28000_P_status "okay"
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_28000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_28000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_28000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_28000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_28000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_28000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_28000, status, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_28000, status, 1) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_28000, status, 2) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_28000, status, 3)
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_28000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_28000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_28000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_28000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_28000, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_28000_P_status_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_28000_P_compatible {"nxp,lpc-ctimer"}
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_28000_P_compatible_IDX_0 "nxp,lpc-ctimer"
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_28000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_28000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_28000, compatible, 0)
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_28000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_28000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_28000_P_compatible_LEN 1
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_28000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_28000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_28000_P_clocks_IDX_0_PH DT_N_S_soc_S_peripheral_50000000_S_clkctl_21000
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_28000_P_clocks_IDX_0_VAL_name 0
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_28000_P_clocks_IDX_0_VAL_name_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_28000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_28000, clocks, 0)
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_28000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_28000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_28000_P_clocks_LEN 1
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_28000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_28000_P_wakeup_source 0
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_28000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/peripheral@50000000/ctimer@29000
 *
 * Node identifier: DT_N_S_soc_S_peripheral_50000000_S_ctimer_29000
 *
 * Binding (compatible = nxp,lpc-ctimer):
 *   $ZEPHYR_BASE\dts\bindings\timer\nxp,lpc-ctimer.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_29000_PATH "/soc/peripheral@50000000/ctimer@29000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_29000_FULL_NAME "ctimer@29000"

/* Node parent (/soc/peripheral@50000000) identifier: */
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_29000_PARENT DT_N_S_soc_S_peripheral_50000000
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_29000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_29000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_29000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_29000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_29000_ORD 30

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_29000_REQUIRES_ORDS \
	11, /* /soc/interrupt-controller@e000e100 */ \
	12, /* /soc/peripheral@50000000 */ \
	28, /* /soc/peripheral@50000000/clkctl@21000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_29000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_29000_EXISTS 1
#define DT_N_INST_1_nxp_lpc_ctimer DT_N_S_soc_S_peripheral_50000000_S_ctimer_29000
#define DT_N_NODELABEL_ctimer1     DT_N_S_soc_S_peripheral_50000000_S_ctimer_29000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_29000_REG_NUM 1
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_29000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_29000_REG_IDX_0_VAL_ADDRESS 1342345216 /* 0x50029000 */
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_29000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_29000_RANGES_NUM 0
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_29000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_29000_IRQ_NUM 1
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_29000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_29000_IRQ_IDX_0_VAL_irq 11
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_29000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_29000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_29000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_29000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_29000_COMPAT_MATCHES_nxp_lpc_ctimer 1
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_29000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_29000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_29000_P_reg {167936 /* 0x29000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_29000_P_reg_IDX_0 167936
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_29000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_29000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_29000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_29000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_29000, reg, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_29000, reg, 1)
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_29000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_29000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_29000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_29000_P_reg_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_29000_P_interrupts {11 /* 0xb */, 0 /* 0x0 */}
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_29000_P_interrupts_IDX_0 11
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_29000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_29000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_29000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_29000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_29000, interrupts, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_29000, interrupts, 1)
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_29000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_29000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_29000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_29000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_29000_P_label "CTIMER_1"
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_29000_P_label_STRING_TOKEN CTIMER_1
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_29000_P_label_STRING_UPPER_TOKEN CTIMER_1
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_29000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_29000, label, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_29000, label, 1) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_29000, label, 2) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_29000, label, 3) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_29000, label, 4) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_29000, label, 5) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_29000, label, 6) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_29000, label, 7)
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_29000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_29000, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_29000, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_29000, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_29000, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_29000, label, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_29000, label, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_29000, label, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_29000, label, 7, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_29000_P_label_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_29000_P_clk_source 1
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_29000_P_clk_source_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_29000_P_mode 0
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_29000_P_mode_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_29000_P_input 0
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_29000_P_input_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_29000_P_prescale 0
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_29000_P_prescale_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_29000_P_status "okay"
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_29000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_29000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_29000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_29000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_29000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_29000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_29000, status, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_29000, status, 1) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_29000, status, 2) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_29000, status, 3)
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_29000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_29000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_29000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_29000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_29000, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_29000_P_status_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_29000_P_compatible {"nxp,lpc-ctimer"}
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_29000_P_compatible_IDX_0 "nxp,lpc-ctimer"
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_29000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_29000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_29000, compatible, 0)
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_29000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_29000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_29000_P_compatible_LEN 1
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_29000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_29000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_29000_P_clocks_IDX_0_PH DT_N_S_soc_S_peripheral_50000000_S_clkctl_21000
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_29000_P_clocks_IDX_0_VAL_name 1
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_29000_P_clocks_IDX_0_VAL_name_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_29000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_29000, clocks, 0)
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_29000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_29000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_29000_P_clocks_LEN 1
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_29000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_29000_P_wakeup_source 0
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_29000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/peripheral@50000000/ctimer@2a000
 *
 * Node identifier: DT_N_S_soc_S_peripheral_50000000_S_ctimer_2a000
 *
 * Binding (compatible = nxp,lpc-ctimer):
 *   $ZEPHYR_BASE\dts\bindings\timer\nxp,lpc-ctimer.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2a000_PATH "/soc/peripheral@50000000/ctimer@2a000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2a000_FULL_NAME "ctimer@2a000"

/* Node parent (/soc/peripheral@50000000) identifier: */
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2a000_PARENT DT_N_S_soc_S_peripheral_50000000
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2a000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2a000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2a000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2a000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2a000_ORD 31

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2a000_REQUIRES_ORDS \
	11, /* /soc/interrupt-controller@e000e100 */ \
	12, /* /soc/peripheral@50000000 */ \
	28, /* /soc/peripheral@50000000/clkctl@21000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2a000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2a000_EXISTS 1
#define DT_N_INST_2_nxp_lpc_ctimer DT_N_S_soc_S_peripheral_50000000_S_ctimer_2a000
#define DT_N_NODELABEL_ctimer2     DT_N_S_soc_S_peripheral_50000000_S_ctimer_2a000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2a000_REG_NUM 1
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2a000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2a000_REG_IDX_0_VAL_ADDRESS 1342349312 /* 0x5002a000 */
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2a000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2a000_RANGES_NUM 0
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2a000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2a000_IRQ_NUM 1
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2a000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2a000_IRQ_IDX_0_VAL_irq 39
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2a000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2a000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2a000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2a000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2a000_COMPAT_MATCHES_nxp_lpc_ctimer 1
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2a000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2a000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2a000_P_reg {172032 /* 0x2a000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2a000_P_reg_IDX_0 172032
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2a000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2a000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2a000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2a000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_2a000, reg, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_2a000, reg, 1)
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2a000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_2a000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_2a000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2a000_P_reg_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2a000_P_interrupts {39 /* 0x27 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2a000_P_interrupts_IDX_0 39
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2a000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2a000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2a000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2a000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_2a000, interrupts, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_2a000, interrupts, 1)
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2a000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_2a000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_2a000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2a000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2a000_P_label "CTIMER_2"
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2a000_P_label_STRING_TOKEN CTIMER_2
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2a000_P_label_STRING_UPPER_TOKEN CTIMER_2
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2a000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_2a000, label, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_2a000, label, 1) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_2a000, label, 2) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_2a000, label, 3) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_2a000, label, 4) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_2a000, label, 5) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_2a000, label, 6) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_2a000, label, 7)
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2a000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_2a000, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_2a000, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_2a000, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_2a000, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_2a000, label, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_2a000, label, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_2a000, label, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_2a000, label, 7, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2a000_P_label_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2a000_P_clk_source 1
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2a000_P_clk_source_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2a000_P_mode 0
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2a000_P_mode_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2a000_P_input 0
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2a000_P_input_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2a000_P_prescale 0
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2a000_P_prescale_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2a000_P_status "okay"
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2a000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2a000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2a000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2a000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2a000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2a000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_2a000, status, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_2a000, status, 1) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_2a000, status, 2) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_2a000, status, 3)
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2a000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_2a000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_2a000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_2a000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_2a000, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2a000_P_status_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2a000_P_compatible {"nxp,lpc-ctimer"}
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2a000_P_compatible_IDX_0 "nxp,lpc-ctimer"
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2a000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2a000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_2a000, compatible, 0)
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2a000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_2a000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2a000_P_compatible_LEN 1
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2a000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2a000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2a000_P_clocks_IDX_0_PH DT_N_S_soc_S_peripheral_50000000_S_clkctl_21000
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2a000_P_clocks_IDX_0_VAL_name 2
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2a000_P_clocks_IDX_0_VAL_name_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2a000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_2a000, clocks, 0)
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2a000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_2a000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2a000_P_clocks_LEN 1
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2a000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2a000_P_wakeup_source 0
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2a000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/peripheral@50000000/ctimer@2b000
 *
 * Node identifier: DT_N_S_soc_S_peripheral_50000000_S_ctimer_2b000
 *
 * Binding (compatible = nxp,lpc-ctimer):
 *   $ZEPHYR_BASE\dts\bindings\timer\nxp,lpc-ctimer.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2b000_PATH "/soc/peripheral@50000000/ctimer@2b000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2b000_FULL_NAME "ctimer@2b000"

/* Node parent (/soc/peripheral@50000000) identifier: */
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2b000_PARENT DT_N_S_soc_S_peripheral_50000000
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2b000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2b000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2b000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2b000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2b000_ORD 32

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2b000_REQUIRES_ORDS \
	11, /* /soc/interrupt-controller@e000e100 */ \
	12, /* /soc/peripheral@50000000 */ \
	28, /* /soc/peripheral@50000000/clkctl@21000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2b000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2b000_EXISTS 1
#define DT_N_INST_3_nxp_lpc_ctimer DT_N_S_soc_S_peripheral_50000000_S_ctimer_2b000
#define DT_N_NODELABEL_ctimer3     DT_N_S_soc_S_peripheral_50000000_S_ctimer_2b000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2b000_REG_NUM 1
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2b000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2b000_REG_IDX_0_VAL_ADDRESS 1342353408 /* 0x5002b000 */
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2b000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2b000_RANGES_NUM 0
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2b000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2b000_IRQ_NUM 1
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2b000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2b000_IRQ_IDX_0_VAL_irq 13
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2b000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2b000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2b000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2b000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2b000_COMPAT_MATCHES_nxp_lpc_ctimer 1
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2b000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2b000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2b000_P_reg {176128 /* 0x2b000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2b000_P_reg_IDX_0 176128
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2b000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2b000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2b000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2b000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_2b000, reg, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_2b000, reg, 1)
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2b000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_2b000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_2b000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2b000_P_reg_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2b000_P_interrupts {13 /* 0xd */, 0 /* 0x0 */}
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2b000_P_interrupts_IDX_0 13
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2b000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2b000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2b000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2b000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_2b000, interrupts, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_2b000, interrupts, 1)
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2b000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_2b000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_2b000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2b000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2b000_P_label "CTIMER_3"
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2b000_P_label_STRING_TOKEN CTIMER_3
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2b000_P_label_STRING_UPPER_TOKEN CTIMER_3
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2b000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_2b000, label, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_2b000, label, 1) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_2b000, label, 2) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_2b000, label, 3) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_2b000, label, 4) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_2b000, label, 5) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_2b000, label, 6) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_2b000, label, 7)
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2b000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_2b000, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_2b000, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_2b000, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_2b000, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_2b000, label, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_2b000, label, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_2b000, label, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_2b000, label, 7, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2b000_P_label_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2b000_P_clk_source 1
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2b000_P_clk_source_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2b000_P_mode 0
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2b000_P_mode_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2b000_P_input 0
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2b000_P_input_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2b000_P_prescale 0
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2b000_P_prescale_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2b000_P_status "okay"
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2b000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2b000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2b000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2b000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2b000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2b000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_2b000, status, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_2b000, status, 1) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_2b000, status, 2) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_2b000, status, 3)
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2b000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_2b000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_2b000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_2b000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_2b000, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2b000_P_status_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2b000_P_compatible {"nxp,lpc-ctimer"}
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2b000_P_compatible_IDX_0 "nxp,lpc-ctimer"
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2b000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2b000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_2b000, compatible, 0)
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2b000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_2b000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2b000_P_compatible_LEN 1
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2b000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2b000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2b000_P_clocks_IDX_0_PH DT_N_S_soc_S_peripheral_50000000_S_clkctl_21000
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2b000_P_clocks_IDX_0_VAL_name 3
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2b000_P_clocks_IDX_0_VAL_name_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2b000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_2b000, clocks, 0)
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2b000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_2b000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2b000_P_clocks_LEN 1
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2b000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2b000_P_wakeup_source 0
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2b000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/peripheral@50000000/ctimer@2c000
 *
 * Node identifier: DT_N_S_soc_S_peripheral_50000000_S_ctimer_2c000
 *
 * Binding (compatible = nxp,lpc-ctimer):
 *   $ZEPHYR_BASE\dts\bindings\timer\nxp,lpc-ctimer.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2c000_PATH "/soc/peripheral@50000000/ctimer@2c000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2c000_FULL_NAME "ctimer@2c000"

/* Node parent (/soc/peripheral@50000000) identifier: */
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2c000_PARENT DT_N_S_soc_S_peripheral_50000000
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2c000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2c000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2c000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2c000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2c000_ORD 33

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2c000_REQUIRES_ORDS \
	11, /* /soc/interrupt-controller@e000e100 */ \
	12, /* /soc/peripheral@50000000 */ \
	28, /* /soc/peripheral@50000000/clkctl@21000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2c000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2c000_EXISTS 1
#define DT_N_INST_4_nxp_lpc_ctimer DT_N_S_soc_S_peripheral_50000000_S_ctimer_2c000
#define DT_N_NODELABEL_ctimer4     DT_N_S_soc_S_peripheral_50000000_S_ctimer_2c000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2c000_REG_NUM 1
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2c000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2c000_REG_IDX_0_VAL_ADDRESS 1342357504 /* 0x5002c000 */
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2c000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2c000_RANGES_NUM 0
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2c000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2c000_IRQ_NUM 1
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2c000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2c000_IRQ_IDX_0_VAL_irq 40
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2c000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2c000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2c000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2c000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2c000_COMPAT_MATCHES_nxp_lpc_ctimer 1
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2c000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2c000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2c000_P_reg {180224 /* 0x2c000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2c000_P_reg_IDX_0 180224
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2c000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2c000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2c000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2c000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_2c000, reg, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_2c000, reg, 1)
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2c000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_2c000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_2c000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2c000_P_reg_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2c000_P_interrupts {40 /* 0x28 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2c000_P_interrupts_IDX_0 40
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2c000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2c000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2c000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2c000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_2c000, interrupts, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_2c000, interrupts, 1)
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2c000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_2c000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_2c000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2c000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2c000_P_label "CTIMER_4"
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2c000_P_label_STRING_TOKEN CTIMER_4
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2c000_P_label_STRING_UPPER_TOKEN CTIMER_4
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2c000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_2c000, label, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_2c000, label, 1) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_2c000, label, 2) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_2c000, label, 3) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_2c000, label, 4) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_2c000, label, 5) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_2c000, label, 6) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_2c000, label, 7)
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2c000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_2c000, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_2c000, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_2c000, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_2c000, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_2c000, label, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_2c000, label, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_2c000, label, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_2c000, label, 7, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2c000_P_label_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2c000_P_clk_source 1
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2c000_P_clk_source_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2c000_P_mode 0
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2c000_P_mode_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2c000_P_input 0
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2c000_P_input_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2c000_P_prescale 0
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2c000_P_prescale_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2c000_P_status "okay"
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2c000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2c000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2c000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2c000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2c000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2c000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_2c000, status, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_2c000, status, 1) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_2c000, status, 2) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_2c000, status, 3)
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2c000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_2c000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_2c000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_2c000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_2c000, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2c000_P_status_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2c000_P_compatible {"nxp,lpc-ctimer"}
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2c000_P_compatible_IDX_0 "nxp,lpc-ctimer"
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2c000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2c000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_2c000, compatible, 0)
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2c000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_2c000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2c000_P_compatible_LEN 1
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2c000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2c000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2c000_P_clocks_IDX_0_PH DT_N_S_soc_S_peripheral_50000000_S_clkctl_21000
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2c000_P_clocks_IDX_0_VAL_name 4
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2c000_P_clocks_IDX_0_VAL_name_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2c000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_2c000, clocks, 0)
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2c000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_2c000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2c000_P_clocks_LEN 1
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2c000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2c000_P_wakeup_source 0
#define DT_N_S_soc_S_peripheral_50000000_S_ctimer_2c000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/peripheral@50000000/dma-controller@105000
 *
 * Node identifier: DT_N_S_soc_S_peripheral_50000000_S_dma_controller_105000
 *
 * Binding (compatible = nxp,lpc-dma):
 *   $ZEPHYR_BASE\dts\bindings\dma\nxp,lpc-dma.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_peripheral_50000000_S_dma_controller_105000_PATH "/soc/peripheral@50000000/dma-controller@105000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_peripheral_50000000_S_dma_controller_105000_FULL_NAME "dma-controller@105000"

/* Node parent (/soc/peripheral@50000000) identifier: */
#define DT_N_S_soc_S_peripheral_50000000_S_dma_controller_105000_PARENT DT_N_S_soc_S_peripheral_50000000
#define DT_N_S_soc_S_peripheral_50000000_S_dma_controller_105000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_dma_controller_105000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_peripheral_50000000_S_dma_controller_105000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_dma_controller_105000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_peripheral_50000000_S_dma_controller_105000_ORD 34

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_peripheral_50000000_S_dma_controller_105000_REQUIRES_ORDS \
	11, /* /soc/interrupt-controller@e000e100 */ \
	12, /* /soc/peripheral@50000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_peripheral_50000000_S_dma_controller_105000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_peripheral_50000000_S_dma_controller_105000_EXISTS 1
#define DT_N_INST_1_nxp_lpc_dma DT_N_S_soc_S_peripheral_50000000_S_dma_controller_105000
#define DT_N_NODELABEL_dma1     DT_N_S_soc_S_peripheral_50000000_S_dma_controller_105000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_peripheral_50000000_S_dma_controller_105000_REG_NUM 1
#define DT_N_S_soc_S_peripheral_50000000_S_dma_controller_105000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_dma_controller_105000_REG_IDX_0_VAL_ADDRESS 1343246336 /* 0x50105000 */
#define DT_N_S_soc_S_peripheral_50000000_S_dma_controller_105000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_peripheral_50000000_S_dma_controller_105000_RANGES_NUM 0
#define DT_N_S_soc_S_peripheral_50000000_S_dma_controller_105000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_dma_controller_105000_IRQ_NUM 1
#define DT_N_S_soc_S_peripheral_50000000_S_dma_controller_105000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_dma_controller_105000_IRQ_IDX_0_VAL_irq 54
#define DT_N_S_soc_S_peripheral_50000000_S_dma_controller_105000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_dma_controller_105000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_dma_controller_105000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_peripheral_50000000_S_dma_controller_105000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_dma_controller_105000_COMPAT_MATCHES_nxp_lpc_dma 1
#define DT_N_S_soc_S_peripheral_50000000_S_dma_controller_105000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_peripheral_50000000_S_dma_controller_105000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_peripheral_50000000_S_dma_controller_105000_P_reg {1069056 /* 0x105000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_peripheral_50000000_S_dma_controller_105000_P_reg_IDX_0 1069056
#define DT_N_S_soc_S_peripheral_50000000_S_dma_controller_105000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_dma_controller_105000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_peripheral_50000000_S_dma_controller_105000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_dma_controller_105000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_dma_controller_105000, reg, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_dma_controller_105000, reg, 1)
#define DT_N_S_soc_S_peripheral_50000000_S_dma_controller_105000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_dma_controller_105000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_dma_controller_105000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_dma_controller_105000_P_reg_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_dma_controller_105000_P_interrupts {54 /* 0x36 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_peripheral_50000000_S_dma_controller_105000_P_interrupts_IDX_0 54
#define DT_N_S_soc_S_peripheral_50000000_S_dma_controller_105000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_dma_controller_105000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_peripheral_50000000_S_dma_controller_105000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_dma_controller_105000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_dma_controller_105000, interrupts, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_dma_controller_105000, interrupts, 1)
#define DT_N_S_soc_S_peripheral_50000000_S_dma_controller_105000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_dma_controller_105000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_dma_controller_105000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_dma_controller_105000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_dma_controller_105000_P_label "DMA_1"
#define DT_N_S_soc_S_peripheral_50000000_S_dma_controller_105000_P_label_STRING_TOKEN DMA_1
#define DT_N_S_soc_S_peripheral_50000000_S_dma_controller_105000_P_label_STRING_UPPER_TOKEN DMA_1
#define DT_N_S_soc_S_peripheral_50000000_S_dma_controller_105000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_dma_controller_105000, label, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_dma_controller_105000, label, 1) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_dma_controller_105000, label, 2) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_dma_controller_105000, label, 3) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_dma_controller_105000, label, 4)
#define DT_N_S_soc_S_peripheral_50000000_S_dma_controller_105000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_dma_controller_105000, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_dma_controller_105000, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_dma_controller_105000, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_dma_controller_105000, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_dma_controller_105000, label, 4, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_dma_controller_105000_P_label_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_dma_controller_105000_P_status "disabled"
#define DT_N_S_soc_S_peripheral_50000000_S_dma_controller_105000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_peripheral_50000000_S_dma_controller_105000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_peripheral_50000000_S_dma_controller_105000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_peripheral_50000000_S_dma_controller_105000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_peripheral_50000000_S_dma_controller_105000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_peripheral_50000000_S_dma_controller_105000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_dma_controller_105000, status, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_dma_controller_105000, status, 1) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_dma_controller_105000, status, 2) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_dma_controller_105000, status, 3) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_dma_controller_105000, status, 4) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_dma_controller_105000, status, 5) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_dma_controller_105000, status, 6) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_dma_controller_105000, status, 7)
#define DT_N_S_soc_S_peripheral_50000000_S_dma_controller_105000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_dma_controller_105000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_dma_controller_105000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_dma_controller_105000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_dma_controller_105000, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_dma_controller_105000, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_dma_controller_105000, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_dma_controller_105000, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_dma_controller_105000, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_dma_controller_105000_P_status_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_dma_controller_105000_P_compatible {"nxp,lpc-dma"}
#define DT_N_S_soc_S_peripheral_50000000_S_dma_controller_105000_P_compatible_IDX_0 "nxp,lpc-dma"
#define DT_N_S_soc_S_peripheral_50000000_S_dma_controller_105000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_dma_controller_105000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_dma_controller_105000, compatible, 0)
#define DT_N_S_soc_S_peripheral_50000000_S_dma_controller_105000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_dma_controller_105000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_dma_controller_105000_P_compatible_LEN 1
#define DT_N_S_soc_S_peripheral_50000000_S_dma_controller_105000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_dma_controller_105000_P_wakeup_source 0
#define DT_N_S_soc_S_peripheral_50000000_S_dma_controller_105000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/peripheral@50000000/flexcomm@106000
 *
 * Node identifier: DT_N_S_soc_S_peripheral_50000000_S_flexcomm_106000
 *
 * Binding (compatible = nxp,lpc-usart):
 *   $ZEPHYR_BASE\dts\bindings\serial\nxp,lpc-usart.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_106000_PATH "/soc/peripheral@50000000/flexcomm@106000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_106000_FULL_NAME "flexcomm@106000"

/* Node parent (/soc/peripheral@50000000) identifier: */
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_106000_PARENT DT_N_S_soc_S_peripheral_50000000
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_106000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_106000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_106000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_106000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_106000_ORD 35

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_106000_REQUIRES_ORDS \
	11, /* /soc/interrupt-controller@e000e100 */ \
	12, /* /soc/peripheral@50000000 */ \
	28, /* /soc/peripheral@50000000/clkctl@21000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_106000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_106000_EXISTS 1
#define DT_N_ALIAS_usart_0        DT_N_S_soc_S_peripheral_50000000_S_flexcomm_106000
#define DT_N_INST_0_nxp_lpc_usart DT_N_S_soc_S_peripheral_50000000_S_flexcomm_106000
#define DT_N_NODELABEL_flexcomm0  DT_N_S_soc_S_peripheral_50000000_S_flexcomm_106000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_106000_REG_NUM 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_106000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_106000_REG_IDX_0_VAL_ADDRESS 1343250432 /* 0x50106000 */
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_106000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_106000_RANGES_NUM 0
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_106000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_106000_IRQ_NUM 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_106000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_106000_IRQ_IDX_0_VAL_irq 14
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_106000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_106000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_106000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_106000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_106000_COMPAT_MATCHES_nxp_lpc_usart 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_106000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_106000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_106000_P_current_speed 115200
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_106000_P_current_speed_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_106000_P_label "FLEXCOMM_0"
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_106000_P_label_STRING_TOKEN FLEXCOMM_0
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_106000_P_label_STRING_UPPER_TOKEN FLEXCOMM_0
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_106000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_106000, label, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_106000, label, 1) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_106000, label, 2) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_106000, label, 3) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_106000, label, 4) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_106000, label, 5) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_106000, label, 6) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_106000, label, 7) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_106000, label, 8) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_106000, label, 9)
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_106000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_106000, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_106000, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_106000, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_106000, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_106000, label, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_106000, label, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_106000, label, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_106000, label, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_106000, label, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_106000, label, 9, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_106000_P_label_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_106000_P_hw_flow_control 0
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_106000_P_hw_flow_control_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_106000_P_status "okay"
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_106000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_106000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_106000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_106000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_106000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_106000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_106000, status, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_106000, status, 1) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_106000, status, 2) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_106000, status, 3)
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_106000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_106000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_106000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_106000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_106000, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_106000_P_status_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_106000_P_compatible {"nxp,lpc-usart"}
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_106000_P_compatible_IDX_0 "nxp,lpc-usart"
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_106000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_106000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_106000, compatible, 0)
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_106000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_106000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_106000_P_compatible_LEN 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_106000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_106000_P_reg {1073152 /* 0x106000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_106000_P_reg_IDX_0 1073152
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_106000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_106000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_106000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_106000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_106000, reg, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_106000, reg, 1)
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_106000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_106000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_106000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_106000_P_reg_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_106000_P_interrupts {14 /* 0xe */, 0 /* 0x0 */}
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_106000_P_interrupts_IDX_0 14
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_106000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_106000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_106000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_106000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_106000, interrupts, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_106000, interrupts, 1)
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_106000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_106000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_106000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_106000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_106000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_106000_P_clocks_IDX_0_PH DT_N_S_soc_S_peripheral_50000000_S_clkctl_21000
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_106000_P_clocks_IDX_0_VAL_name 0
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_106000_P_clocks_IDX_0_VAL_name_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_106000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_106000, clocks, 0)
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_106000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_106000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_106000_P_clocks_LEN 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_106000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_106000_P_wakeup_source 0
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_106000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/peripheral@50000000/dma-controller@104000
 *
 * Node identifier: DT_N_S_soc_S_peripheral_50000000_S_dma_controller_104000
 *
 * Binding (compatible = nxp,lpc-dma):
 *   $ZEPHYR_BASE\dts\bindings\dma\nxp,lpc-dma.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_peripheral_50000000_S_dma_controller_104000_PATH "/soc/peripheral@50000000/dma-controller@104000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_peripheral_50000000_S_dma_controller_104000_FULL_NAME "dma-controller@104000"

/* Node parent (/soc/peripheral@50000000) identifier: */
#define DT_N_S_soc_S_peripheral_50000000_S_dma_controller_104000_PARENT DT_N_S_soc_S_peripheral_50000000
#define DT_N_S_soc_S_peripheral_50000000_S_dma_controller_104000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_dma_controller_104000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_peripheral_50000000_S_dma_controller_104000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_dma_controller_104000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_peripheral_50000000_S_dma_controller_104000_ORD 36

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_peripheral_50000000_S_dma_controller_104000_REQUIRES_ORDS \
	11, /* /soc/interrupt-controller@e000e100 */ \
	12, /* /soc/peripheral@50000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_peripheral_50000000_S_dma_controller_104000_SUPPORTS_ORDS \
	37, /* /soc/peripheral@50000000/flexcomm@107000 */ \
	39, /* /soc/peripheral@50000000/flexcomm@109000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_peripheral_50000000_S_dma_controller_104000_EXISTS 1
#define DT_N_INST_0_nxp_lpc_dma DT_N_S_soc_S_peripheral_50000000_S_dma_controller_104000
#define DT_N_NODELABEL_dma0     DT_N_S_soc_S_peripheral_50000000_S_dma_controller_104000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_peripheral_50000000_S_dma_controller_104000_REG_NUM 1
#define DT_N_S_soc_S_peripheral_50000000_S_dma_controller_104000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_dma_controller_104000_REG_IDX_0_VAL_ADDRESS 1343242240 /* 0x50104000 */
#define DT_N_S_soc_S_peripheral_50000000_S_dma_controller_104000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_peripheral_50000000_S_dma_controller_104000_RANGES_NUM 0
#define DT_N_S_soc_S_peripheral_50000000_S_dma_controller_104000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_dma_controller_104000_IRQ_NUM 1
#define DT_N_S_soc_S_peripheral_50000000_S_dma_controller_104000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_dma_controller_104000_IRQ_IDX_0_VAL_irq 1
#define DT_N_S_soc_S_peripheral_50000000_S_dma_controller_104000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_dma_controller_104000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_dma_controller_104000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_peripheral_50000000_S_dma_controller_104000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_dma_controller_104000_COMPAT_MATCHES_nxp_lpc_dma 1
#define DT_N_S_soc_S_peripheral_50000000_S_dma_controller_104000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_peripheral_50000000_S_dma_controller_104000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_peripheral_50000000_S_dma_controller_104000_P_reg {1064960 /* 0x104000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_peripheral_50000000_S_dma_controller_104000_P_reg_IDX_0 1064960
#define DT_N_S_soc_S_peripheral_50000000_S_dma_controller_104000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_dma_controller_104000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_peripheral_50000000_S_dma_controller_104000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_dma_controller_104000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_dma_controller_104000, reg, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_dma_controller_104000, reg, 1)
#define DT_N_S_soc_S_peripheral_50000000_S_dma_controller_104000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_dma_controller_104000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_dma_controller_104000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_dma_controller_104000_P_reg_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_dma_controller_104000_P_interrupts {1 /* 0x1 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_peripheral_50000000_S_dma_controller_104000_P_interrupts_IDX_0 1
#define DT_N_S_soc_S_peripheral_50000000_S_dma_controller_104000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_dma_controller_104000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_peripheral_50000000_S_dma_controller_104000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_dma_controller_104000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_dma_controller_104000, interrupts, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_dma_controller_104000, interrupts, 1)
#define DT_N_S_soc_S_peripheral_50000000_S_dma_controller_104000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_dma_controller_104000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_dma_controller_104000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_dma_controller_104000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_dma_controller_104000_P_dma_channels 20
#define DT_N_S_soc_S_peripheral_50000000_S_dma_controller_104000_P_dma_channels_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_dma_controller_104000_P_label "DMA_0"
#define DT_N_S_soc_S_peripheral_50000000_S_dma_controller_104000_P_label_STRING_TOKEN DMA_0
#define DT_N_S_soc_S_peripheral_50000000_S_dma_controller_104000_P_label_STRING_UPPER_TOKEN DMA_0
#define DT_N_S_soc_S_peripheral_50000000_S_dma_controller_104000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_dma_controller_104000, label, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_dma_controller_104000, label, 1) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_dma_controller_104000, label, 2) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_dma_controller_104000, label, 3) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_dma_controller_104000, label, 4)
#define DT_N_S_soc_S_peripheral_50000000_S_dma_controller_104000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_dma_controller_104000, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_dma_controller_104000, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_dma_controller_104000, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_dma_controller_104000, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_dma_controller_104000, label, 4, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_dma_controller_104000_P_label_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_dma_controller_104000_P_status "okay"
#define DT_N_S_soc_S_peripheral_50000000_S_dma_controller_104000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_peripheral_50000000_S_dma_controller_104000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_peripheral_50000000_S_dma_controller_104000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_peripheral_50000000_S_dma_controller_104000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_peripheral_50000000_S_dma_controller_104000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_peripheral_50000000_S_dma_controller_104000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_dma_controller_104000, status, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_dma_controller_104000, status, 1) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_dma_controller_104000, status, 2) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_dma_controller_104000, status, 3)
#define DT_N_S_soc_S_peripheral_50000000_S_dma_controller_104000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_dma_controller_104000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_dma_controller_104000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_dma_controller_104000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_dma_controller_104000, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_dma_controller_104000_P_status_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_dma_controller_104000_P_compatible {"nxp,lpc-dma"}
#define DT_N_S_soc_S_peripheral_50000000_S_dma_controller_104000_P_compatible_IDX_0 "nxp,lpc-dma"
#define DT_N_S_soc_S_peripheral_50000000_S_dma_controller_104000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_dma_controller_104000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_dma_controller_104000, compatible, 0)
#define DT_N_S_soc_S_peripheral_50000000_S_dma_controller_104000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_dma_controller_104000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_dma_controller_104000_P_compatible_LEN 1
#define DT_N_S_soc_S_peripheral_50000000_S_dma_controller_104000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_dma_controller_104000_P_wakeup_source 0
#define DT_N_S_soc_S_peripheral_50000000_S_dma_controller_104000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/peripheral@50000000/flexcomm@107000
 *
 * Node identifier: DT_N_S_soc_S_peripheral_50000000_S_flexcomm_107000
 *
 * Binding (compatible = nxp,lpc-i2s):
 *   $ZEPHYR_BASE\dts\bindings\i2s\nxp,lpc-i2s.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_107000_PATH "/soc/peripheral@50000000/flexcomm@107000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_107000_FULL_NAME "flexcomm@107000"

/* Node parent (/soc/peripheral@50000000) identifier: */
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_107000_PARENT DT_N_S_soc_S_peripheral_50000000
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_107000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_107000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_107000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_107000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_107000_ORD 37

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_107000_REQUIRES_ORDS \
	11, /* /soc/interrupt-controller@e000e100 */ \
	12, /* /soc/peripheral@50000000 */ \
	28, /* /soc/peripheral@50000000/clkctl@21000 */ \
	36, /* /soc/peripheral@50000000/dma-controller@104000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_107000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_107000_EXISTS 1
#define DT_N_INST_0_nxp_lpc_i2s  DT_N_S_soc_S_peripheral_50000000_S_flexcomm_107000
#define DT_N_NODELABEL_flexcomm1 DT_N_S_soc_S_peripheral_50000000_S_flexcomm_107000
#define DT_N_NODELABEL_i2s0      DT_N_S_soc_S_peripheral_50000000_S_flexcomm_107000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_107000_REG_NUM 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_107000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_107000_REG_IDX_0_VAL_ADDRESS 1343254528 /* 0x50107000 */
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_107000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_107000_RANGES_NUM 0
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_107000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_107000_IRQ_NUM 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_107000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_107000_IRQ_IDX_0_VAL_irq 15
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_107000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_107000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_107000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_107000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_107000_COMPAT_MATCHES_nxp_lpc_i2s 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_107000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_107000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_107000_P_label "I2S_0"
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_107000_P_label_STRING_TOKEN I2S_0
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_107000_P_label_STRING_UPPER_TOKEN I2S_0
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_107000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_107000, label, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_107000, label, 1) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_107000, label, 2) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_107000, label, 3) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_107000, label, 4)
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_107000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_107000, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_107000, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_107000, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_107000, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_107000, label, 4, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_107000_P_label_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_107000_P_status "okay"
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_107000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_107000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_107000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_107000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_107000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_107000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_107000, status, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_107000, status, 1) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_107000, status, 2) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_107000, status, 3)
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_107000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_107000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_107000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_107000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_107000, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_107000_P_status_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_107000_P_compatible {"nxp,lpc-i2s"}
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_107000_P_compatible_IDX_0 "nxp,lpc-i2s"
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_107000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_107000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_107000, compatible, 0)
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_107000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_107000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_107000_P_compatible_LEN 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_107000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_107000_P_reg {1077248 /* 0x107000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_107000_P_reg_IDX_0 1077248
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_107000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_107000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_107000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_107000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_107000, reg, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_107000, reg, 1)
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_107000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_107000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_107000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_107000_P_reg_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_107000_P_interrupts {15 /* 0xf */, 0 /* 0x0 */}
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_107000_P_interrupts_IDX_0 15
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_107000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_107000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_107000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_107000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_107000, interrupts, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_107000, interrupts, 1)
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_107000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_107000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_107000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_107000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_107000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_107000_P_clocks_IDX_0_PH DT_N_S_soc_S_peripheral_50000000_S_clkctl_21000
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_107000_P_clocks_IDX_0_VAL_name 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_107000_P_clocks_IDX_0_VAL_name_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_107000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_107000, clocks, 0)
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_107000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_107000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_107000_P_clocks_LEN 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_107000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_107000_P_dmas_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_107000_P_dmas_IDX_0_PH DT_N_S_soc_S_peripheral_50000000_S_dma_controller_104000
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_107000_P_dmas_IDX_0_VAL_channel 2
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_107000_P_dmas_IDX_0_VAL_channel_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_107000_P_dmas_IDX_0_NAME "rx"
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_107000_P_dmas_NAME_rx_PH DT_N_S_soc_S_peripheral_50000000_S_dma_controller_104000
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_107000_P_dmas_NAME_rx_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_107000_P_dmas_NAME_rx_VAL_channel DT_N_S_soc_S_peripheral_50000000_S_flexcomm_107000_P_dmas_IDX_0_VAL_channel
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_107000_P_dmas_NAME_rx_VAL_channel_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_107000_P_dmas_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_107000, dmas, 0)
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_107000_P_dmas_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_107000, dmas, 0, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_107000_P_dmas_LEN 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_107000_P_dmas_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_107000_P_dma_names {"rx"}
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_107000_P_dma_names_IDX_0 "rx"
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_107000_P_dma_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_107000_P_dma_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_107000, dma_names, 0)
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_107000_P_dma_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_107000, dma_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_107000_P_dma_names_LEN 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_107000_P_dma_names_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_107000_P_wakeup_source 0
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_107000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/peripheral@50000000/flexcomm@108000
 *
 * Node identifier: DT_N_S_soc_S_peripheral_50000000_S_flexcomm_108000
 *
 * Binding (compatible = nxp,lpc-flexcomm):
 *   $ZEPHYR_BASE\dts\bindings\arm\nxp,lpc-flexcomm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_108000_PATH "/soc/peripheral@50000000/flexcomm@108000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_108000_FULL_NAME "flexcomm@108000"

/* Node parent (/soc/peripheral@50000000) identifier: */
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_108000_PARENT DT_N_S_soc_S_peripheral_50000000
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_108000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_108000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_108000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_108000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_108000_ORD 38

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_108000_REQUIRES_ORDS \
	11, /* /soc/interrupt-controller@e000e100 */ \
	12, /* /soc/peripheral@50000000 */ \
	28, /* /soc/peripheral@50000000/clkctl@21000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_108000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_108000_EXISTS 1
#define DT_N_INST_0_nxp_lpc_flexcomm DT_N_S_soc_S_peripheral_50000000_S_flexcomm_108000
#define DT_N_NODELABEL_flexcomm2     DT_N_S_soc_S_peripheral_50000000_S_flexcomm_108000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_108000_REG_NUM 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_108000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_108000_REG_IDX_0_VAL_ADDRESS 1343258624 /* 0x50108000 */
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_108000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_108000_RANGES_NUM 0
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_108000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_108000_IRQ_NUM 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_108000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_108000_IRQ_IDX_0_VAL_irq 16
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_108000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_108000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_108000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_108000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_108000_COMPAT_MATCHES_nxp_lpc_flexcomm 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_108000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_108000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_108000_P_reg {1081344 /* 0x108000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_108000_P_reg_IDX_0 1081344
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_108000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_108000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_108000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_108000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_108000, reg, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_108000, reg, 1)
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_108000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_108000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_108000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_108000_P_reg_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_108000_P_interrupts {16 /* 0x10 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_108000_P_interrupts_IDX_0 16
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_108000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_108000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_108000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_108000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_108000, interrupts, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_108000, interrupts, 1)
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_108000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_108000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_108000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_108000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_108000_P_status "disabled"
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_108000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_108000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_108000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_108000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_108000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_108000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_108000, status, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_108000, status, 1) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_108000, status, 2) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_108000, status, 3) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_108000, status, 4) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_108000, status, 5) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_108000, status, 6) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_108000, status, 7)
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_108000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_108000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_108000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_108000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_108000, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_108000, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_108000, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_108000, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_108000, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_108000_P_status_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_108000_P_compatible {"nxp,lpc-flexcomm"}
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_108000_P_compatible_IDX_0 "nxp,lpc-flexcomm"
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_108000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_108000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_108000, compatible, 0)
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_108000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_108000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_108000_P_compatible_LEN 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_108000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_108000_P_label "FLEXCOMM_2"
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_108000_P_label_STRING_TOKEN FLEXCOMM_2
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_108000_P_label_STRING_UPPER_TOKEN FLEXCOMM_2
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_108000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_108000, label, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_108000, label, 1) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_108000, label, 2) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_108000, label, 3) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_108000, label, 4) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_108000, label, 5) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_108000, label, 6) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_108000, label, 7) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_108000, label, 8) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_108000, label, 9)
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_108000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_108000, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_108000, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_108000, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_108000, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_108000, label, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_108000, label, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_108000, label, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_108000, label, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_108000, label, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_108000, label, 9, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_108000_P_label_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_108000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_108000_P_clocks_IDX_0_PH DT_N_S_soc_S_peripheral_50000000_S_clkctl_21000
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_108000_P_clocks_IDX_0_VAL_name 2
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_108000_P_clocks_IDX_0_VAL_name_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_108000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_108000, clocks, 0)
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_108000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_108000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_108000_P_clocks_LEN 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_108000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_108000_P_wakeup_source 0
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_108000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/peripheral@50000000/flexcomm@109000
 *
 * Node identifier: DT_N_S_soc_S_peripheral_50000000_S_flexcomm_109000
 *
 * Binding (compatible = nxp,lpc-i2s):
 *   $ZEPHYR_BASE\dts\bindings\i2s\nxp,lpc-i2s.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_109000_PATH "/soc/peripheral@50000000/flexcomm@109000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_109000_FULL_NAME "flexcomm@109000"

/* Node parent (/soc/peripheral@50000000) identifier: */
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_109000_PARENT DT_N_S_soc_S_peripheral_50000000
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_109000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_109000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_109000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_109000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_109000_ORD 39

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_109000_REQUIRES_ORDS \
	11, /* /soc/interrupt-controller@e000e100 */ \
	12, /* /soc/peripheral@50000000 */ \
	28, /* /soc/peripheral@50000000/clkctl@21000 */ \
	36, /* /soc/peripheral@50000000/dma-controller@104000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_109000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_109000_EXISTS 1
#define DT_N_INST_1_nxp_lpc_i2s  DT_N_S_soc_S_peripheral_50000000_S_flexcomm_109000
#define DT_N_NODELABEL_flexcomm3 DT_N_S_soc_S_peripheral_50000000_S_flexcomm_109000
#define DT_N_NODELABEL_i2s1      DT_N_S_soc_S_peripheral_50000000_S_flexcomm_109000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_109000_REG_NUM 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_109000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_109000_REG_IDX_0_VAL_ADDRESS 1343262720 /* 0x50109000 */
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_109000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_109000_RANGES_NUM 0
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_109000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_109000_IRQ_NUM 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_109000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_109000_IRQ_IDX_0_VAL_irq 17
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_109000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_109000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_109000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_109000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_109000_COMPAT_MATCHES_nxp_lpc_i2s 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_109000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_109000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_109000_P_label "I2S_1"
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_109000_P_label_STRING_TOKEN I2S_1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_109000_P_label_STRING_UPPER_TOKEN I2S_1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_109000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_109000, label, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_109000, label, 1) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_109000, label, 2) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_109000, label, 3) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_109000, label, 4)
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_109000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_109000, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_109000, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_109000, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_109000, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_109000, label, 4, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_109000_P_label_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_109000_P_status "okay"
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_109000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_109000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_109000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_109000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_109000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_109000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_109000, status, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_109000, status, 1) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_109000, status, 2) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_109000, status, 3)
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_109000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_109000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_109000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_109000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_109000, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_109000_P_status_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_109000_P_compatible {"nxp,lpc-i2s"}
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_109000_P_compatible_IDX_0 "nxp,lpc-i2s"
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_109000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_109000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_109000, compatible, 0)
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_109000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_109000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_109000_P_compatible_LEN 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_109000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_109000_P_reg {1085440 /* 0x109000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_109000_P_reg_IDX_0 1085440
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_109000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_109000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_109000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_109000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_109000, reg, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_109000, reg, 1)
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_109000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_109000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_109000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_109000_P_reg_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_109000_P_interrupts {17 /* 0x11 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_109000_P_interrupts_IDX_0 17
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_109000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_109000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_109000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_109000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_109000, interrupts, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_109000, interrupts, 1)
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_109000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_109000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_109000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_109000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_109000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_109000_P_clocks_IDX_0_PH DT_N_S_soc_S_peripheral_50000000_S_clkctl_21000
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_109000_P_clocks_IDX_0_VAL_name 3
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_109000_P_clocks_IDX_0_VAL_name_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_109000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_109000, clocks, 0)
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_109000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_109000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_109000_P_clocks_LEN 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_109000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_109000_P_dmas_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_109000_P_dmas_IDX_0_PH DT_N_S_soc_S_peripheral_50000000_S_dma_controller_104000
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_109000_P_dmas_IDX_0_VAL_channel 7
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_109000_P_dmas_IDX_0_VAL_channel_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_109000_P_dmas_IDX_0_NAME "tx"
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_109000_P_dmas_NAME_tx_PH DT_N_S_soc_S_peripheral_50000000_S_dma_controller_104000
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_109000_P_dmas_NAME_tx_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_109000_P_dmas_NAME_tx_VAL_channel DT_N_S_soc_S_peripheral_50000000_S_flexcomm_109000_P_dmas_IDX_0_VAL_channel
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_109000_P_dmas_NAME_tx_VAL_channel_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_109000_P_dmas_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_109000, dmas, 0)
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_109000_P_dmas_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_109000, dmas, 0, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_109000_P_dmas_LEN 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_109000_P_dmas_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_109000_P_dma_names {"tx"}
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_109000_P_dma_names_IDX_0 "tx"
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_109000_P_dma_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_109000_P_dma_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_109000, dma_names, 0)
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_109000_P_dma_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_109000, dma_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_109000_P_dma_names_LEN 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_109000_P_dma_names_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_109000_P_wakeup_source 0
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_109000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/peripheral@50000000/flexcomm@122000
 *
 * Node identifier: DT_N_S_soc_S_peripheral_50000000_S_flexcomm_122000
 *
 * Binding (compatible = nxp,lpc-flexcomm):
 *   $ZEPHYR_BASE\dts\bindings\arm\nxp,lpc-flexcomm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_122000_PATH "/soc/peripheral@50000000/flexcomm@122000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_122000_FULL_NAME "flexcomm@122000"

/* Node parent (/soc/peripheral@50000000) identifier: */
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_122000_PARENT DT_N_S_soc_S_peripheral_50000000
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_122000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_122000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_122000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_122000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_122000_ORD 40

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_122000_REQUIRES_ORDS \
	11, /* /soc/interrupt-controller@e000e100 */ \
	12, /* /soc/peripheral@50000000 */ \
	28, /* /soc/peripheral@50000000/clkctl@21000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_122000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_122000_EXISTS 1
#define DT_N_INST_1_nxp_lpc_flexcomm DT_N_S_soc_S_peripheral_50000000_S_flexcomm_122000
#define DT_N_NODELABEL_flexcomm4     DT_N_S_soc_S_peripheral_50000000_S_flexcomm_122000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_122000_REG_NUM 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_122000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_122000_REG_IDX_0_VAL_ADDRESS 1343365120 /* 0x50122000 */
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_122000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_122000_RANGES_NUM 0
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_122000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_122000_IRQ_NUM 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_122000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_122000_IRQ_IDX_0_VAL_irq 18
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_122000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_122000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_122000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_122000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_122000_COMPAT_MATCHES_nxp_lpc_flexcomm 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_122000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_122000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_122000_P_reg {1187840 /* 0x122000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_122000_P_reg_IDX_0 1187840
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_122000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_122000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_122000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_122000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_122000, reg, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_122000, reg, 1)
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_122000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_122000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_122000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_122000_P_reg_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_122000_P_interrupts {18 /* 0x12 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_122000_P_interrupts_IDX_0 18
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_122000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_122000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_122000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_122000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_122000, interrupts, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_122000, interrupts, 1)
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_122000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_122000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_122000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_122000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_122000_P_status "disabled"
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_122000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_122000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_122000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_122000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_122000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_122000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_122000, status, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_122000, status, 1) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_122000, status, 2) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_122000, status, 3) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_122000, status, 4) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_122000, status, 5) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_122000, status, 6) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_122000, status, 7)
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_122000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_122000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_122000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_122000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_122000, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_122000, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_122000, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_122000, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_122000, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_122000_P_status_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_122000_P_compatible {"nxp,lpc-flexcomm"}
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_122000_P_compatible_IDX_0 "nxp,lpc-flexcomm"
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_122000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_122000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_122000, compatible, 0)
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_122000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_122000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_122000_P_compatible_LEN 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_122000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_122000_P_label "FLEXCOMM_4"
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_122000_P_label_STRING_TOKEN FLEXCOMM_4
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_122000_P_label_STRING_UPPER_TOKEN FLEXCOMM_4
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_122000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_122000, label, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_122000, label, 1) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_122000, label, 2) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_122000, label, 3) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_122000, label, 4) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_122000, label, 5) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_122000, label, 6) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_122000, label, 7) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_122000, label, 8) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_122000, label, 9)
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_122000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_122000, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_122000, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_122000, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_122000, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_122000, label, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_122000, label, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_122000, label, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_122000, label, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_122000, label, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_122000, label, 9, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_122000_P_label_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_122000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_122000_P_clocks_IDX_0_PH DT_N_S_soc_S_peripheral_50000000_S_clkctl_21000
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_122000_P_clocks_IDX_0_VAL_name 4
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_122000_P_clocks_IDX_0_VAL_name_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_122000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_122000, clocks, 0)
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_122000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_122000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_122000_P_clocks_LEN 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_122000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_122000_P_wakeup_source 0
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_122000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/peripheral@50000000/flexcomm@123000
 *
 * Node identifier: DT_N_S_soc_S_peripheral_50000000_S_flexcomm_123000
 *
 * Binding (compatible = nxp,lpc-flexcomm):
 *   $ZEPHYR_BASE\dts\bindings\arm\nxp,lpc-flexcomm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_123000_PATH "/soc/peripheral@50000000/flexcomm@123000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_123000_FULL_NAME "flexcomm@123000"

/* Node parent (/soc/peripheral@50000000) identifier: */
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_123000_PARENT DT_N_S_soc_S_peripheral_50000000
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_123000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_123000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_123000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_123000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_123000_ORD 41

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_123000_REQUIRES_ORDS \
	11, /* /soc/interrupt-controller@e000e100 */ \
	12, /* /soc/peripheral@50000000 */ \
	28, /* /soc/peripheral@50000000/clkctl@21000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_123000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_123000_EXISTS 1
#define DT_N_INST_2_nxp_lpc_flexcomm DT_N_S_soc_S_peripheral_50000000_S_flexcomm_123000
#define DT_N_NODELABEL_flexcomm5     DT_N_S_soc_S_peripheral_50000000_S_flexcomm_123000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_123000_REG_NUM 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_123000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_123000_REG_IDX_0_VAL_ADDRESS 1343369216 /* 0x50123000 */
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_123000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_123000_RANGES_NUM 0
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_123000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_123000_IRQ_NUM 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_123000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_123000_IRQ_IDX_0_VAL_irq 19
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_123000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_123000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_123000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_123000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_123000_COMPAT_MATCHES_nxp_lpc_flexcomm 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_123000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_123000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_123000_P_reg {1191936 /* 0x123000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_123000_P_reg_IDX_0 1191936
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_123000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_123000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_123000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_123000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_123000, reg, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_123000, reg, 1)
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_123000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_123000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_123000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_123000_P_reg_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_123000_P_interrupts {19 /* 0x13 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_123000_P_interrupts_IDX_0 19
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_123000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_123000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_123000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_123000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_123000, interrupts, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_123000, interrupts, 1)
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_123000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_123000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_123000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_123000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_123000_P_status "disabled"
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_123000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_123000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_123000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_123000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_123000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_123000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_123000, status, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_123000, status, 1) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_123000, status, 2) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_123000, status, 3) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_123000, status, 4) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_123000, status, 5) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_123000, status, 6) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_123000, status, 7)
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_123000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_123000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_123000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_123000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_123000, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_123000, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_123000, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_123000, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_123000, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_123000_P_status_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_123000_P_compatible {"nxp,lpc-flexcomm"}
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_123000_P_compatible_IDX_0 "nxp,lpc-flexcomm"
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_123000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_123000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_123000, compatible, 0)
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_123000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_123000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_123000_P_compatible_LEN 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_123000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_123000_P_label "FLEXCOMM_5"
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_123000_P_label_STRING_TOKEN FLEXCOMM_5
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_123000_P_label_STRING_UPPER_TOKEN FLEXCOMM_5
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_123000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_123000, label, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_123000, label, 1) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_123000, label, 2) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_123000, label, 3) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_123000, label, 4) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_123000, label, 5) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_123000, label, 6) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_123000, label, 7) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_123000, label, 8) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_123000, label, 9)
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_123000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_123000, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_123000, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_123000, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_123000, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_123000, label, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_123000, label, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_123000, label, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_123000, label, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_123000, label, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_123000, label, 9, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_123000_P_label_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_123000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_123000_P_clocks_IDX_0_PH DT_N_S_soc_S_peripheral_50000000_S_clkctl_21000
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_123000_P_clocks_IDX_0_VAL_name 5
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_123000_P_clocks_IDX_0_VAL_name_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_123000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_123000, clocks, 0)
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_123000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_123000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_123000_P_clocks_LEN 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_123000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_123000_P_wakeup_source 0
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_123000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/peripheral@50000000/flexcomm@124000
 *
 * Node identifier: DT_N_S_soc_S_peripheral_50000000_S_flexcomm_124000
 *
 * Binding (compatible = nxp,lpc-flexcomm):
 *   $ZEPHYR_BASE\dts\bindings\arm\nxp,lpc-flexcomm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_124000_PATH "/soc/peripheral@50000000/flexcomm@124000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_124000_FULL_NAME "flexcomm@124000"

/* Node parent (/soc/peripheral@50000000) identifier: */
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_124000_PARENT DT_N_S_soc_S_peripheral_50000000
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_124000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_124000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_124000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_124000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_124000_ORD 42

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_124000_REQUIRES_ORDS \
	11, /* /soc/interrupt-controller@e000e100 */ \
	12, /* /soc/peripheral@50000000 */ \
	28, /* /soc/peripheral@50000000/clkctl@21000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_124000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_124000_EXISTS 1
#define DT_N_INST_3_nxp_lpc_flexcomm DT_N_S_soc_S_peripheral_50000000_S_flexcomm_124000
#define DT_N_NODELABEL_flexcomm6     DT_N_S_soc_S_peripheral_50000000_S_flexcomm_124000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_124000_REG_NUM 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_124000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_124000_REG_IDX_0_VAL_ADDRESS 1343373312 /* 0x50124000 */
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_124000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_124000_RANGES_NUM 0
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_124000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_124000_IRQ_NUM 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_124000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_124000_IRQ_IDX_0_VAL_irq 43
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_124000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_124000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_124000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_124000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_124000_COMPAT_MATCHES_nxp_lpc_flexcomm 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_124000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_124000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_124000_P_reg {1196032 /* 0x124000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_124000_P_reg_IDX_0 1196032
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_124000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_124000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_124000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_124000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_124000, reg, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_124000, reg, 1)
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_124000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_124000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_124000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_124000_P_reg_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_124000_P_interrupts {43 /* 0x2b */, 0 /* 0x0 */}
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_124000_P_interrupts_IDX_0 43
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_124000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_124000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_124000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_124000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_124000, interrupts, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_124000, interrupts, 1)
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_124000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_124000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_124000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_124000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_124000_P_status "disabled"
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_124000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_124000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_124000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_124000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_124000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_124000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_124000, status, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_124000, status, 1) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_124000, status, 2) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_124000, status, 3) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_124000, status, 4) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_124000, status, 5) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_124000, status, 6) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_124000, status, 7)
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_124000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_124000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_124000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_124000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_124000, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_124000, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_124000, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_124000, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_124000, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_124000_P_status_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_124000_P_compatible {"nxp,lpc-flexcomm"}
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_124000_P_compatible_IDX_0 "nxp,lpc-flexcomm"
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_124000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_124000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_124000, compatible, 0)
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_124000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_124000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_124000_P_compatible_LEN 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_124000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_124000_P_label "FLEXCOMM_6"
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_124000_P_label_STRING_TOKEN FLEXCOMM_6
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_124000_P_label_STRING_UPPER_TOKEN FLEXCOMM_6
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_124000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_124000, label, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_124000, label, 1) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_124000, label, 2) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_124000, label, 3) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_124000, label, 4) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_124000, label, 5) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_124000, label, 6) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_124000, label, 7) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_124000, label, 8) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_124000, label, 9)
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_124000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_124000, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_124000, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_124000, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_124000, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_124000, label, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_124000, label, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_124000, label, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_124000, label, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_124000, label, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_124000, label, 9, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_124000_P_label_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_124000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_124000_P_clocks_IDX_0_PH DT_N_S_soc_S_peripheral_50000000_S_clkctl_21000
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_124000_P_clocks_IDX_0_VAL_name 6
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_124000_P_clocks_IDX_0_VAL_name_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_124000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_124000, clocks, 0)
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_124000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_124000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_124000_P_clocks_LEN 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_124000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_124000_P_wakeup_source 0
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_124000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/peripheral@50000000/flexcomm@125000
 *
 * Node identifier: DT_N_S_soc_S_peripheral_50000000_S_flexcomm_125000
 *
 * Binding (compatible = nxp,lpc-flexcomm):
 *   $ZEPHYR_BASE\dts\bindings\arm\nxp,lpc-flexcomm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_125000_PATH "/soc/peripheral@50000000/flexcomm@125000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_125000_FULL_NAME "flexcomm@125000"

/* Node parent (/soc/peripheral@50000000) identifier: */
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_125000_PARENT DT_N_S_soc_S_peripheral_50000000
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_125000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_125000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_125000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_125000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_125000_ORD 43

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_125000_REQUIRES_ORDS \
	11, /* /soc/interrupt-controller@e000e100 */ \
	12, /* /soc/peripheral@50000000 */ \
	28, /* /soc/peripheral@50000000/clkctl@21000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_125000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_125000_EXISTS 1
#define DT_N_INST_4_nxp_lpc_flexcomm DT_N_S_soc_S_peripheral_50000000_S_flexcomm_125000
#define DT_N_NODELABEL_flexcomm7     DT_N_S_soc_S_peripheral_50000000_S_flexcomm_125000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_125000_REG_NUM 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_125000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_125000_REG_IDX_0_VAL_ADDRESS 1343377408 /* 0x50125000 */
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_125000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_125000_RANGES_NUM 0
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_125000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_125000_IRQ_NUM 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_125000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_125000_IRQ_IDX_0_VAL_irq 44
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_125000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_125000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_125000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_125000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_125000_COMPAT_MATCHES_nxp_lpc_flexcomm 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_125000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_125000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_125000_P_reg {1200128 /* 0x125000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_125000_P_reg_IDX_0 1200128
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_125000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_125000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_125000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_125000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_125000, reg, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_125000, reg, 1)
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_125000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_125000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_125000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_125000_P_reg_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_125000_P_interrupts {44 /* 0x2c */, 0 /* 0x0 */}
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_125000_P_interrupts_IDX_0 44
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_125000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_125000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_125000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_125000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_125000, interrupts, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_125000, interrupts, 1)
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_125000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_125000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_125000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_125000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_125000_P_status "disabled"
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_125000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_125000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_125000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_125000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_125000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_125000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_125000, status, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_125000, status, 1) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_125000, status, 2) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_125000, status, 3) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_125000, status, 4) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_125000, status, 5) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_125000, status, 6) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_125000, status, 7)
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_125000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_125000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_125000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_125000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_125000, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_125000, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_125000, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_125000, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_125000, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_125000_P_status_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_125000_P_compatible {"nxp,lpc-flexcomm"}
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_125000_P_compatible_IDX_0 "nxp,lpc-flexcomm"
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_125000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_125000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_125000, compatible, 0)
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_125000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_125000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_125000_P_compatible_LEN 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_125000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_125000_P_label "FLEXCOMM_7"
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_125000_P_label_STRING_TOKEN FLEXCOMM_7
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_125000_P_label_STRING_UPPER_TOKEN FLEXCOMM_7
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_125000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_125000, label, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_125000, label, 1) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_125000, label, 2) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_125000, label, 3) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_125000, label, 4) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_125000, label, 5) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_125000, label, 6) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_125000, label, 7) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_125000, label, 8) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_125000, label, 9)
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_125000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_125000, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_125000, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_125000, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_125000, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_125000, label, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_125000, label, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_125000, label, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_125000, label, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_125000, label, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_125000, label, 9, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_125000_P_label_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_125000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_125000_P_clocks_IDX_0_PH DT_N_S_soc_S_peripheral_50000000_S_clkctl_21000
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_125000_P_clocks_IDX_0_VAL_name 7
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_125000_P_clocks_IDX_0_VAL_name_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_125000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_125000, clocks, 0)
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_125000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_125000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_125000_P_clocks_LEN 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_125000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_125000_P_wakeup_source 0
#define DT_N_S_soc_S_peripheral_50000000_S_flexcomm_125000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/peripheral@50000000/lpadc@13A0000
 *
 * Node identifier: DT_N_S_soc_S_peripheral_50000000_S_lpadc_13a0000
 *
 * Binding (compatible = nxp,lpc-lpadc):
 *   $ZEPHYR_BASE\dts\bindings\iio\adc\nxp,lpc-lpadc.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_peripheral_50000000_S_lpadc_13a0000_PATH "/soc/peripheral@50000000/lpadc@13A0000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_peripheral_50000000_S_lpadc_13a0000_FULL_NAME "lpadc@13A0000"

/* Node parent (/soc/peripheral@50000000) identifier: */
#define DT_N_S_soc_S_peripheral_50000000_S_lpadc_13a0000_PARENT DT_N_S_soc_S_peripheral_50000000
#define DT_N_S_soc_S_peripheral_50000000_S_lpadc_13a0000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_lpadc_13a0000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_peripheral_50000000_S_lpadc_13a0000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_lpadc_13a0000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_peripheral_50000000_S_lpadc_13a0000_ORD 44

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_peripheral_50000000_S_lpadc_13a0000_REQUIRES_ORDS \
	11, /* /soc/interrupt-controller@e000e100 */ \
	12, /* /soc/peripheral@50000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_peripheral_50000000_S_lpadc_13a0000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_peripheral_50000000_S_lpadc_13a0000_EXISTS 1
#define DT_N_INST_0_nxp_lpc_lpadc DT_N_S_soc_S_peripheral_50000000_S_lpadc_13a0000
#define DT_N_NODELABEL_lpadc0     DT_N_S_soc_S_peripheral_50000000_S_lpadc_13a0000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_peripheral_50000000_S_lpadc_13a0000_REG_NUM 1
#define DT_N_S_soc_S_peripheral_50000000_S_lpadc_13a0000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_lpadc_13a0000_REG_IDX_0_VAL_ADDRESS 1343463424 /* 0x5013a000 */
#define DT_N_S_soc_S_peripheral_50000000_S_lpadc_13a0000_REG_IDX_0_VAL_SIZE 772 /* 0x304 */
#define DT_N_S_soc_S_peripheral_50000000_S_lpadc_13a0000_RANGES_NUM 0
#define DT_N_S_soc_S_peripheral_50000000_S_lpadc_13a0000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_lpadc_13a0000_IRQ_NUM 1
#define DT_N_S_soc_S_peripheral_50000000_S_lpadc_13a0000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_lpadc_13a0000_IRQ_IDX_0_VAL_irq 22
#define DT_N_S_soc_S_peripheral_50000000_S_lpadc_13a0000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_lpadc_13a0000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_lpadc_13a0000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_peripheral_50000000_S_lpadc_13a0000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_lpadc_13a0000_COMPAT_MATCHES_nxp_lpc_lpadc 1
#define DT_N_S_soc_S_peripheral_50000000_S_lpadc_13a0000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_peripheral_50000000_S_lpadc_13a0000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_peripheral_50000000_S_lpadc_13a0000_P_reg {1286144 /* 0x13a000 */, 772 /* 0x304 */}
#define DT_N_S_soc_S_peripheral_50000000_S_lpadc_13a0000_P_reg_IDX_0 1286144
#define DT_N_S_soc_S_peripheral_50000000_S_lpadc_13a0000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_lpadc_13a0000_P_reg_IDX_1 772
#define DT_N_S_soc_S_peripheral_50000000_S_lpadc_13a0000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_lpadc_13a0000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_lpadc_13a0000, reg, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_lpadc_13a0000, reg, 1)
#define DT_N_S_soc_S_peripheral_50000000_S_lpadc_13a0000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_lpadc_13a0000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_lpadc_13a0000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_lpadc_13a0000_P_reg_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_lpadc_13a0000_P_interrupts {22 /* 0x16 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_peripheral_50000000_S_lpadc_13a0000_P_interrupts_IDX_0 22
#define DT_N_S_soc_S_peripheral_50000000_S_lpadc_13a0000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_lpadc_13a0000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_peripheral_50000000_S_lpadc_13a0000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_lpadc_13a0000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_lpadc_13a0000, interrupts, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_lpadc_13a0000, interrupts, 1)
#define DT_N_S_soc_S_peripheral_50000000_S_lpadc_13a0000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_lpadc_13a0000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_lpadc_13a0000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_lpadc_13a0000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_lpadc_13a0000_P_clk_divider 1
#define DT_N_S_soc_S_peripheral_50000000_S_lpadc_13a0000_P_clk_divider_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_lpadc_13a0000_P_clk_source 0
#define DT_N_S_soc_S_peripheral_50000000_S_lpadc_13a0000_P_clk_source_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_lpadc_13a0000_P_voltage_ref 2
#define DT_N_S_soc_S_peripheral_50000000_S_lpadc_13a0000_P_voltage_ref_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_lpadc_13a0000_P_calibration_average 128
#define DT_N_S_soc_S_peripheral_50000000_S_lpadc_13a0000_P_calibration_average_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_lpadc_13a0000_P_power_level 1
#define DT_N_S_soc_S_peripheral_50000000_S_lpadc_13a0000_P_power_level_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_lpadc_13a0000_P_offset_value_a 10
#define DT_N_S_soc_S_peripheral_50000000_S_lpadc_13a0000_P_offset_value_a_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_lpadc_13a0000_P_offset_value_b 10
#define DT_N_S_soc_S_peripheral_50000000_S_lpadc_13a0000_P_offset_value_b_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_lpadc_13a0000_P_label "LPADC_0"
#define DT_N_S_soc_S_peripheral_50000000_S_lpadc_13a0000_P_label_STRING_TOKEN LPADC_0
#define DT_N_S_soc_S_peripheral_50000000_S_lpadc_13a0000_P_label_STRING_UPPER_TOKEN LPADC_0
#define DT_N_S_soc_S_peripheral_50000000_S_lpadc_13a0000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_lpadc_13a0000, label, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_lpadc_13a0000, label, 1) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_lpadc_13a0000, label, 2) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_lpadc_13a0000, label, 3) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_lpadc_13a0000, label, 4) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_lpadc_13a0000, label, 5) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_lpadc_13a0000, label, 6)
#define DT_N_S_soc_S_peripheral_50000000_S_lpadc_13a0000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_lpadc_13a0000, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_lpadc_13a0000, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_lpadc_13a0000, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_lpadc_13a0000, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_lpadc_13a0000, label, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_lpadc_13a0000, label, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_lpadc_13a0000, label, 6, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_lpadc_13a0000_P_label_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_lpadc_13a0000_P_status "okay"
#define DT_N_S_soc_S_peripheral_50000000_S_lpadc_13a0000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_peripheral_50000000_S_lpadc_13a0000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_peripheral_50000000_S_lpadc_13a0000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_peripheral_50000000_S_lpadc_13a0000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_peripheral_50000000_S_lpadc_13a0000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_peripheral_50000000_S_lpadc_13a0000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_lpadc_13a0000, status, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_lpadc_13a0000, status, 1) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_lpadc_13a0000, status, 2) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_lpadc_13a0000, status, 3)
#define DT_N_S_soc_S_peripheral_50000000_S_lpadc_13a0000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_lpadc_13a0000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_lpadc_13a0000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_lpadc_13a0000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_lpadc_13a0000, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_lpadc_13a0000_P_status_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_lpadc_13a0000_P_compatible {"nxp,lpc-lpadc"}
#define DT_N_S_soc_S_peripheral_50000000_S_lpadc_13a0000_P_compatible_IDX_0 "nxp,lpc-lpadc"
#define DT_N_S_soc_S_peripheral_50000000_S_lpadc_13a0000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_lpadc_13a0000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_lpadc_13a0000, compatible, 0)
#define DT_N_S_soc_S_peripheral_50000000_S_lpadc_13a0000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_lpadc_13a0000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_lpadc_13a0000_P_compatible_LEN 1
#define DT_N_S_soc_S_peripheral_50000000_S_lpadc_13a0000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_lpadc_13a0000_P_wakeup_source 0
#define DT_N_S_soc_S_peripheral_50000000_S_lpadc_13a0000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/peripheral@50000000/random@138000
 *
 * Node identifier: DT_N_S_soc_S_peripheral_50000000_S_random_138000
 *
 * Binding (compatible = nxp,kinetis-trng):
 *   $ZEPHYR_BASE\dts\bindings\rng\nxp,kinetis-trng.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_peripheral_50000000_S_random_138000_PATH "/soc/peripheral@50000000/random@138000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_peripheral_50000000_S_random_138000_FULL_NAME "random@138000"

/* Node parent (/soc/peripheral@50000000) identifier: */
#define DT_N_S_soc_S_peripheral_50000000_S_random_138000_PARENT DT_N_S_soc_S_peripheral_50000000
#define DT_N_S_soc_S_peripheral_50000000_S_random_138000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_random_138000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_peripheral_50000000_S_random_138000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_random_138000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_peripheral_50000000_S_random_138000_ORD 45

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_peripheral_50000000_S_random_138000_REQUIRES_ORDS \
	11, /* /soc/interrupt-controller@e000e100 */ \
	12, /* /soc/peripheral@50000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_peripheral_50000000_S_random_138000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_peripheral_50000000_S_random_138000_EXISTS 1
#define DT_N_INST_0_nxp_kinetis_trng DT_N_S_soc_S_peripheral_50000000_S_random_138000
#define DT_N_NODELABEL_trng          DT_N_S_soc_S_peripheral_50000000_S_random_138000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_peripheral_50000000_S_random_138000_REG_NUM 1
#define DT_N_S_soc_S_peripheral_50000000_S_random_138000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_random_138000_REG_IDX_0_VAL_ADDRESS 1343455232 /* 0x50138000 */
#define DT_N_S_soc_S_peripheral_50000000_S_random_138000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_peripheral_50000000_S_random_138000_RANGES_NUM 0
#define DT_N_S_soc_S_peripheral_50000000_S_random_138000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_random_138000_IRQ_NUM 1
#define DT_N_S_soc_S_peripheral_50000000_S_random_138000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_random_138000_IRQ_IDX_0_VAL_irq 31
#define DT_N_S_soc_S_peripheral_50000000_S_random_138000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_random_138000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_random_138000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_peripheral_50000000_S_random_138000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_random_138000_COMPAT_MATCHES_nxp_kinetis_trng 1
#define DT_N_S_soc_S_peripheral_50000000_S_random_138000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_peripheral_50000000_S_random_138000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_peripheral_50000000_S_random_138000_P_reg {1277952 /* 0x138000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_peripheral_50000000_S_random_138000_P_reg_IDX_0 1277952
#define DT_N_S_soc_S_peripheral_50000000_S_random_138000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_random_138000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_peripheral_50000000_S_random_138000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_random_138000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_random_138000, reg, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_random_138000, reg, 1)
#define DT_N_S_soc_S_peripheral_50000000_S_random_138000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_random_138000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_random_138000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_random_138000_P_reg_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_random_138000_P_interrupts {31 /* 0x1f */, 0 /* 0x0 */}
#define DT_N_S_soc_S_peripheral_50000000_S_random_138000_P_interrupts_IDX_0 31
#define DT_N_S_soc_S_peripheral_50000000_S_random_138000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_random_138000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_peripheral_50000000_S_random_138000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_random_138000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_random_138000, interrupts, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_random_138000, interrupts, 1)
#define DT_N_S_soc_S_peripheral_50000000_S_random_138000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_random_138000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_random_138000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_random_138000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_random_138000_P_label "TRNG"
#define DT_N_S_soc_S_peripheral_50000000_S_random_138000_P_label_STRING_TOKEN TRNG
#define DT_N_S_soc_S_peripheral_50000000_S_random_138000_P_label_STRING_UPPER_TOKEN TRNG
#define DT_N_S_soc_S_peripheral_50000000_S_random_138000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_random_138000, label, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_random_138000, label, 1) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_random_138000, label, 2) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_random_138000, label, 3)
#define DT_N_S_soc_S_peripheral_50000000_S_random_138000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_random_138000, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_random_138000, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_random_138000, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_random_138000, label, 3, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_random_138000_P_label_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_random_138000_P_status "okay"
#define DT_N_S_soc_S_peripheral_50000000_S_random_138000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_peripheral_50000000_S_random_138000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_peripheral_50000000_S_random_138000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_peripheral_50000000_S_random_138000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_peripheral_50000000_S_random_138000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_peripheral_50000000_S_random_138000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_random_138000, status, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_random_138000, status, 1) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_random_138000, status, 2) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_random_138000, status, 3)
#define DT_N_S_soc_S_peripheral_50000000_S_random_138000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_random_138000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_random_138000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_random_138000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_random_138000, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_random_138000_P_status_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_random_138000_P_compatible {"nxp,kinetis-trng"}
#define DT_N_S_soc_S_peripheral_50000000_S_random_138000_P_compatible_IDX_0 "nxp,kinetis-trng"
#define DT_N_S_soc_S_peripheral_50000000_S_random_138000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_random_138000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_random_138000, compatible, 0)
#define DT_N_S_soc_S_peripheral_50000000_S_random_138000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_random_138000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_random_138000_P_compatible_LEN 1
#define DT_N_S_soc_S_peripheral_50000000_S_random_138000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_random_138000_P_wakeup_source 0
#define DT_N_S_soc_S_peripheral_50000000_S_random_138000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/peripheral@50000000/rtc@30000
 *
 * Node identifier: DT_N_S_soc_S_peripheral_50000000_S_rtc_30000
 */

/* Node's full path: */
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_30000_PATH "/soc/peripheral@50000000/rtc@30000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_30000_FULL_NAME "rtc@30000"

/* Node parent (/soc/peripheral@50000000) identifier: */
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_30000_PARENT DT_N_S_soc_S_peripheral_50000000
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_30000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_30000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_30000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_30000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_30000_ORD 46

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_30000_REQUIRES_ORDS \
	11, /* /soc/interrupt-controller@e000e100 */ \
	12, /* /soc/peripheral@50000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_30000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_30000_EXISTS 1
#define DT_N_INST_0_nxp_lpc_rtc DT_N_S_soc_S_peripheral_50000000_S_rtc_30000
#define DT_N_NODELABEL_rtc      DT_N_S_soc_S_peripheral_50000000_S_rtc_30000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_30000_REG_NUM 1
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_30000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_30000_REG_IDX_0_VAL_ADDRESS 1342373888 /* 0x50030000 */
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_30000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_30000_RANGES_NUM 0
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_30000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_30000_IRQ_NUM 1
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_30000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_30000_IRQ_IDX_0_VAL_irq 32
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_30000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_30000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_30000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_30000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_30000_COMPAT_MATCHES_nxp_lpc_rtc 1
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_30000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_30000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_30000_P_compatible {"nxp,lpc-rtc"}
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_30000_P_compatible_IDX_0 "nxp,lpc-rtc"
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_30000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_30000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_rtc_30000, compatible, 0)
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_30000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_rtc_30000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_30000_P_compatible_LEN 1
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_30000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_30000_P_reg {196608 /* 0x30000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_30000_P_reg_IDX_0 196608
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_30000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_30000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_30000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_30000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_rtc_30000, reg, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_rtc_30000, reg, 1)
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_30000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_rtc_30000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_rtc_30000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_30000_P_reg_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_30000_P_interrupts {32 /* 0x20 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_30000_P_interrupts_IDX_0 32
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_30000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_30000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_30000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_30000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_rtc_30000, interrupts, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_rtc_30000, interrupts, 1)
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_30000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_rtc_30000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_rtc_30000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_30000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_30000_P_status "disabled"
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_30000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_30000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_30000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_30000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_30000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_30000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_rtc_30000, status, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_rtc_30000, status, 1) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_rtc_30000, status, 2) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_rtc_30000, status, 3) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_rtc_30000, status, 4) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_rtc_30000, status, 5) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_rtc_30000, status, 6) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_rtc_30000, status, 7)
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_30000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_rtc_30000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_rtc_30000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_rtc_30000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_rtc_30000, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_rtc_30000, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_rtc_30000, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_rtc_30000, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_rtc_30000, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_30000_P_status_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_30000_P_label "RTC_0"
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_30000_P_label_STRING_TOKEN RTC_0
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_30000_P_label_STRING_UPPER_TOKEN RTC_0
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_30000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_rtc_30000, label, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_rtc_30000, label, 1) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_rtc_30000, label, 2) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_rtc_30000, label, 3) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_rtc_30000, label, 4)
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_30000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_rtc_30000, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_rtc_30000, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_rtc_30000, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_rtc_30000, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_rtc_30000, label, 4, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_30000_P_label_EXISTS 1

/*
 * Devicetree node: /soc/peripheral@50000000/spi@126000
 *
 * Node identifier: DT_N_S_soc_S_peripheral_50000000_S_spi_126000
 *
 * Binding (compatible = nxp,lpc-spi):
 *   $ZEPHYR_BASE\dts\bindings\spi\nxp,lpc-spi.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_peripheral_50000000_S_spi_126000_PATH "/soc/peripheral@50000000/spi@126000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_peripheral_50000000_S_spi_126000_FULL_NAME "spi@126000"

/* Node parent (/soc/peripheral@50000000) identifier: */
#define DT_N_S_soc_S_peripheral_50000000_S_spi_126000_PARENT DT_N_S_soc_S_peripheral_50000000
#define DT_N_S_soc_S_peripheral_50000000_S_spi_126000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_spi_126000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_peripheral_50000000_S_spi_126000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_spi_126000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_peripheral_50000000_S_spi_126000_ORD 47

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_peripheral_50000000_S_spi_126000_REQUIRES_ORDS \
	11, /* /soc/interrupt-controller@e000e100 */ \
	12, /* /soc/peripheral@50000000 */ \
	28, /* /soc/peripheral@50000000/clkctl@21000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_peripheral_50000000_S_spi_126000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_peripheral_50000000_S_spi_126000_EXISTS 1
#define DT_N_INST_0_nxp_lpc_spi DT_N_S_soc_S_peripheral_50000000_S_spi_126000
#define DT_N_NODELABEL_hs_lspi  DT_N_S_soc_S_peripheral_50000000_S_spi_126000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_peripheral_50000000_S_spi_126000_REG_NUM 1
#define DT_N_S_soc_S_peripheral_50000000_S_spi_126000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_spi_126000_REG_IDX_0_VAL_ADDRESS 1343381504 /* 0x50126000 */
#define DT_N_S_soc_S_peripheral_50000000_S_spi_126000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_peripheral_50000000_S_spi_126000_RANGES_NUM 0
#define DT_N_S_soc_S_peripheral_50000000_S_spi_126000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_spi_126000_IRQ_NUM 1
#define DT_N_S_soc_S_peripheral_50000000_S_spi_126000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_spi_126000_IRQ_IDX_0_VAL_irq 20
#define DT_N_S_soc_S_peripheral_50000000_S_spi_126000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_spi_126000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_spi_126000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_peripheral_50000000_S_spi_126000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_spi_126000_COMPAT_MATCHES_nxp_lpc_spi 1
#define DT_N_S_soc_S_peripheral_50000000_S_spi_126000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_peripheral_50000000_S_spi_126000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_peripheral_50000000_S_spi_126000_P_label "HS_LSPI"
#define DT_N_S_soc_S_peripheral_50000000_S_spi_126000_P_label_STRING_TOKEN HS_LSPI
#define DT_N_S_soc_S_peripheral_50000000_S_spi_126000_P_label_STRING_UPPER_TOKEN HS_LSPI
#define DT_N_S_soc_S_peripheral_50000000_S_spi_126000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_spi_126000, label, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_spi_126000, label, 1) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_spi_126000, label, 2) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_spi_126000, label, 3) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_spi_126000, label, 4) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_spi_126000, label, 5) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_spi_126000, label, 6)
#define DT_N_S_soc_S_peripheral_50000000_S_spi_126000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_spi_126000, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_spi_126000, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_spi_126000, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_spi_126000, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_spi_126000, label, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_spi_126000, label, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_spi_126000, label, 6, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_spi_126000_P_label_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_spi_126000_P_status "disabled"
#define DT_N_S_soc_S_peripheral_50000000_S_spi_126000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_peripheral_50000000_S_spi_126000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_peripheral_50000000_S_spi_126000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_peripheral_50000000_S_spi_126000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_peripheral_50000000_S_spi_126000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_peripheral_50000000_S_spi_126000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_spi_126000, status, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_spi_126000, status, 1) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_spi_126000, status, 2) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_spi_126000, status, 3) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_spi_126000, status, 4) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_spi_126000, status, 5) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_spi_126000, status, 6) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_spi_126000, status, 7)
#define DT_N_S_soc_S_peripheral_50000000_S_spi_126000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_spi_126000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_spi_126000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_spi_126000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_spi_126000, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_spi_126000, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_spi_126000, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_spi_126000, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_spi_126000, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_spi_126000_P_status_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_spi_126000_P_compatible {"nxp,lpc-spi"}
#define DT_N_S_soc_S_peripheral_50000000_S_spi_126000_P_compatible_IDX_0 "nxp,lpc-spi"
#define DT_N_S_soc_S_peripheral_50000000_S_spi_126000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_spi_126000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_spi_126000, compatible, 0)
#define DT_N_S_soc_S_peripheral_50000000_S_spi_126000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_spi_126000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_spi_126000_P_compatible_LEN 1
#define DT_N_S_soc_S_peripheral_50000000_S_spi_126000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_spi_126000_P_reg {1204224 /* 0x126000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_peripheral_50000000_S_spi_126000_P_reg_IDX_0 1204224
#define DT_N_S_soc_S_peripheral_50000000_S_spi_126000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_spi_126000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_peripheral_50000000_S_spi_126000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_spi_126000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_spi_126000, reg, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_spi_126000, reg, 1)
#define DT_N_S_soc_S_peripheral_50000000_S_spi_126000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_spi_126000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_spi_126000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_spi_126000_P_reg_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_spi_126000_P_interrupts {20 /* 0x14 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_peripheral_50000000_S_spi_126000_P_interrupts_IDX_0 20
#define DT_N_S_soc_S_peripheral_50000000_S_spi_126000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_spi_126000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_peripheral_50000000_S_spi_126000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_spi_126000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_spi_126000, interrupts, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_spi_126000, interrupts, 1)
#define DT_N_S_soc_S_peripheral_50000000_S_spi_126000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_spi_126000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_spi_126000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_spi_126000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_spi_126000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_spi_126000_P_clocks_IDX_0_PH DT_N_S_soc_S_peripheral_50000000_S_clkctl_21000
#define DT_N_S_soc_S_peripheral_50000000_S_spi_126000_P_clocks_IDX_0_VAL_name 8
#define DT_N_S_soc_S_peripheral_50000000_S_spi_126000_P_clocks_IDX_0_VAL_name_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_spi_126000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_spi_126000, clocks, 0)
#define DT_N_S_soc_S_peripheral_50000000_S_spi_126000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_spi_126000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_spi_126000_P_clocks_LEN 1
#define DT_N_S_soc_S_peripheral_50000000_S_spi_126000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_spi_126000_P_wakeup_source 0
#define DT_N_S_soc_S_peripheral_50000000_S_spi_126000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/peripheral@50000000/timers@113000
 *
 * Node identifier: DT_N_S_soc_S_peripheral_50000000_S_timers_113000
 */

/* Node's full path: */
#define DT_N_S_soc_S_peripheral_50000000_S_timers_113000_PATH "/soc/peripheral@50000000/timers@113000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_peripheral_50000000_S_timers_113000_FULL_NAME "timers@113000"

/* Node parent (/soc/peripheral@50000000) identifier: */
#define DT_N_S_soc_S_peripheral_50000000_S_timers_113000_PARENT DT_N_S_soc_S_peripheral_50000000
#define DT_N_S_soc_S_peripheral_50000000_S_timers_113000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_timers_113000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_peripheral_50000000_S_timers_113000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_timers_113000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_peripheral_50000000_S_timers_113000_ORD 48

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_peripheral_50000000_S_timers_113000_REQUIRES_ORDS \
	11, /* /soc/interrupt-controller@e000e100 */ \
	12, /* /soc/peripheral@50000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_peripheral_50000000_S_timers_113000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_peripheral_50000000_S_timers_113000_EXISTS 1
#define DT_N_INST_0_nxp_os_timer DT_N_S_soc_S_peripheral_50000000_S_timers_113000
#define DT_N_NODELABEL_os_timer  DT_N_S_soc_S_peripheral_50000000_S_timers_113000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_peripheral_50000000_S_timers_113000_REG_NUM 1
#define DT_N_S_soc_S_peripheral_50000000_S_timers_113000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_timers_113000_REG_IDX_0_VAL_ADDRESS 1343303680 /* 0x50113000 */
#define DT_N_S_soc_S_peripheral_50000000_S_timers_113000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_peripheral_50000000_S_timers_113000_RANGES_NUM 0
#define DT_N_S_soc_S_peripheral_50000000_S_timers_113000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_timers_113000_IRQ_NUM 1
#define DT_N_S_soc_S_peripheral_50000000_S_timers_113000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_timers_113000_IRQ_IDX_0_VAL_irq 41
#define DT_N_S_soc_S_peripheral_50000000_S_timers_113000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_timers_113000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_timers_113000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_peripheral_50000000_S_timers_113000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_timers_113000_COMPAT_MATCHES_nxp_os_timer 1
#define DT_N_S_soc_S_peripheral_50000000_S_timers_113000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_peripheral_50000000_S_timers_113000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_peripheral_50000000_S_timers_113000_P_compatible {"nxp,os-timer"}
#define DT_N_S_soc_S_peripheral_50000000_S_timers_113000_P_compatible_IDX_0 "nxp,os-timer"
#define DT_N_S_soc_S_peripheral_50000000_S_timers_113000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_timers_113000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_timers_113000, compatible, 0)
#define DT_N_S_soc_S_peripheral_50000000_S_timers_113000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_timers_113000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_timers_113000_P_compatible_LEN 1
#define DT_N_S_soc_S_peripheral_50000000_S_timers_113000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_timers_113000_P_reg {1126400 /* 0x113000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_peripheral_50000000_S_timers_113000_P_reg_IDX_0 1126400
#define DT_N_S_soc_S_peripheral_50000000_S_timers_113000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_timers_113000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_peripheral_50000000_S_timers_113000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_timers_113000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_timers_113000, reg, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_timers_113000, reg, 1)
#define DT_N_S_soc_S_peripheral_50000000_S_timers_113000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_timers_113000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_timers_113000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_timers_113000_P_reg_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_timers_113000_P_interrupts {41 /* 0x29 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_peripheral_50000000_S_timers_113000_P_interrupts_IDX_0 41
#define DT_N_S_soc_S_peripheral_50000000_S_timers_113000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_timers_113000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_peripheral_50000000_S_timers_113000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_timers_113000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_timers_113000, interrupts, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_timers_113000, interrupts, 1)
#define DT_N_S_soc_S_peripheral_50000000_S_timers_113000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_timers_113000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_timers_113000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_timers_113000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_timers_113000_P_status "okay"
#define DT_N_S_soc_S_peripheral_50000000_S_timers_113000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_peripheral_50000000_S_timers_113000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_peripheral_50000000_S_timers_113000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_peripheral_50000000_S_timers_113000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_peripheral_50000000_S_timers_113000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_peripheral_50000000_S_timers_113000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_timers_113000, status, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_timers_113000, status, 1) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_timers_113000, status, 2) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_timers_113000, status, 3)
#define DT_N_S_soc_S_peripheral_50000000_S_timers_113000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_timers_113000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_timers_113000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_timers_113000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_timers_113000, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_timers_113000_P_status_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_timers_113000_P_label "OS_TIMER"
#define DT_N_S_soc_S_peripheral_50000000_S_timers_113000_P_label_STRING_TOKEN OS_TIMER
#define DT_N_S_soc_S_peripheral_50000000_S_timers_113000_P_label_STRING_UPPER_TOKEN OS_TIMER
#define DT_N_S_soc_S_peripheral_50000000_S_timers_113000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_timers_113000, label, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_timers_113000, label, 1) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_timers_113000, label, 2) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_timers_113000, label, 3) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_timers_113000, label, 4) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_timers_113000, label, 5) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_timers_113000, label, 6) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_timers_113000, label, 7)
#define DT_N_S_soc_S_peripheral_50000000_S_timers_113000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_timers_113000, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_timers_113000, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_timers_113000, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_timers_113000, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_timers_113000, label, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_timers_113000, label, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_timers_113000, label, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_timers_113000, label, 7, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_timers_113000_P_label_EXISTS 1

/*
 * Devicetree node: /soc/peripheral@50000000/usbhs@144000
 *
 * Node identifier: DT_N_S_soc_S_peripheral_50000000_S_usbhs_144000
 *
 * Binding (compatible = nxp,mcux-usbd):
 *   $ZEPHYR_BASE\dts\bindings\usb\nxp,mcux-usbd.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_peripheral_50000000_S_usbhs_144000_PATH "/soc/peripheral@50000000/usbhs@144000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_peripheral_50000000_S_usbhs_144000_FULL_NAME "usbhs@144000"

/* Node parent (/soc/peripheral@50000000) identifier: */
#define DT_N_S_soc_S_peripheral_50000000_S_usbhs_144000_PARENT DT_N_S_soc_S_peripheral_50000000
#define DT_N_S_soc_S_peripheral_50000000_S_usbhs_144000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_usbhs_144000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_peripheral_50000000_S_usbhs_144000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_usbhs_144000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_peripheral_50000000_S_usbhs_144000_ORD 49

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_peripheral_50000000_S_usbhs_144000_REQUIRES_ORDS \
	11, /* /soc/interrupt-controller@e000e100 */ \
	12, /* /soc/peripheral@50000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_peripheral_50000000_S_usbhs_144000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_peripheral_50000000_S_usbhs_144000_EXISTS 1
#define DT_N_INST_0_nxp_mcux_usbd  DT_N_S_soc_S_peripheral_50000000_S_usbhs_144000
#define DT_N_NODELABEL_usbhs       DT_N_S_soc_S_peripheral_50000000_S_usbhs_144000
#define DT_N_NODELABEL_zephyr_udc0 DT_N_S_soc_S_peripheral_50000000_S_usbhs_144000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_peripheral_50000000_S_usbhs_144000_REG_NUM 1
#define DT_N_S_soc_S_peripheral_50000000_S_usbhs_144000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_usbhs_144000_REG_IDX_0_VAL_ADDRESS 1343504384 /* 0x50144000 */
#define DT_N_S_soc_S_peripheral_50000000_S_usbhs_144000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_peripheral_50000000_S_usbhs_144000_RANGES_NUM 0
#define DT_N_S_soc_S_peripheral_50000000_S_usbhs_144000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_usbhs_144000_IRQ_NUM 1
#define DT_N_S_soc_S_peripheral_50000000_S_usbhs_144000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_usbhs_144000_IRQ_IDX_0_VAL_irq 50
#define DT_N_S_soc_S_peripheral_50000000_S_usbhs_144000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_usbhs_144000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_usbhs_144000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_peripheral_50000000_S_usbhs_144000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_usbhs_144000_COMPAT_MATCHES_nxp_mcux_usbd 1
#define DT_N_S_soc_S_peripheral_50000000_S_usbhs_144000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_peripheral_50000000_S_usbhs_144000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_peripheral_50000000_S_usbhs_144000_P_reg {1327104 /* 0x144000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_peripheral_50000000_S_usbhs_144000_P_reg_IDX_0 1327104
#define DT_N_S_soc_S_peripheral_50000000_S_usbhs_144000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_usbhs_144000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_peripheral_50000000_S_usbhs_144000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_usbhs_144000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_usbhs_144000, reg, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_usbhs_144000, reg, 1)
#define DT_N_S_soc_S_peripheral_50000000_S_usbhs_144000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_usbhs_144000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_usbhs_144000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_usbhs_144000_P_reg_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_usbhs_144000_P_interrupts {50 /* 0x32 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_peripheral_50000000_S_usbhs_144000_P_interrupts_IDX_0 50
#define DT_N_S_soc_S_peripheral_50000000_S_usbhs_144000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_usbhs_144000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_peripheral_50000000_S_usbhs_144000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_usbhs_144000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_usbhs_144000, interrupts, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_usbhs_144000, interrupts, 1)
#define DT_N_S_soc_S_peripheral_50000000_S_usbhs_144000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_usbhs_144000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_usbhs_144000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_usbhs_144000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_usbhs_144000_P_num_bidir_endpoints 6
#define DT_N_S_soc_S_peripheral_50000000_S_usbhs_144000_P_num_bidir_endpoints_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_usbhs_144000_P_label "USBHS_0"
#define DT_N_S_soc_S_peripheral_50000000_S_usbhs_144000_P_label_STRING_TOKEN USBHS_0
#define DT_N_S_soc_S_peripheral_50000000_S_usbhs_144000_P_label_STRING_UPPER_TOKEN USBHS_0
#define DT_N_S_soc_S_peripheral_50000000_S_usbhs_144000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_usbhs_144000, label, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_usbhs_144000, label, 1) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_usbhs_144000, label, 2) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_usbhs_144000, label, 3) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_usbhs_144000, label, 4) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_usbhs_144000, label, 5) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_usbhs_144000, label, 6)
#define DT_N_S_soc_S_peripheral_50000000_S_usbhs_144000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_usbhs_144000, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_usbhs_144000, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_usbhs_144000, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_usbhs_144000, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_usbhs_144000, label, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_usbhs_144000, label, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_usbhs_144000, label, 6, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_usbhs_144000_P_label_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_usbhs_144000_P_status "okay"
#define DT_N_S_soc_S_peripheral_50000000_S_usbhs_144000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_peripheral_50000000_S_usbhs_144000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_peripheral_50000000_S_usbhs_144000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_peripheral_50000000_S_usbhs_144000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_peripheral_50000000_S_usbhs_144000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_peripheral_50000000_S_usbhs_144000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_usbhs_144000, status, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_usbhs_144000, status, 1) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_usbhs_144000, status, 2) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_usbhs_144000, status, 3)
#define DT_N_S_soc_S_peripheral_50000000_S_usbhs_144000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_usbhs_144000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_usbhs_144000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_usbhs_144000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_usbhs_144000, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_usbhs_144000_P_status_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_usbhs_144000_P_compatible {"nxp,mcux-usbd"}
#define DT_N_S_soc_S_peripheral_50000000_S_usbhs_144000_P_compatible_IDX_0 "nxp,mcux-usbd"
#define DT_N_S_soc_S_peripheral_50000000_S_usbhs_144000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_usbhs_144000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_usbhs_144000, compatible, 0)
#define DT_N_S_soc_S_peripheral_50000000_S_usbhs_144000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_usbhs_144000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_usbhs_144000_P_compatible_LEN 1
#define DT_N_S_soc_S_peripheral_50000000_S_usbhs_144000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_usbhs_144000_P_wakeup_source 0
#define DT_N_S_soc_S_peripheral_50000000_S_usbhs_144000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/peripheral@50000000/gpio@2
 *
 * Node identifier: DT_N_S_soc_S_peripheral_50000000_S_gpio_2
 *
 * Binding (compatible = nxp,lpc-gpio):
 *   $ZEPHYR_BASE\dts\bindings\gpio\nxp,lpc-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_2_PATH "/soc/peripheral@50000000/gpio@2"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_2_FULL_NAME "gpio@2"

/* Node parent (/soc/peripheral@50000000) identifier: */
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_2_PARENT DT_N_S_soc_S_peripheral_50000000
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_2_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_2_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_2_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_2_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_2_ORD 50

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_2_REQUIRES_ORDS \
	12, /* /soc/peripheral@50000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_2_SUPPORTS_ORDS \
	51, /* /soc/peripheral@50000000/usdhc@136000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_2_EXISTS 1
#define DT_N_INST_2_nxp_lpc_gpio DT_N_S_soc_S_peripheral_50000000_S_gpio_2
#define DT_N_NODELABEL_gpio2     DT_N_S_soc_S_peripheral_50000000_S_gpio_2

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_2_REG_NUM 1
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_2_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_2_REG_IDX_0_VAL_ADDRESS 1343225856 /* 0x50100000 */
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_2_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_2_RANGES_NUM 0
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_2_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_2_IRQ_NUM 0
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_2_COMPAT_MATCHES_nxp_lpc_gpio 1
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_2_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_2_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_2_P_reg {1048576 /* 0x100000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_2_P_reg_IDX_0 1048576
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_2_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_2_P_reg_IDX_1 4096
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_2_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_2_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_gpio_2, reg, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_gpio_2, reg, 1)
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_2_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_gpio_2, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_gpio_2, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_2_P_reg_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_2_P_label "GPIO_2"
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_2_P_label_STRING_TOKEN GPIO_2
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_2_P_label_STRING_UPPER_TOKEN GPIO_2
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_2_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_gpio_2, label, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_gpio_2, label, 1) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_gpio_2, label, 2) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_gpio_2, label, 3) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_gpio_2, label, 4) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_gpio_2, label, 5)
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_2_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_gpio_2, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_gpio_2, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_gpio_2, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_gpio_2, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_gpio_2, label, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_gpio_2, label, 5, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_2_P_label_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_2_P_port 2
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_2_P_port_ENUM_IDX 2
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_2_P_port_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_2_P_gpio_controller 1
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_2_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_2_P_ngpios 32
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_2_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_2_P_status "okay"
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_2_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_2_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_2_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_2_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_2_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_2_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_gpio_2, status, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_gpio_2, status, 1) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_gpio_2, status, 2) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_gpio_2, status, 3)
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_2_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_gpio_2, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_gpio_2, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_gpio_2, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_gpio_2, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_2_P_status_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_2_P_compatible {"nxp,lpc-gpio"}
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_2_P_compatible_IDX_0 "nxp,lpc-gpio"
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_2_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_2_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_gpio_2, compatible, 0)
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_2_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_gpio_2, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_2_P_compatible_LEN 1
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_2_P_compatible_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_2_P_wakeup_source 0
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_2_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/peripheral@50000000/usdhc@136000
 *
 * Node identifier: DT_N_S_soc_S_peripheral_50000000_S_usdhc_136000
 *
 * Binding (compatible = nxp,imx-usdhc):
 *   $ZEPHYR_BASE\dts\bindings\mmc\nxp,imx-usdhc.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_peripheral_50000000_S_usdhc_136000_PATH "/soc/peripheral@50000000/usdhc@136000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_peripheral_50000000_S_usdhc_136000_FULL_NAME "usdhc@136000"

/* Node parent (/soc/peripheral@50000000) identifier: */
#define DT_N_S_soc_S_peripheral_50000000_S_usdhc_136000_PARENT DT_N_S_soc_S_peripheral_50000000
#define DT_N_S_soc_S_peripheral_50000000_S_usdhc_136000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_usdhc_136000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_peripheral_50000000_S_usdhc_136000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_usdhc_136000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_peripheral_50000000_S_usdhc_136000_ORD 51

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_peripheral_50000000_S_usdhc_136000_REQUIRES_ORDS \
	11, /* /soc/interrupt-controller@e000e100 */ \
	12, /* /soc/peripheral@50000000 */ \
	28, /* /soc/peripheral@50000000/clkctl@21000 */ \
	50, /* /soc/peripheral@50000000/gpio@2 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_peripheral_50000000_S_usdhc_136000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_peripheral_50000000_S_usdhc_136000_EXISTS 1
#define DT_N_INST_0_nxp_imx_usdhc DT_N_S_soc_S_peripheral_50000000_S_usdhc_136000
#define DT_N_NODELABEL_usdhc1     DT_N_S_soc_S_peripheral_50000000_S_usdhc_136000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_peripheral_50000000_S_usdhc_136000_REG_NUM 1
#define DT_N_S_soc_S_peripheral_50000000_S_usdhc_136000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_usdhc_136000_REG_IDX_0_VAL_ADDRESS 1343447040 /* 0x50136000 */
#define DT_N_S_soc_S_peripheral_50000000_S_usdhc_136000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_peripheral_50000000_S_usdhc_136000_RANGES_NUM 0
#define DT_N_S_soc_S_peripheral_50000000_S_usdhc_136000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_usdhc_136000_IRQ_NUM 1
#define DT_N_S_soc_S_peripheral_50000000_S_usdhc_136000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_usdhc_136000_IRQ_IDX_0_VAL_irq 45
#define DT_N_S_soc_S_peripheral_50000000_S_usdhc_136000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_usdhc_136000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_usdhc_136000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_peripheral_50000000_S_usdhc_136000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_usdhc_136000_COMPAT_MATCHES_nxp_imx_usdhc 1
#define DT_N_S_soc_S_peripheral_50000000_S_usdhc_136000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_peripheral_50000000_S_usdhc_136000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_peripheral_50000000_S_usdhc_136000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_usdhc_136000_P_clocks_IDX_0_PH DT_N_S_soc_S_peripheral_50000000_S_clkctl_21000
#define DT_N_S_soc_S_peripheral_50000000_S_usdhc_136000_P_clocks_IDX_0_VAL_name 9
#define DT_N_S_soc_S_peripheral_50000000_S_usdhc_136000_P_clocks_IDX_0_VAL_name_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_usdhc_136000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_usdhc_136000, clocks, 0)
#define DT_N_S_soc_S_peripheral_50000000_S_usdhc_136000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_usdhc_136000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_usdhc_136000_P_clocks_LEN 1
#define DT_N_S_soc_S_peripheral_50000000_S_usdhc_136000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_usdhc_136000_P_pwr_gpios_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_usdhc_136000_P_pwr_gpios_IDX_0_PH DT_N_S_soc_S_peripheral_50000000_S_gpio_2
#define DT_N_S_soc_S_peripheral_50000000_S_usdhc_136000_P_pwr_gpios_IDX_0_VAL_pin 10
#define DT_N_S_soc_S_peripheral_50000000_S_usdhc_136000_P_pwr_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_usdhc_136000_P_pwr_gpios_IDX_0_VAL_flags 0
#define DT_N_S_soc_S_peripheral_50000000_S_usdhc_136000_P_pwr_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_usdhc_136000_P_pwr_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_usdhc_136000, pwr_gpios, 0)
#define DT_N_S_soc_S_peripheral_50000000_S_usdhc_136000_P_pwr_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_usdhc_136000, pwr_gpios, 0, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_usdhc_136000_P_pwr_gpios_LEN 1
#define DT_N_S_soc_S_peripheral_50000000_S_usdhc_136000_P_pwr_gpios_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_usdhc_136000_P_no_1_8_v 1
#define DT_N_S_soc_S_peripheral_50000000_S_usdhc_136000_P_no_1_8_v_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_usdhc_136000_P_detect_dat3 0
#define DT_N_S_soc_S_peripheral_50000000_S_usdhc_136000_P_detect_dat3_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_usdhc_136000_P_label "USDHC_1"
#define DT_N_S_soc_S_peripheral_50000000_S_usdhc_136000_P_label_STRING_TOKEN USDHC_1
#define DT_N_S_soc_S_peripheral_50000000_S_usdhc_136000_P_label_STRING_UPPER_TOKEN USDHC_1
#define DT_N_S_soc_S_peripheral_50000000_S_usdhc_136000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_usdhc_136000, label, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_usdhc_136000, label, 1) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_usdhc_136000, label, 2) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_usdhc_136000, label, 3) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_usdhc_136000, label, 4) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_usdhc_136000, label, 5) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_usdhc_136000, label, 6)
#define DT_N_S_soc_S_peripheral_50000000_S_usdhc_136000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_usdhc_136000, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_usdhc_136000, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_usdhc_136000, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_usdhc_136000, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_usdhc_136000, label, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_usdhc_136000, label, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_usdhc_136000, label, 6, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_usdhc_136000_P_label_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_usdhc_136000_P_status "okay"
#define DT_N_S_soc_S_peripheral_50000000_S_usdhc_136000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_peripheral_50000000_S_usdhc_136000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_peripheral_50000000_S_usdhc_136000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_peripheral_50000000_S_usdhc_136000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_peripheral_50000000_S_usdhc_136000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_peripheral_50000000_S_usdhc_136000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_usdhc_136000, status, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_usdhc_136000, status, 1) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_usdhc_136000, status, 2) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_usdhc_136000, status, 3)
#define DT_N_S_soc_S_peripheral_50000000_S_usdhc_136000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_usdhc_136000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_usdhc_136000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_usdhc_136000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_usdhc_136000, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_usdhc_136000_P_status_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_usdhc_136000_P_compatible {"nxp,imx-usdhc"}
#define DT_N_S_soc_S_peripheral_50000000_S_usdhc_136000_P_compatible_IDX_0 "nxp,imx-usdhc"
#define DT_N_S_soc_S_peripheral_50000000_S_usdhc_136000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_usdhc_136000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_usdhc_136000, compatible, 0)
#define DT_N_S_soc_S_peripheral_50000000_S_usdhc_136000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_usdhc_136000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_usdhc_136000_P_compatible_LEN 1
#define DT_N_S_soc_S_peripheral_50000000_S_usdhc_136000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_usdhc_136000_P_reg {1269760 /* 0x136000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_peripheral_50000000_S_usdhc_136000_P_reg_IDX_0 1269760
#define DT_N_S_soc_S_peripheral_50000000_S_usdhc_136000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_usdhc_136000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_peripheral_50000000_S_usdhc_136000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_usdhc_136000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_usdhc_136000, reg, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_usdhc_136000, reg, 1)
#define DT_N_S_soc_S_peripheral_50000000_S_usdhc_136000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_usdhc_136000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_usdhc_136000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_usdhc_136000_P_reg_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_usdhc_136000_P_interrupts {45 /* 0x2d */, 0 /* 0x0 */}
#define DT_N_S_soc_S_peripheral_50000000_S_usdhc_136000_P_interrupts_IDX_0 45
#define DT_N_S_soc_S_peripheral_50000000_S_usdhc_136000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_usdhc_136000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_peripheral_50000000_S_usdhc_136000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_usdhc_136000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_usdhc_136000, interrupts, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_usdhc_136000, interrupts, 1)
#define DT_N_S_soc_S_peripheral_50000000_S_usdhc_136000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_usdhc_136000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_usdhc_136000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_usdhc_136000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_usdhc_136000_P_wakeup_source 0
#define DT_N_S_soc_S_peripheral_50000000_S_usdhc_136000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/peripheral@50000000/usdhc@137000
 *
 * Node identifier: DT_N_S_soc_S_peripheral_50000000_S_usdhc_137000
 *
 * Binding (compatible = nxp,imx-usdhc):
 *   $ZEPHYR_BASE\dts\bindings\mmc\nxp,imx-usdhc.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_peripheral_50000000_S_usdhc_137000_PATH "/soc/peripheral@50000000/usdhc@137000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_peripheral_50000000_S_usdhc_137000_FULL_NAME "usdhc@137000"

/* Node parent (/soc/peripheral@50000000) identifier: */
#define DT_N_S_soc_S_peripheral_50000000_S_usdhc_137000_PARENT DT_N_S_soc_S_peripheral_50000000
#define DT_N_S_soc_S_peripheral_50000000_S_usdhc_137000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_usdhc_137000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_peripheral_50000000_S_usdhc_137000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_usdhc_137000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_peripheral_50000000_S_usdhc_137000_ORD 52

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_peripheral_50000000_S_usdhc_137000_REQUIRES_ORDS \
	11, /* /soc/interrupt-controller@e000e100 */ \
	12, /* /soc/peripheral@50000000 */ \
	28, /* /soc/peripheral@50000000/clkctl@21000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_peripheral_50000000_S_usdhc_137000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_peripheral_50000000_S_usdhc_137000_EXISTS 1
#define DT_N_INST_1_nxp_imx_usdhc DT_N_S_soc_S_peripheral_50000000_S_usdhc_137000
#define DT_N_NODELABEL_usdhc2     DT_N_S_soc_S_peripheral_50000000_S_usdhc_137000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_peripheral_50000000_S_usdhc_137000_REG_NUM 1
#define DT_N_S_soc_S_peripheral_50000000_S_usdhc_137000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_usdhc_137000_REG_IDX_0_VAL_ADDRESS 1343451136 /* 0x50137000 */
#define DT_N_S_soc_S_peripheral_50000000_S_usdhc_137000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_peripheral_50000000_S_usdhc_137000_RANGES_NUM 0
#define DT_N_S_soc_S_peripheral_50000000_S_usdhc_137000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_usdhc_137000_IRQ_NUM 1
#define DT_N_S_soc_S_peripheral_50000000_S_usdhc_137000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_usdhc_137000_IRQ_IDX_0_VAL_irq 46
#define DT_N_S_soc_S_peripheral_50000000_S_usdhc_137000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_usdhc_137000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_usdhc_137000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_peripheral_50000000_S_usdhc_137000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_usdhc_137000_COMPAT_MATCHES_nxp_imx_usdhc 1
#define DT_N_S_soc_S_peripheral_50000000_S_usdhc_137000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_peripheral_50000000_S_usdhc_137000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_peripheral_50000000_S_usdhc_137000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_usdhc_137000_P_clocks_IDX_0_PH DT_N_S_soc_S_peripheral_50000000_S_clkctl_21000
#define DT_N_S_soc_S_peripheral_50000000_S_usdhc_137000_P_clocks_IDX_0_VAL_name 10
#define DT_N_S_soc_S_peripheral_50000000_S_usdhc_137000_P_clocks_IDX_0_VAL_name_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_usdhc_137000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_usdhc_137000, clocks, 0)
#define DT_N_S_soc_S_peripheral_50000000_S_usdhc_137000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_usdhc_137000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_usdhc_137000_P_clocks_LEN 1
#define DT_N_S_soc_S_peripheral_50000000_S_usdhc_137000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_usdhc_137000_P_no_1_8_v 0
#define DT_N_S_soc_S_peripheral_50000000_S_usdhc_137000_P_no_1_8_v_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_usdhc_137000_P_detect_dat3 0
#define DT_N_S_soc_S_peripheral_50000000_S_usdhc_137000_P_detect_dat3_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_usdhc_137000_P_label "USDHC_2"
#define DT_N_S_soc_S_peripheral_50000000_S_usdhc_137000_P_label_STRING_TOKEN USDHC_2
#define DT_N_S_soc_S_peripheral_50000000_S_usdhc_137000_P_label_STRING_UPPER_TOKEN USDHC_2
#define DT_N_S_soc_S_peripheral_50000000_S_usdhc_137000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_usdhc_137000, label, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_usdhc_137000, label, 1) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_usdhc_137000, label, 2) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_usdhc_137000, label, 3) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_usdhc_137000, label, 4) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_usdhc_137000, label, 5) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_usdhc_137000, label, 6)
#define DT_N_S_soc_S_peripheral_50000000_S_usdhc_137000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_usdhc_137000, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_usdhc_137000, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_usdhc_137000, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_usdhc_137000, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_usdhc_137000, label, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_usdhc_137000, label, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_usdhc_137000, label, 6, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_usdhc_137000_P_label_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_usdhc_137000_P_status "disabled"
#define DT_N_S_soc_S_peripheral_50000000_S_usdhc_137000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_peripheral_50000000_S_usdhc_137000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_peripheral_50000000_S_usdhc_137000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_peripheral_50000000_S_usdhc_137000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_peripheral_50000000_S_usdhc_137000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_peripheral_50000000_S_usdhc_137000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_usdhc_137000, status, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_usdhc_137000, status, 1) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_usdhc_137000, status, 2) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_usdhc_137000, status, 3) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_usdhc_137000, status, 4) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_usdhc_137000, status, 5) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_usdhc_137000, status, 6) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_usdhc_137000, status, 7)
#define DT_N_S_soc_S_peripheral_50000000_S_usdhc_137000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_usdhc_137000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_usdhc_137000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_usdhc_137000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_usdhc_137000, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_usdhc_137000, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_usdhc_137000, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_usdhc_137000, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_usdhc_137000, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_usdhc_137000_P_status_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_usdhc_137000_P_compatible {"nxp,imx-usdhc"}
#define DT_N_S_soc_S_peripheral_50000000_S_usdhc_137000_P_compatible_IDX_0 "nxp,imx-usdhc"
#define DT_N_S_soc_S_peripheral_50000000_S_usdhc_137000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_usdhc_137000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_usdhc_137000, compatible, 0)
#define DT_N_S_soc_S_peripheral_50000000_S_usdhc_137000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_usdhc_137000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_usdhc_137000_P_compatible_LEN 1
#define DT_N_S_soc_S_peripheral_50000000_S_usdhc_137000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_usdhc_137000_P_reg {1273856 /* 0x137000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_peripheral_50000000_S_usdhc_137000_P_reg_IDX_0 1273856
#define DT_N_S_soc_S_peripheral_50000000_S_usdhc_137000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_usdhc_137000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_peripheral_50000000_S_usdhc_137000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_usdhc_137000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_usdhc_137000, reg, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_usdhc_137000, reg, 1)
#define DT_N_S_soc_S_peripheral_50000000_S_usdhc_137000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_usdhc_137000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_usdhc_137000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_usdhc_137000_P_reg_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_usdhc_137000_P_interrupts {46 /* 0x2e */, 0 /* 0x0 */}
#define DT_N_S_soc_S_peripheral_50000000_S_usdhc_137000_P_interrupts_IDX_0 46
#define DT_N_S_soc_S_peripheral_50000000_S_usdhc_137000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_usdhc_137000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_peripheral_50000000_S_usdhc_137000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_usdhc_137000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_usdhc_137000, interrupts, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_usdhc_137000, interrupts, 1)
#define DT_N_S_soc_S_peripheral_50000000_S_usdhc_137000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_usdhc_137000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_usdhc_137000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_usdhc_137000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_usdhc_137000_P_wakeup_source 0
#define DT_N_S_soc_S_peripheral_50000000_S_usdhc_137000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/peripheral@50000000/uuid@2f50
 *
 * Node identifier: DT_N_S_soc_S_peripheral_50000000_S_uuid_2f50
 *
 * Binding (compatible = nxp,lpc-uid):
 *   $ZEPHYR_BASE\dts\bindings\hwinfo\nxp,lpc-uid.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_peripheral_50000000_S_uuid_2f50_PATH "/soc/peripheral@50000000/uuid@2f50"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_peripheral_50000000_S_uuid_2f50_FULL_NAME "uuid@2f50"

/* Node parent (/soc/peripheral@50000000) identifier: */
#define DT_N_S_soc_S_peripheral_50000000_S_uuid_2f50_PARENT DT_N_S_soc_S_peripheral_50000000
#define DT_N_S_soc_S_peripheral_50000000_S_uuid_2f50_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_uuid_2f50_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_peripheral_50000000_S_uuid_2f50_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_uuid_2f50_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_peripheral_50000000_S_uuid_2f50_ORD 53

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_peripheral_50000000_S_uuid_2f50_REQUIRES_ORDS \
	12, /* /soc/peripheral@50000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_peripheral_50000000_S_uuid_2f50_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_peripheral_50000000_S_uuid_2f50_EXISTS 1
#define DT_N_INST_0_nxp_lpc_uid DT_N_S_soc_S_peripheral_50000000_S_uuid_2f50
#define DT_N_NODELABEL_uuid     DT_N_S_soc_S_peripheral_50000000_S_uuid_2f50

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_peripheral_50000000_S_uuid_2f50_REG_NUM 1
#define DT_N_S_soc_S_peripheral_50000000_S_uuid_2f50_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_uuid_2f50_REG_IDX_0_VAL_ADDRESS 1342189392 /* 0x50002f50 */
#define DT_N_S_soc_S_peripheral_50000000_S_uuid_2f50_REG_IDX_0_VAL_SIZE 16 /* 0x10 */
#define DT_N_S_soc_S_peripheral_50000000_S_uuid_2f50_RANGES_NUM 0
#define DT_N_S_soc_S_peripheral_50000000_S_uuid_2f50_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_uuid_2f50_IRQ_NUM 0
#define DT_N_S_soc_S_peripheral_50000000_S_uuid_2f50_COMPAT_MATCHES_nxp_lpc_uid 1
#define DT_N_S_soc_S_peripheral_50000000_S_uuid_2f50_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_peripheral_50000000_S_uuid_2f50_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_peripheral_50000000_S_uuid_2f50_P_reg {12112 /* 0x2f50 */, 16 /* 0x10 */}
#define DT_N_S_soc_S_peripheral_50000000_S_uuid_2f50_P_reg_IDX_0 12112
#define DT_N_S_soc_S_peripheral_50000000_S_uuid_2f50_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_uuid_2f50_P_reg_IDX_1 16
#define DT_N_S_soc_S_peripheral_50000000_S_uuid_2f50_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_uuid_2f50_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_uuid_2f50, reg, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_uuid_2f50, reg, 1)
#define DT_N_S_soc_S_peripheral_50000000_S_uuid_2f50_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_uuid_2f50, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_uuid_2f50, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_uuid_2f50_P_reg_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_uuid_2f50_P_compatible {"nxp,lpc-uid"}
#define DT_N_S_soc_S_peripheral_50000000_S_uuid_2f50_P_compatible_IDX_0 "nxp,lpc-uid"
#define DT_N_S_soc_S_peripheral_50000000_S_uuid_2f50_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_uuid_2f50_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_uuid_2f50, compatible, 0)
#define DT_N_S_soc_S_peripheral_50000000_S_uuid_2f50_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_uuid_2f50, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_uuid_2f50_P_compatible_LEN 1
#define DT_N_S_soc_S_peripheral_50000000_S_uuid_2f50_P_compatible_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_uuid_2f50_P_wakeup_source 0
#define DT_N_S_soc_S_peripheral_50000000_S_uuid_2f50_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/peripheral@50000000/watchdog@e000
 *
 * Node identifier: DT_N_S_soc_S_peripheral_50000000_S_watchdog_e000
 *
 * Binding (compatible = nxp,lpc-wwdt):
 *   $ZEPHYR_BASE\dts\bindings\watchdog\nxp,lpc-wwdt.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_e000_PATH "/soc/peripheral@50000000/watchdog@e000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_e000_FULL_NAME "watchdog@e000"

/* Node parent (/soc/peripheral@50000000) identifier: */
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_e000_PARENT DT_N_S_soc_S_peripheral_50000000
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_e000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_e000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_e000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_e000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_e000_ORD 54

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_e000_REQUIRES_ORDS \
	11, /* /soc/interrupt-controller@e000e100 */ \
	12, /* /soc/peripheral@50000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_e000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_e000_EXISTS 1
#define DT_N_ALIAS_watchdog0     DT_N_S_soc_S_peripheral_50000000_S_watchdog_e000
#define DT_N_INST_0_nxp_lpc_wwdt DT_N_S_soc_S_peripheral_50000000_S_watchdog_e000
#define DT_N_NODELABEL_wwdt0     DT_N_S_soc_S_peripheral_50000000_S_watchdog_e000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_e000_REG_NUM 1
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_e000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_e000_REG_IDX_0_VAL_ADDRESS 1342234624 /* 0x5000e000 */
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_e000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_e000_RANGES_NUM 0
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_e000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_e000_IRQ_NUM 1
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_e000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_e000_IRQ_IDX_0_VAL_irq 0
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_e000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_e000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_e000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_e000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_e000_COMPAT_MATCHES_nxp_lpc_wwdt 1
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_e000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_e000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_e000_P_reg {57344 /* 0xe000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_e000_P_reg_IDX_0 57344
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_e000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_e000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_e000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_e000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_watchdog_e000, reg, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_watchdog_e000, reg, 1)
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_e000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_watchdog_e000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_watchdog_e000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_e000_P_reg_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_e000_P_label "WWDT_0"
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_e000_P_label_STRING_TOKEN WWDT_0
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_e000_P_label_STRING_UPPER_TOKEN WWDT_0
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_e000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_watchdog_e000, label, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_watchdog_e000, label, 1) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_watchdog_e000, label, 2) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_watchdog_e000, label, 3) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_watchdog_e000, label, 4) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_watchdog_e000, label, 5)
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_e000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_watchdog_e000, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_watchdog_e000, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_watchdog_e000, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_watchdog_e000, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_watchdog_e000, label, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_watchdog_e000, label, 5, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_e000_P_label_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_e000_P_interrupts {0 /* 0x0 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_e000_P_interrupts_IDX_0 0
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_e000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_e000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_e000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_e000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_watchdog_e000, interrupts, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_watchdog_e000, interrupts, 1)
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_e000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_watchdog_e000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_watchdog_e000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_e000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_e000_P_clk_divider 1
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_e000_P_clk_divider_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_e000_P_status "okay"
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_e000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_e000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_e000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_e000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_e000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_e000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_watchdog_e000, status, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_watchdog_e000, status, 1) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_watchdog_e000, status, 2) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_watchdog_e000, status, 3)
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_e000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_watchdog_e000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_watchdog_e000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_watchdog_e000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_watchdog_e000, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_e000_P_status_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_e000_P_compatible {"nxp,lpc-wwdt"}
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_e000_P_compatible_IDX_0 "nxp,lpc-wwdt"
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_e000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_e000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_watchdog_e000, compatible, 0)
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_e000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_watchdog_e000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_e000_P_compatible_LEN 1
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_e000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_e000_P_wakeup_source 0
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_e000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/peripheral@50000000/watchdog@2e000
 *
 * Node identifier: DT_N_S_soc_S_peripheral_50000000_S_watchdog_2e000
 *
 * Binding (compatible = nxp,lpc-wwdt):
 *   $ZEPHYR_BASE\dts\bindings\watchdog\nxp,lpc-wwdt.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_2e000_PATH "/soc/peripheral@50000000/watchdog@2e000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_2e000_FULL_NAME "watchdog@2e000"

/* Node parent (/soc/peripheral@50000000) identifier: */
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_2e000_PARENT DT_N_S_soc_S_peripheral_50000000
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_2e000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_2e000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_2e000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_2e000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_2e000_ORD 55

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_2e000_REQUIRES_ORDS \
	11, /* /soc/interrupt-controller@e000e100 */ \
	12, /* /soc/peripheral@50000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_2e000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_2e000_EXISTS 1
#define DT_N_INST_1_nxp_lpc_wwdt DT_N_S_soc_S_peripheral_50000000_S_watchdog_2e000
#define DT_N_NODELABEL_wwdt1     DT_N_S_soc_S_peripheral_50000000_S_watchdog_2e000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_2e000_REG_NUM 1
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_2e000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_2e000_REG_IDX_0_VAL_ADDRESS 1342365696 /* 0x5002e000 */
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_2e000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_2e000_RANGES_NUM 0
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_2e000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_2e000_IRQ_NUM 1
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_2e000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_2e000_IRQ_IDX_0_VAL_irq 52
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_2e000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_2e000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_2e000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_2e000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_2e000_COMPAT_MATCHES_nxp_lpc_wwdt 1
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_2e000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_2e000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_2e000_P_reg {188416 /* 0x2e000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_2e000_P_reg_IDX_0 188416
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_2e000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_2e000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_2e000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_2e000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_watchdog_2e000, reg, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_watchdog_2e000, reg, 1)
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_2e000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_watchdog_2e000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_watchdog_2e000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_2e000_P_reg_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_2e000_P_label "WWDT_1"
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_2e000_P_label_STRING_TOKEN WWDT_1
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_2e000_P_label_STRING_UPPER_TOKEN WWDT_1
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_2e000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_watchdog_2e000, label, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_watchdog_2e000, label, 1) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_watchdog_2e000, label, 2) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_watchdog_2e000, label, 3) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_watchdog_2e000, label, 4) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_watchdog_2e000, label, 5)
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_2e000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_watchdog_2e000, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_watchdog_2e000, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_watchdog_2e000, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_watchdog_2e000, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_watchdog_2e000, label, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_watchdog_2e000, label, 5, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_2e000_P_label_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_2e000_P_interrupts {52 /* 0x34 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_2e000_P_interrupts_IDX_0 52
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_2e000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_2e000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_2e000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_2e000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_watchdog_2e000, interrupts, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_watchdog_2e000, interrupts, 1)
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_2e000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_watchdog_2e000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_watchdog_2e000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_2e000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_2e000_P_clk_divider 1
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_2e000_P_clk_divider_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_2e000_P_status "disabled"
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_2e000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_2e000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_2e000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_2e000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_2e000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_2e000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_watchdog_2e000, status, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_watchdog_2e000, status, 1) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_watchdog_2e000, status, 2) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_watchdog_2e000, status, 3) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_watchdog_2e000, status, 4) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_watchdog_2e000, status, 5) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_watchdog_2e000, status, 6) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_watchdog_2e000, status, 7)
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_2e000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_watchdog_2e000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_watchdog_2e000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_watchdog_2e000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_watchdog_2e000, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_watchdog_2e000, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_watchdog_2e000, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_watchdog_2e000, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_watchdog_2e000, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_2e000_P_status_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_2e000_P_compatible {"nxp,lpc-wwdt"}
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_2e000_P_compatible_IDX_0 "nxp,lpc-wwdt"
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_2e000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_2e000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_watchdog_2e000, compatible, 0)
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_2e000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_watchdog_2e000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_2e000_P_compatible_LEN 1
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_2e000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_2e000_P_wakeup_source 0
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_2e000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/spi@134000
 *
 * Node identifier: DT_N_S_soc_S_spi_134000
 *
 * Binding (compatible = nxp,imx-flexspi):
 *   $ZEPHYR_BASE\dts\bindings\spi\nxp,imx-flexspi.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_spi_134000_PATH "/soc/spi@134000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_spi_134000_FULL_NAME "spi@134000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_spi_134000_PARENT DT_N_S_soc
#define DT_N_S_soc_S_spi_134000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_spi_134000_S_is25wp064_0)
#define DT_N_S_soc_S_spi_134000_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_134000_S_is25wp064_0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_134000_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_spi_134000_S_is25wp064_0) 
#define DT_N_S_soc_S_spi_134000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_134000_S_is25wp064_0, __VA_ARGS__) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_spi_134000_ORD 56

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_spi_134000_REQUIRES_ORDS \
	10, /* /soc */ \
	11, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_spi_134000_SUPPORTS_ORDS \
	57, /* /soc/spi@134000/is25wp064@0 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_spi_134000_EXISTS 1
#define DT_N_INST_0_nxp_imx_flexspi DT_N_S_soc_S_spi_134000
#define DT_N_NODELABEL_flexspi      DT_N_S_soc_S_spi_134000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_spi_134000_REG_NUM 2
#define DT_N_S_soc_S_spi_134000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_134000_REG_IDX_0_VAL_ADDRESS 85147648 /* 0x5134000 */
#define DT_N_S_soc_S_spi_134000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_spi_134000_REG_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_134000_REG_IDX_1_VAL_ADDRESS 402653184 /* 0x18000000 */
#define DT_N_S_soc_S_spi_134000_REG_IDX_1_VAL_SIZE 67108864 /* 0x4000000 */
#define DT_N_S_soc_S_spi_134000_RANGES_NUM 0
#define DT_N_S_soc_S_spi_134000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_spi_134000_IRQ_NUM 1
#define DT_N_S_soc_S_spi_134000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_134000_IRQ_IDX_0_VAL_irq 42
#define DT_N_S_soc_S_spi_134000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_spi_134000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_134000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_spi_134000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_spi_134000_COMPAT_MATCHES_nxp_imx_flexspi 1
#define DT_N_S_soc_S_spi_134000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_spi_134000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_spi_134000_P_reg {85147648 /* 0x5134000 */, 4096 /* 0x1000 */, 402653184 /* 0x18000000 */, 67108864 /* 0x4000000 */}
#define DT_N_S_soc_S_spi_134000_P_reg_IDX_0 85147648
#define DT_N_S_soc_S_spi_134000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_134000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_spi_134000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_134000_P_reg_IDX_2 402653184
#define DT_N_S_soc_S_spi_134000_P_reg_IDX_2_EXISTS 1
#define DT_N_S_soc_S_spi_134000_P_reg_IDX_3 67108864
#define DT_N_S_soc_S_spi_134000_P_reg_IDX_3_EXISTS 1
#define DT_N_S_soc_S_spi_134000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_134000, reg, 0) \
	fn(DT_N_S_soc_S_spi_134000, reg, 1) \
	fn(DT_N_S_soc_S_spi_134000, reg, 2) \
	fn(DT_N_S_soc_S_spi_134000, reg, 3)
#define DT_N_S_soc_S_spi_134000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_134000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_134000, reg, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_134000, reg, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_134000, reg, 3, __VA_ARGS__)
#define DT_N_S_soc_S_spi_134000_P_reg_EXISTS 1
#define DT_N_S_soc_S_spi_134000_P_interrupts {42 /* 0x2a */, 0 /* 0x0 */}
#define DT_N_S_soc_S_spi_134000_P_interrupts_IDX_0 42
#define DT_N_S_soc_S_spi_134000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_134000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_spi_134000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_134000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_134000, interrupts, 0) \
	fn(DT_N_S_soc_S_spi_134000, interrupts, 1)
#define DT_N_S_soc_S_spi_134000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_134000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_134000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_spi_134000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_spi_134000_P_ahb_bufferable 0
#define DT_N_S_soc_S_spi_134000_P_ahb_bufferable_EXISTS 1
#define DT_N_S_soc_S_spi_134000_P_ahb_cacheable 0
#define DT_N_S_soc_S_spi_134000_P_ahb_cacheable_EXISTS 1
#define DT_N_S_soc_S_spi_134000_P_ahb_prefetch 1
#define DT_N_S_soc_S_spi_134000_P_ahb_prefetch_EXISTS 1
#define DT_N_S_soc_S_spi_134000_P_ahb_read_addr_opt 1
#define DT_N_S_soc_S_spi_134000_P_ahb_read_addr_opt_EXISTS 1
#define DT_N_S_soc_S_spi_134000_P_combination_mode 0
#define DT_N_S_soc_S_spi_134000_P_combination_mode_EXISTS 1
#define DT_N_S_soc_S_spi_134000_P_sck_differential_clock 0
#define DT_N_S_soc_S_spi_134000_P_sck_differential_clock_EXISTS 1
#define DT_N_S_soc_S_spi_134000_P_rx_clock_source 1
#define DT_N_S_soc_S_spi_134000_P_rx_clock_source_ENUM_IDX 1
#define DT_N_S_soc_S_spi_134000_P_rx_clock_source_EXISTS 1
#define DT_N_S_soc_S_spi_134000_P_label "FLEXSPI"
#define DT_N_S_soc_S_spi_134000_P_label_STRING_TOKEN FLEXSPI
#define DT_N_S_soc_S_spi_134000_P_label_STRING_UPPER_TOKEN FLEXSPI
#define DT_N_S_soc_S_spi_134000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_134000, label, 0) \
	fn(DT_N_S_soc_S_spi_134000, label, 1) \
	fn(DT_N_S_soc_S_spi_134000, label, 2) \
	fn(DT_N_S_soc_S_spi_134000, label, 3) \
	fn(DT_N_S_soc_S_spi_134000, label, 4) \
	fn(DT_N_S_soc_S_spi_134000, label, 5) \
	fn(DT_N_S_soc_S_spi_134000, label, 6)
#define DT_N_S_soc_S_spi_134000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_134000, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_134000, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_134000, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_134000, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_134000, label, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_134000, label, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_134000, label, 6, __VA_ARGS__)
#define DT_N_S_soc_S_spi_134000_P_label_EXISTS 1
#define DT_N_S_soc_S_spi_134000_P_status "okay"
#define DT_N_S_soc_S_spi_134000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_spi_134000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_spi_134000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_spi_134000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_spi_134000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_spi_134000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_134000, status, 0) \
	fn(DT_N_S_soc_S_spi_134000, status, 1) \
	fn(DT_N_S_soc_S_spi_134000, status, 2) \
	fn(DT_N_S_soc_S_spi_134000, status, 3)
#define DT_N_S_soc_S_spi_134000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_134000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_134000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_134000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_134000, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_spi_134000_P_status_EXISTS 1
#define DT_N_S_soc_S_spi_134000_P_compatible {"nxp,imx-flexspi"}
#define DT_N_S_soc_S_spi_134000_P_compatible_IDX_0 "nxp,imx-flexspi"
#define DT_N_S_soc_S_spi_134000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_134000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_134000, compatible, 0)
#define DT_N_S_soc_S_spi_134000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_134000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_134000_P_compatible_LEN 1
#define DT_N_S_soc_S_spi_134000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_spi_134000_P_wakeup_source 0
#define DT_N_S_soc_S_spi_134000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/spi@134000/is25wp064@0
 *
 * Node identifier: DT_N_S_soc_S_spi_134000_S_is25wp064_0
 *
 * Binding (compatible = nxp,imx-flexspi-nor):
 *   $ZEPHYR_BASE\dts\bindings\mtd\nxp,imx-flexspi-nor.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_PATH "/soc/spi@134000/is25wp064@0"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_FULL_NAME "is25wp064@0"

/* Node parent (/soc/spi@134000) identifier: */
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_PARENT DT_N_S_soc_S_spi_134000
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions)
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions, __VA_ARGS__)
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions) 
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions, __VA_ARGS__) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_ORD 57

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_REQUIRES_ORDS \
	56, /* /soc/spi@134000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_SUPPORTS_ORDS \
	58, /* /soc/spi@134000/is25wp064@0/partitions */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_EXISTS 1
#define DT_N_INST_0_nxp_imx_flexspi_nor DT_N_S_soc_S_spi_134000_S_is25wp064_0
#define DT_N_NODELABEL_is25wp064        DT_N_S_soc_S_spi_134000_S_is25wp064_0

/* Bus info (controller: '/soc/spi@134000', type: 'spi') */
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_BUS_spi 1
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_BUS DT_N_S_soc_S_spi_134000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_REG_NUM 1
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_REG_IDX_0_VAL_ADDRESS 0 /* 0x0 */
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_RANGES_NUM 0
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_IRQ_NUM 0
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_COMPAT_MATCHES_nxp_imx_flexspi_nor 1
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_P_cs_interval_unit 1
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_P_cs_interval_unit_ENUM_IDX 0
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_P_cs_interval_unit_EXISTS 1
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_P_cs_interval 0
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_P_cs_interval_EXISTS 1
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_P_cs_setup_time 3
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_P_cs_setup_time_EXISTS 1
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_P_cs_hold_time 3
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_P_cs_hold_time_EXISTS 1
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_P_data_valid_time 0
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_P_data_valid_time_EXISTS 1
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_P_column_space 0
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_P_column_space_EXISTS 1
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_P_word_addressable 0
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_P_word_addressable_EXISTS 1
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_P_ahb_write_wait_unit 2
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_P_ahb_write_wait_unit_ENUM_IDX 0
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_P_ahb_write_wait_unit_EXISTS 1
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_P_ahb_write_wait_interval 0
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_P_ahb_write_wait_interval_EXISTS 1
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_P_reg {0 /* 0x0 */}
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_P_reg_IDX_0 0
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_134000_S_is25wp064_0, reg, 0)
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_134000_S_is25wp064_0, reg, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_P_reg_EXISTS 1
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_P_spi_max_frequency 133000000
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_P_spi_max_frequency_EXISTS 1
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_P_label "IS25WP064"
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_P_label_STRING_TOKEN IS25WP064
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_P_label_STRING_UPPER_TOKEN IS25WP064
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_134000_S_is25wp064_0, label, 0) \
	fn(DT_N_S_soc_S_spi_134000_S_is25wp064_0, label, 1) \
	fn(DT_N_S_soc_S_spi_134000_S_is25wp064_0, label, 2) \
	fn(DT_N_S_soc_S_spi_134000_S_is25wp064_0, label, 3) \
	fn(DT_N_S_soc_S_spi_134000_S_is25wp064_0, label, 4) \
	fn(DT_N_S_soc_S_spi_134000_S_is25wp064_0, label, 5) \
	fn(DT_N_S_soc_S_spi_134000_S_is25wp064_0, label, 6) \
	fn(DT_N_S_soc_S_spi_134000_S_is25wp064_0, label, 7) \
	fn(DT_N_S_soc_S_spi_134000_S_is25wp064_0, label, 8)
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_134000_S_is25wp064_0, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_134000_S_is25wp064_0, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_134000_S_is25wp064_0, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_134000_S_is25wp064_0, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_134000_S_is25wp064_0, label, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_134000_S_is25wp064_0, label, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_134000_S_is25wp064_0, label, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_134000_S_is25wp064_0, label, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_134000_S_is25wp064_0, label, 8, __VA_ARGS__)
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_P_label_EXISTS 1
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_P_frame_format 0
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_P_frame_format_ENUM_IDX 0
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_P_frame_format_EXISTS 1
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_P_status "okay"
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_134000_S_is25wp064_0, status, 0) \
	fn(DT_N_S_soc_S_spi_134000_S_is25wp064_0, status, 1) \
	fn(DT_N_S_soc_S_spi_134000_S_is25wp064_0, status, 2) \
	fn(DT_N_S_soc_S_spi_134000_S_is25wp064_0, status, 3)
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_134000_S_is25wp064_0, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_134000_S_is25wp064_0, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_134000_S_is25wp064_0, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_134000_S_is25wp064_0, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_P_status_EXISTS 1
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_P_compatible {"nxp,imx-flexspi-nor"}
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_P_compatible_IDX_0 "nxp,imx-flexspi-nor"
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_134000_S_is25wp064_0, compatible, 0)
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_134000_S_is25wp064_0, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_P_compatible_LEN 1
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_P_compatible_EXISTS 1
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_P_wakeup_source 0
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_P_jedec_id {157 /* 0x9d */, 112 /* 0x70 */, 23 /* 0x17 */}
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_P_jedec_id_IDX_0 157
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_P_jedec_id_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_P_jedec_id_IDX_1 112
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_P_jedec_id_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_P_jedec_id_IDX_2 23
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_P_jedec_id_IDX_2_EXISTS 1
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_P_jedec_id_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_134000_S_is25wp064_0, jedec_id, 0) \
	fn(DT_N_S_soc_S_spi_134000_S_is25wp064_0, jedec_id, 1) \
	fn(DT_N_S_soc_S_spi_134000_S_is25wp064_0, jedec_id, 2)
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_P_jedec_id_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_134000_S_is25wp064_0, jedec_id, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_134000_S_is25wp064_0, jedec_id, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_134000_S_is25wp064_0, jedec_id, 2, __VA_ARGS__)
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_P_jedec_id_LEN 3
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_P_jedec_id_EXISTS 1
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_P_size 8388608
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_P_size_EXISTS 1
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_P_erase_block_size 4096
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_P_erase_block_size_EXISTS 1
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_P_write_block_size 1
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_P_write_block_size_EXISTS 1

/*
 * Devicetree node: /soc/spi@134000/is25wp064@0/partitions
 *
 * Node identifier: DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions
 *
 * Binding (compatible = fixed-partitions):
 *   $ZEPHYR_BASE\dts\bindings\mtd\fixed-partitions.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_PATH "/soc/spi@134000/is25wp064@0/partitions"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_FULL_NAME "partitions"

/* Node parent (/soc/spi@134000/is25wp064@0) identifier: */
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_PARENT DT_N_S_soc_S_spi_134000_S_is25wp064_0
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_0) fn(DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_10000) fn(DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_310000) fn(DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_610000) fn(DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_630000)
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_0, __VA_ARGS__) fn(DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_10000, __VA_ARGS__) fn(DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_310000, __VA_ARGS__) fn(DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_610000, __VA_ARGS__) fn(DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_630000, __VA_ARGS__)
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_0) fn(DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_10000) fn(DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_310000) fn(DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_610000) fn(DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_630000) 
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_0, __VA_ARGS__) fn(DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_10000, __VA_ARGS__) fn(DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_310000, __VA_ARGS__) fn(DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_610000, __VA_ARGS__) fn(DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_630000, __VA_ARGS__) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_ORD 58

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_REQUIRES_ORDS \
	57, /* /soc/spi@134000/is25wp064@0 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_SUPPORTS_ORDS \
	59, /* /soc/spi@134000/is25wp064@0/partitions/partition@0 */ \
	60, /* /soc/spi@134000/is25wp064@0/partitions/partition@10000 */ \
	61, /* /soc/spi@134000/is25wp064@0/partitions/partition@310000 */ \
	62, /* /soc/spi@134000/is25wp064@0/partitions/partition@610000 */ \
	63, /* /soc/spi@134000/is25wp064@0/partitions/partition@630000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_EXISTS 1
#define DT_N_INST_0_fixed_partitions DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_REG_NUM 0
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_RANGES_NUM 0
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_IRQ_NUM 0
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_COMPAT_MATCHES_fixed_partitions 1
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /soc/spi@134000/is25wp064@0/partitions/partition@0
 *
 * Node identifier: DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_0
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_0_PATH "/soc/spi@134000/is25wp064@0/partitions/partition@0"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_0_FULL_NAME "partition@0"

/* Node parent (/soc/spi@134000/is25wp064@0/partitions) identifier: */
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_0_PARENT DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_0_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_0_ORD 59

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_0_REQUIRES_ORDS \
	58, /* /soc/spi@134000/is25wp064@0/partitions */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_0_EXISTS 1
#define DT_N_NODELABEL_boot_partition DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_0

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_0_REG_NUM 1
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_0_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_0_REG_IDX_0_VAL_ADDRESS 0 /* 0x0 */
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_0_REG_IDX_0_VAL_SIZE 65536 /* 0x10000 */
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_0_RANGES_NUM 0
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_0_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_0_IRQ_NUM 0
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_0_PINCTRL_NUM 0

/* fixed-partitions identifier: */
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_0_PARTITION_ID 0

/* Generic property macros: */
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_0_P_label "mcuboot"
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_0_P_label_STRING_TOKEN mcuboot
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_0_P_label_STRING_UPPER_TOKEN MCUBOOT
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_0_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_0, label, 0) \
	fn(DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_0, label, 1) \
	fn(DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_0, label, 2) \
	fn(DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_0, label, 3) \
	fn(DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_0, label, 4) \
	fn(DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_0, label, 5) \
	fn(DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_0, label, 6)
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_0_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_0, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_0, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_0, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_0, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_0, label, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_0, label, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_0, label, 6, __VA_ARGS__)
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_0_P_label_EXISTS 1
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_0_P_read_only 0
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_0_P_read_only_EXISTS 1
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_0_P_reg {0 /* 0x0 */, 65536 /* 0x10000 */}
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_0_P_reg_IDX_0 0
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_0_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_0_P_reg_IDX_1 65536
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_0_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_0_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_0, reg, 0) \
	fn(DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_0, reg, 1)
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_0_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_0, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_0, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_0_P_reg_EXISTS 1

/*
 * Devicetree node: /soc/spi@134000/is25wp064@0/partitions/partition@10000
 *
 * Node identifier: DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_10000
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_10000_PATH "/soc/spi@134000/is25wp064@0/partitions/partition@10000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_10000_FULL_NAME "partition@10000"

/* Node parent (/soc/spi@134000/is25wp064@0/partitions) identifier: */
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_10000_PARENT DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_10000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_10000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_10000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_10000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_10000_ORD 60

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_10000_REQUIRES_ORDS \
	58, /* /soc/spi@134000/is25wp064@0/partitions */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_10000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_10000_EXISTS 1
#define DT_N_NODELABEL_slot0_partition DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_10000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_10000_REG_NUM 1
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_10000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_10000_REG_IDX_0_VAL_ADDRESS 65536 /* 0x10000 */
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_10000_REG_IDX_0_VAL_SIZE 3145728 /* 0x300000 */
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_10000_RANGES_NUM 0
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_10000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_10000_IRQ_NUM 0
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_10000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_10000_PINCTRL_NUM 0

/* fixed-partitions identifier: */
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_10000_PARTITION_ID 1

/* Generic property macros: */
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_10000_P_label "image-0"
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_10000_P_label_STRING_TOKEN image_0
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_10000_P_label_STRING_UPPER_TOKEN IMAGE_0
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_10000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_10000, label, 0) \
	fn(DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_10000, label, 1) \
	fn(DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_10000, label, 2) \
	fn(DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_10000, label, 3) \
	fn(DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_10000, label, 4) \
	fn(DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_10000, label, 5) \
	fn(DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_10000, label, 6)
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_10000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_10000, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_10000, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_10000, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_10000, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_10000, label, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_10000, label, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_10000, label, 6, __VA_ARGS__)
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_10000_P_label_EXISTS 1
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_10000_P_read_only 0
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_10000_P_read_only_EXISTS 1
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_10000_P_reg {65536 /* 0x10000 */, 3145728 /* 0x300000 */}
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_10000_P_reg_IDX_0 65536
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_10000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_10000_P_reg_IDX_1 3145728
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_10000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_10000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_10000, reg, 0) \
	fn(DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_10000, reg, 1)
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_10000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_10000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_10000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_10000_P_reg_EXISTS 1

/*
 * Devicetree node: /soc/spi@134000/is25wp064@0/partitions/partition@310000
 *
 * Node identifier: DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_310000
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_310000_PATH "/soc/spi@134000/is25wp064@0/partitions/partition@310000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_310000_FULL_NAME "partition@310000"

/* Node parent (/soc/spi@134000/is25wp064@0/partitions) identifier: */
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_310000_PARENT DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_310000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_310000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_310000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_310000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_310000_ORD 61

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_310000_REQUIRES_ORDS \
	58, /* /soc/spi@134000/is25wp064@0/partitions */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_310000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_310000_EXISTS 1
#define DT_N_NODELABEL_slot1_partition DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_310000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_310000_REG_NUM 1
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_310000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_310000_REG_IDX_0_VAL_ADDRESS 3211264 /* 0x310000 */
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_310000_REG_IDX_0_VAL_SIZE 3145728 /* 0x300000 */
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_310000_RANGES_NUM 0
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_310000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_310000_IRQ_NUM 0
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_310000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_310000_PINCTRL_NUM 0

/* fixed-partitions identifier: */
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_310000_PARTITION_ID 2

/* Generic property macros: */
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_310000_P_label "image-1"
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_310000_P_label_STRING_TOKEN image_1
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_310000_P_label_STRING_UPPER_TOKEN IMAGE_1
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_310000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_310000, label, 0) \
	fn(DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_310000, label, 1) \
	fn(DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_310000, label, 2) \
	fn(DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_310000, label, 3) \
	fn(DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_310000, label, 4) \
	fn(DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_310000, label, 5) \
	fn(DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_310000, label, 6)
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_310000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_310000, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_310000, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_310000, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_310000, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_310000, label, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_310000, label, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_310000, label, 6, __VA_ARGS__)
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_310000_P_label_EXISTS 1
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_310000_P_read_only 0
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_310000_P_read_only_EXISTS 1
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_310000_P_reg {3211264 /* 0x310000 */, 3145728 /* 0x300000 */}
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_310000_P_reg_IDX_0 3211264
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_310000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_310000_P_reg_IDX_1 3145728
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_310000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_310000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_310000, reg, 0) \
	fn(DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_310000, reg, 1)
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_310000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_310000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_310000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_310000_P_reg_EXISTS 1

/*
 * Devicetree node: /soc/spi@134000/is25wp064@0/partitions/partition@610000
 *
 * Node identifier: DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_610000
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_610000_PATH "/soc/spi@134000/is25wp064@0/partitions/partition@610000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_610000_FULL_NAME "partition@610000"

/* Node parent (/soc/spi@134000/is25wp064@0/partitions) identifier: */
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_610000_PARENT DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_610000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_610000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_610000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_610000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_610000_ORD 62

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_610000_REQUIRES_ORDS \
	58, /* /soc/spi@134000/is25wp064@0/partitions */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_610000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_610000_EXISTS 1
#define DT_N_NODELABEL_scratch_partition DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_610000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_610000_REG_NUM 1
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_610000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_610000_REG_IDX_0_VAL_ADDRESS 6356992 /* 0x610000 */
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_610000_REG_IDX_0_VAL_SIZE 131072 /* 0x20000 */
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_610000_RANGES_NUM 0
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_610000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_610000_IRQ_NUM 0
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_610000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_610000_PINCTRL_NUM 0

/* fixed-partitions identifier: */
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_610000_PARTITION_ID 3

/* Generic property macros: */
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_610000_P_label "image-scratch"
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_610000_P_label_STRING_TOKEN image_scratch
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_610000_P_label_STRING_UPPER_TOKEN IMAGE_SCRATCH
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_610000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_610000, label, 0) \
	fn(DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_610000, label, 1) \
	fn(DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_610000, label, 2) \
	fn(DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_610000, label, 3) \
	fn(DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_610000, label, 4) \
	fn(DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_610000, label, 5) \
	fn(DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_610000, label, 6) \
	fn(DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_610000, label, 7) \
	fn(DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_610000, label, 8) \
	fn(DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_610000, label, 9) \
	fn(DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_610000, label, 10) \
	fn(DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_610000, label, 11) \
	fn(DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_610000, label, 12)
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_610000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_610000, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_610000, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_610000, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_610000, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_610000, label, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_610000, label, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_610000, label, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_610000, label, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_610000, label, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_610000, label, 9, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_610000, label, 10, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_610000, label, 11, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_610000, label, 12, __VA_ARGS__)
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_610000_P_label_EXISTS 1
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_610000_P_read_only 0
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_610000_P_read_only_EXISTS 1
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_610000_P_reg {6356992 /* 0x610000 */, 131072 /* 0x20000 */}
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_610000_P_reg_IDX_0 6356992
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_610000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_610000_P_reg_IDX_1 131072
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_610000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_610000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_610000, reg, 0) \
	fn(DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_610000, reg, 1)
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_610000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_610000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_610000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_610000_P_reg_EXISTS 1

/*
 * Devicetree node: /soc/spi@134000/is25wp064@0/partitions/partition@630000
 *
 * Node identifier: DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_630000
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_630000_PATH "/soc/spi@134000/is25wp064@0/partitions/partition@630000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_630000_FULL_NAME "partition@630000"

/* Node parent (/soc/spi@134000/is25wp064@0/partitions) identifier: */
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_630000_PARENT DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_630000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_630000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_630000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_630000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_630000_ORD 63

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_630000_REQUIRES_ORDS \
	58, /* /soc/spi@134000/is25wp064@0/partitions */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_630000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_630000_EXISTS 1
#define DT_N_NODELABEL_storage_partition DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_630000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_630000_REG_NUM 1
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_630000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_630000_REG_IDX_0_VAL_ADDRESS 6488064 /* 0x630000 */
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_630000_REG_IDX_0_VAL_SIZE 1900544 /* 0x1d0000 */
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_630000_RANGES_NUM 0
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_630000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_630000_IRQ_NUM 0
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_630000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_630000_PINCTRL_NUM 0

/* fixed-partitions identifier: */
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_630000_PARTITION_ID 4

/* Generic property macros: */
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_630000_P_label "storage"
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_630000_P_label_STRING_TOKEN storage
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_630000_P_label_STRING_UPPER_TOKEN STORAGE
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_630000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_630000, label, 0) \
	fn(DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_630000, label, 1) \
	fn(DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_630000, label, 2) \
	fn(DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_630000, label, 3) \
	fn(DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_630000, label, 4) \
	fn(DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_630000, label, 5) \
	fn(DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_630000, label, 6)
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_630000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_630000, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_630000, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_630000, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_630000, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_630000, label, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_630000, label, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_630000, label, 6, __VA_ARGS__)
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_630000_P_label_EXISTS 1
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_630000_P_read_only 0
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_630000_P_read_only_EXISTS 1
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_630000_P_reg {6488064 /* 0x630000 */, 1900544 /* 0x1d0000 */}
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_630000_P_reg_IDX_0 6488064
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_630000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_630000_P_reg_IDX_1 1900544
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_630000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_630000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_630000, reg, 0) \
	fn(DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_630000, reg, 1)
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_630000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_630000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_630000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_630000_P_reg_EXISTS 1

/*
 * Devicetree node: /soc/sram@30018000
 *
 * Node identifier: DT_N_S_soc_S_sram_30018000
 */

/* Node's full path: */
#define DT_N_S_soc_S_sram_30018000_PATH "/soc/sram@30018000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_sram_30018000_FULL_NAME "sram@30018000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_sram_30018000_PARENT DT_N_S_soc
#define DT_N_S_soc_S_sram_30018000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_sram_30018000_S_memory_20180000) fn(DT_N_S_soc_S_sram_30018000_S_memory_40140000)
#define DT_N_S_soc_S_sram_30018000_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_sram_30018000_S_memory_20180000, __VA_ARGS__) fn(DT_N_S_soc_S_sram_30018000_S_memory_40140000, __VA_ARGS__)
#define DT_N_S_soc_S_sram_30018000_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_sram_30018000_S_memory_20180000) fn(DT_N_S_soc_S_sram_30018000_S_memory_40140000) 
#define DT_N_S_soc_S_sram_30018000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_sram_30018000_S_memory_20180000, __VA_ARGS__) fn(DT_N_S_soc_S_sram_30018000_S_memory_40140000, __VA_ARGS__) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_sram_30018000_ORD 64

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_sram_30018000_REQUIRES_ORDS \
	10, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_sram_30018000_SUPPORTS_ORDS \
	65, /* /soc/sram@30018000/memory@20180000 */ \
	66, /* /soc/sram@30018000/memory@40140000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_sram_30018000_EXISTS 1
#define DT_N_NODELABEL_sram DT_N_S_soc_S_sram_30018000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_sram_30018000_REG_NUM 0
#define DT_N_S_soc_S_sram_30018000_RANGES_NUM 1
#define DT_N_S_soc_S_sram_30018000_RANGES_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sram_30018000_RANGES_IDX_0_VAL_CHILD_BUS_ADDRESS 538443776 /* 0x20180000 */
#define DT_N_S_soc_S_sram_30018000_RANGES_IDX_0_VAL_PARENT_BUS_ADDRESS 806879232 /* 0x30180000 */
#define DT_N_S_soc_S_sram_30018000_RANGES_IDX_0_VAL_LENGTH 3145728 /* 0x300000 */
#define DT_N_S_soc_S_sram_30018000_FOREACH_RANGE(fn) fn(DT_N_S_soc_S_sram_30018000, 0)
#define DT_N_S_soc_S_sram_30018000_IRQ_NUM 0
#define DT_N_S_soc_S_sram_30018000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_sram_30018000_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /soc/sram@30018000/memory@20180000
 *
 * Node identifier: DT_N_S_soc_S_sram_30018000_S_memory_20180000
 *
 * Binding (compatible = mmio-sram):
 *   $ZEPHYR_BASE\dts\bindings\sram\mmio-sram.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_sram_30018000_S_memory_20180000_PATH "/soc/sram@30018000/memory@20180000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_sram_30018000_S_memory_20180000_FULL_NAME "memory@20180000"

/* Node parent (/soc/sram@30018000) identifier: */
#define DT_N_S_soc_S_sram_30018000_S_memory_20180000_PARENT DT_N_S_soc_S_sram_30018000
#define DT_N_S_soc_S_sram_30018000_S_memory_20180000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_sram_30018000_S_memory_20180000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_sram_30018000_S_memory_20180000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_sram_30018000_S_memory_20180000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_sram_30018000_S_memory_20180000_ORD 65

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_sram_30018000_S_memory_20180000_REQUIRES_ORDS \
	64, /* /soc/sram@30018000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_sram_30018000_S_memory_20180000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_sram_30018000_S_memory_20180000_EXISTS 1
#define DT_N_INST_0_mmio_sram DT_N_S_soc_S_sram_30018000_S_memory_20180000
#define DT_N_NODELABEL_sram0  DT_N_S_soc_S_sram_30018000_S_memory_20180000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_sram_30018000_S_memory_20180000_REG_NUM 1
#define DT_N_S_soc_S_sram_30018000_S_memory_20180000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sram_30018000_S_memory_20180000_REG_IDX_0_VAL_ADDRESS 806879232 /* 0x30180000 */
#define DT_N_S_soc_S_sram_30018000_S_memory_20180000_REG_IDX_0_VAL_SIZE 3145728 /* 0x300000 */
#define DT_N_S_soc_S_sram_30018000_S_memory_20180000_RANGES_NUM 0
#define DT_N_S_soc_S_sram_30018000_S_memory_20180000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_sram_30018000_S_memory_20180000_IRQ_NUM 0
#define DT_N_S_soc_S_sram_30018000_S_memory_20180000_COMPAT_MATCHES_mmio_sram 1
#define DT_N_S_soc_S_sram_30018000_S_memory_20180000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_sram_30018000_S_memory_20180000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_sram_30018000_S_memory_20180000_P_reg {538443776 /* 0x20180000 */, 3145728 /* 0x300000 */}
#define DT_N_S_soc_S_sram_30018000_S_memory_20180000_P_reg_IDX_0 538443776
#define DT_N_S_soc_S_sram_30018000_S_memory_20180000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sram_30018000_S_memory_20180000_P_reg_IDX_1 3145728
#define DT_N_S_soc_S_sram_30018000_S_memory_20180000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_sram_30018000_S_memory_20180000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sram_30018000_S_memory_20180000, reg, 0) \
	fn(DT_N_S_soc_S_sram_30018000_S_memory_20180000, reg, 1)
#define DT_N_S_soc_S_sram_30018000_S_memory_20180000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sram_30018000_S_memory_20180000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_sram_30018000_S_memory_20180000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_sram_30018000_S_memory_20180000_P_reg_EXISTS 1
#define DT_N_S_soc_S_sram_30018000_S_memory_20180000_P_compatible {"mmio-sram"}
#define DT_N_S_soc_S_sram_30018000_S_memory_20180000_P_compatible_IDX_0 "mmio-sram"
#define DT_N_S_soc_S_sram_30018000_S_memory_20180000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sram_30018000_S_memory_20180000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sram_30018000_S_memory_20180000, compatible, 0)
#define DT_N_S_soc_S_sram_30018000_S_memory_20180000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sram_30018000_S_memory_20180000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sram_30018000_S_memory_20180000_P_compatible_LEN 1
#define DT_N_S_soc_S_sram_30018000_S_memory_20180000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_sram_30018000_S_memory_20180000_P_wakeup_source 0
#define DT_N_S_soc_S_sram_30018000_S_memory_20180000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/sram@30018000/memory@40140000
 *
 * Node identifier: DT_N_S_soc_S_sram_30018000_S_memory_40140000
 *
 * Binding (compatible = mmio-sram):
 *   $ZEPHYR_BASE\dts\bindings\sram\mmio-sram.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_sram_30018000_S_memory_40140000_PATH "/soc/sram@30018000/memory@40140000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_sram_30018000_S_memory_40140000_FULL_NAME "memory@40140000"

/* Node parent (/soc/sram@30018000) identifier: */
#define DT_N_S_soc_S_sram_30018000_S_memory_40140000_PARENT DT_N_S_soc_S_sram_30018000
#define DT_N_S_soc_S_sram_30018000_S_memory_40140000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_sram_30018000_S_memory_40140000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_sram_30018000_S_memory_40140000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_sram_30018000_S_memory_40140000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_sram_30018000_S_memory_40140000_ORD 66

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_sram_30018000_S_memory_40140000_REQUIRES_ORDS \
	64, /* /soc/sram@30018000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_sram_30018000_S_memory_40140000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_sram_30018000_S_memory_40140000_EXISTS 1
#define DT_N_INST_1_mmio_sram DT_N_S_soc_S_sram_30018000_S_memory_40140000
#define DT_N_NODELABEL_sram1  DT_N_S_soc_S_sram_30018000_S_memory_40140000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_sram_30018000_S_memory_40140000_REG_NUM 1
#define DT_N_S_soc_S_sram_30018000_S_memory_40140000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sram_30018000_S_memory_40140000_REG_IDX_0_VAL_ADDRESS 1075052544 /* 0x40140000 */
#define DT_N_S_soc_S_sram_30018000_S_memory_40140000_REG_IDX_0_VAL_SIZE 16384 /* 0x4000 */
#define DT_N_S_soc_S_sram_30018000_S_memory_40140000_RANGES_NUM 0
#define DT_N_S_soc_S_sram_30018000_S_memory_40140000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_sram_30018000_S_memory_40140000_IRQ_NUM 0
#define DT_N_S_soc_S_sram_30018000_S_memory_40140000_COMPAT_MATCHES_mmio_sram 1
#define DT_N_S_soc_S_sram_30018000_S_memory_40140000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_sram_30018000_S_memory_40140000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_sram_30018000_S_memory_40140000_P_reg {1075052544 /* 0x40140000 */, 16384 /* 0x4000 */}
#define DT_N_S_soc_S_sram_30018000_S_memory_40140000_P_reg_IDX_0 1075052544
#define DT_N_S_soc_S_sram_30018000_S_memory_40140000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sram_30018000_S_memory_40140000_P_reg_IDX_1 16384
#define DT_N_S_soc_S_sram_30018000_S_memory_40140000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_sram_30018000_S_memory_40140000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sram_30018000_S_memory_40140000, reg, 0) \
	fn(DT_N_S_soc_S_sram_30018000_S_memory_40140000, reg, 1)
#define DT_N_S_soc_S_sram_30018000_S_memory_40140000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sram_30018000_S_memory_40140000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_sram_30018000_S_memory_40140000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_sram_30018000_S_memory_40140000_P_reg_EXISTS 1
#define DT_N_S_soc_S_sram_30018000_S_memory_40140000_P_compatible {"mmio-sram"}
#define DT_N_S_soc_S_sram_30018000_S_memory_40140000_P_compatible_IDX_0 "mmio-sram"
#define DT_N_S_soc_S_sram_30018000_S_memory_40140000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sram_30018000_S_memory_40140000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sram_30018000_S_memory_40140000, compatible, 0)
#define DT_N_S_soc_S_sram_30018000_S_memory_40140000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sram_30018000_S_memory_40140000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sram_30018000_S_memory_40140000_P_compatible_LEN 1
#define DT_N_S_soc_S_sram_30018000_S_memory_40140000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_sram_30018000_S_memory_40140000_P_wakeup_source 0
#define DT_N_S_soc_S_sram_30018000_S_memory_40140000_P_wakeup_source_EXISTS 1

/*
 * Chosen nodes
 */
#define DT_CHOSEN_zephyr_entropy                 DT_N_S_soc_S_peripheral_50000000_S_random_138000
#define DT_CHOSEN_zephyr_entropy_EXISTS          1
#define DT_CHOSEN_zephyr_flash_controller        DT_N_S_soc_S_spi_134000
#define DT_CHOSEN_zephyr_flash_controller_EXISTS 1
#define DT_CHOSEN_zephyr_flash                   DT_N_S_soc_S_spi_134000_S_is25wp064_0
#define DT_CHOSEN_zephyr_flash_EXISTS            1
#define DT_CHOSEN_zephyr_code_partition          DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_10000
#define DT_CHOSEN_zephyr_code_partition_EXISTS   1
#define DT_CHOSEN_zephyr_sram                    DT_N_S_soc_S_sram_30018000_S_memory_20180000
#define DT_CHOSEN_zephyr_sram_EXISTS             1
#define DT_CHOSEN_zephyr_console                 DT_N_S_soc_S_peripheral_50000000_S_flexcomm_106000
#define DT_CHOSEN_zephyr_console_EXISTS          1
#define DT_CHOSEN_zephyr_shell_uart              DT_N_S_soc_S_peripheral_50000000_S_flexcomm_106000
#define DT_CHOSEN_zephyr_shell_uart_EXISTS       1
#define DT_COMPAT_fixed_partitions_LABEL_mcuboot DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_0
#define DT_COMPAT_fixed_partitions_LABEL_mcuboot_EXISTS 1
#define DT_COMPAT_fixed_partitions_LABEL_image_0 DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_10000
#define DT_COMPAT_fixed_partitions_LABEL_image_0_EXISTS 1
#define DT_COMPAT_fixed_partitions_LABEL_image_1 DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_310000
#define DT_COMPAT_fixed_partitions_LABEL_image_1_EXISTS 1
#define DT_COMPAT_fixed_partitions_LABEL_image_scratch DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_610000
#define DT_COMPAT_fixed_partitions_LABEL_image_scratch_EXISTS 1
#define DT_COMPAT_fixed_partitions_LABEL_storage DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions_S_partition_630000
#define DT_COMPAT_fixed_partitions_LABEL_storage_EXISTS 1

/*
 * Macros for compatibles with status "okay" nodes
 */
#define DT_COMPAT_HAS_OKAY_nxp_mimxrt685 1
#define DT_COMPAT_HAS_OKAY_simple_bus 1
#define DT_COMPAT_HAS_OKAY_mmio_sram 1
#define DT_COMPAT_HAS_OKAY_nxp_lpc_syscon 1
#define DT_COMPAT_HAS_OKAY_nxp_lpc_uid 1
#define DT_COMPAT_HAS_OKAY_nxp_lpc_gpio 1
#define DT_COMPAT_HAS_OKAY_nxp_lpc_usart 1
#define DT_COMPAT_HAS_OKAY_nxp_lpc_i2s 1
#define DT_COMPAT_HAS_OKAY_nxp_mcux_usbd 1
#define DT_COMPAT_HAS_OKAY_nxp_lpc_dma 1
#define DT_COMPAT_HAS_OKAY_nxp_os_timer 1
#define DT_COMPAT_HAS_OKAY_nxp_kinetis_trng 1
#define DT_COMPAT_HAS_OKAY_nxp_sctimer_pwm 1
#define DT_COMPAT_HAS_OKAY_nxp_lpc_wwdt 1
#define DT_COMPAT_HAS_OKAY_nxp_imx_usdhc 1
#define DT_COMPAT_HAS_OKAY_nxp_lpc_lpadc 1
#define DT_COMPAT_HAS_OKAY_nxp_lpc_ctimer 1
#define DT_COMPAT_HAS_OKAY_nxp_imx_flexspi 1
#define DT_COMPAT_HAS_OKAY_nxp_imx_flexspi_nor 1
#define DT_COMPAT_HAS_OKAY_fixed_partitions 1
#define DT_COMPAT_HAS_OKAY_arm_v8m_nvic 1
#define DT_COMPAT_HAS_OKAY_arm_cortex_m33f 1
#define DT_COMPAT_HAS_OKAY_arm_armv8m_mpu 1
#define DT_COMPAT_HAS_OKAY_gpio_keys 1
#define DT_COMPAT_HAS_OKAY_gpio_leds 1
#define DT_COMPAT_HAS_OKAY_pwm_leds 1
#define DT_COMPAT_HAS_OKAY_zephyr_power_state 1

/*
 * Macros for status "okay" instances of each compatible
 */
#define DT_N_INST_nxp_mimxrt685_NUM_OKAY 1
#define DT_N_INST_simple_bus_NUM_OKAY 1
#define DT_N_INST_mmio_sram_NUM_OKAY 2
#define DT_N_INST_nxp_lpc_syscon_NUM_OKAY 2
#define DT_N_INST_nxp_lpc_uid_NUM_OKAY 1
#define DT_N_INST_nxp_lpc_gpio_NUM_OKAY 3
#define DT_N_INST_nxp_lpc_usart_NUM_OKAY 1
#define DT_N_INST_nxp_lpc_i2s_NUM_OKAY 2
#define DT_N_INST_nxp_mcux_usbd_NUM_OKAY 1
#define DT_N_INST_nxp_lpc_dma_NUM_OKAY 1
#define DT_N_INST_nxp_os_timer_NUM_OKAY 1
#define DT_N_INST_nxp_kinetis_trng_NUM_OKAY 1
#define DT_N_INST_nxp_sctimer_pwm_NUM_OKAY 1
#define DT_N_INST_nxp_lpc_wwdt_NUM_OKAY 1
#define DT_N_INST_nxp_imx_usdhc_NUM_OKAY 1
#define DT_N_INST_nxp_lpc_lpadc_NUM_OKAY 1
#define DT_N_INST_nxp_lpc_ctimer_NUM_OKAY 5
#define DT_N_INST_nxp_imx_flexspi_NUM_OKAY 1
#define DT_N_INST_nxp_imx_flexspi_nor_NUM_OKAY 1
#define DT_N_INST_fixed_partitions_NUM_OKAY 1
#define DT_N_INST_arm_v8m_nvic_NUM_OKAY 1
#define DT_N_INST_arm_cortex_m33f_NUM_OKAY 1
#define DT_N_INST_arm_armv8m_mpu_NUM_OKAY 1
#define DT_N_INST_gpio_keys_NUM_OKAY 1
#define DT_N_INST_gpio_leds_NUM_OKAY 1
#define DT_N_INST_pwm_leds_NUM_OKAY 1
#define DT_N_INST_zephyr_power_state_NUM_OKAY 2
#define DT_FOREACH_OKAY_nxp_mimxrt685(fn) fn(DT_N)
#define DT_FOREACH_OKAY_VARGS_nxp_mimxrt685(fn, ...) fn(DT_N, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nxp_mimxrt685(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nxp_mimxrt685(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_simple_bus(fn) fn(DT_N_S_soc)
#define DT_FOREACH_OKAY_VARGS_simple_bus(fn, ...) fn(DT_N_S_soc, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_simple_bus(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_simple_bus(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_mmio_sram(fn) fn(DT_N_S_soc_S_sram_30018000_S_memory_20180000) fn(DT_N_S_soc_S_sram_30018000_S_memory_40140000)
#define DT_FOREACH_OKAY_VARGS_mmio_sram(fn, ...) fn(DT_N_S_soc_S_sram_30018000_S_memory_20180000, __VA_ARGS__) fn(DT_N_S_soc_S_sram_30018000_S_memory_40140000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_mmio_sram(fn) fn(0) fn(1)
#define DT_FOREACH_OKAY_INST_VARGS_mmio_sram(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__)
#define DT_FOREACH_OKAY_nxp_lpc_syscon(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_clkctl_1000) fn(DT_N_S_soc_S_peripheral_50000000_S_clkctl_21000)
#define DT_FOREACH_OKAY_VARGS_nxp_lpc_syscon(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_clkctl_1000, __VA_ARGS__) fn(DT_N_S_soc_S_peripheral_50000000_S_clkctl_21000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nxp_lpc_syscon(fn) fn(0) fn(1)
#define DT_FOREACH_OKAY_INST_VARGS_nxp_lpc_syscon(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__)
#define DT_FOREACH_OKAY_nxp_lpc_uid(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_uuid_2f50)
#define DT_FOREACH_OKAY_VARGS_nxp_lpc_uid(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_uuid_2f50, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nxp_lpc_uid(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nxp_lpc_uid(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_nxp_lpc_gpio(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_gpio_0) fn(DT_N_S_soc_S_peripheral_50000000_S_gpio_1) fn(DT_N_S_soc_S_peripheral_50000000_S_gpio_2)
#define DT_FOREACH_OKAY_VARGS_nxp_lpc_gpio(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_gpio_0, __VA_ARGS__) fn(DT_N_S_soc_S_peripheral_50000000_S_gpio_1, __VA_ARGS__) fn(DT_N_S_soc_S_peripheral_50000000_S_gpio_2, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nxp_lpc_gpio(fn) fn(0) fn(1) fn(2)
#define DT_FOREACH_OKAY_INST_VARGS_nxp_lpc_gpio(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__) fn(2, __VA_ARGS__)
#define DT_FOREACH_OKAY_nxp_lpc_usart(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_106000)
#define DT_FOREACH_OKAY_VARGS_nxp_lpc_usart(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_106000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nxp_lpc_usart(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nxp_lpc_usart(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_nxp_lpc_i2s(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_107000) fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_109000)
#define DT_FOREACH_OKAY_VARGS_nxp_lpc_i2s(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_107000, __VA_ARGS__) fn(DT_N_S_soc_S_peripheral_50000000_S_flexcomm_109000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nxp_lpc_i2s(fn) fn(0) fn(1)
#define DT_FOREACH_OKAY_INST_VARGS_nxp_lpc_i2s(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__)
#define DT_FOREACH_OKAY_nxp_mcux_usbd(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_usbhs_144000)
#define DT_FOREACH_OKAY_VARGS_nxp_mcux_usbd(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_usbhs_144000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nxp_mcux_usbd(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nxp_mcux_usbd(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_nxp_lpc_dma(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_dma_controller_104000)
#define DT_FOREACH_OKAY_VARGS_nxp_lpc_dma(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_dma_controller_104000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nxp_lpc_dma(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nxp_lpc_dma(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_nxp_os_timer(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_timers_113000)
#define DT_FOREACH_OKAY_VARGS_nxp_os_timer(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_timers_113000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nxp_os_timer(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nxp_os_timer(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_nxp_kinetis_trng(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_random_138000)
#define DT_FOREACH_OKAY_VARGS_nxp_kinetis_trng(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_random_138000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nxp_kinetis_trng(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nxp_kinetis_trng(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_nxp_sctimer_pwm(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_pwm_146000)
#define DT_FOREACH_OKAY_VARGS_nxp_sctimer_pwm(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_pwm_146000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nxp_sctimer_pwm(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nxp_sctimer_pwm(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_nxp_lpc_wwdt(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_watchdog_e000)
#define DT_FOREACH_OKAY_VARGS_nxp_lpc_wwdt(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_watchdog_e000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nxp_lpc_wwdt(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nxp_lpc_wwdt(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_nxp_imx_usdhc(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_usdhc_136000)
#define DT_FOREACH_OKAY_VARGS_nxp_imx_usdhc(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_usdhc_136000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nxp_imx_usdhc(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nxp_imx_usdhc(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_nxp_lpc_lpadc(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_lpadc_13a0000)
#define DT_FOREACH_OKAY_VARGS_nxp_lpc_lpadc(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_lpadc_13a0000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nxp_lpc_lpadc(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nxp_lpc_lpadc(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_nxp_lpc_ctimer(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_28000) fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_29000) fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_2a000) fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_2b000) fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_2c000)
#define DT_FOREACH_OKAY_VARGS_nxp_lpc_ctimer(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_28000, __VA_ARGS__) fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_29000, __VA_ARGS__) fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_2a000, __VA_ARGS__) fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_2b000, __VA_ARGS__) fn(DT_N_S_soc_S_peripheral_50000000_S_ctimer_2c000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nxp_lpc_ctimer(fn) fn(0) fn(1) fn(2) fn(3) fn(4)
#define DT_FOREACH_OKAY_INST_VARGS_nxp_lpc_ctimer(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__) fn(2, __VA_ARGS__) fn(3, __VA_ARGS__) fn(4, __VA_ARGS__)
#define DT_FOREACH_OKAY_nxp_imx_flexspi(fn) fn(DT_N_S_soc_S_spi_134000)
#define DT_FOREACH_OKAY_VARGS_nxp_imx_flexspi(fn, ...) fn(DT_N_S_soc_S_spi_134000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nxp_imx_flexspi(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nxp_imx_flexspi(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_nxp_imx_flexspi_nor(fn) fn(DT_N_S_soc_S_spi_134000_S_is25wp064_0)
#define DT_FOREACH_OKAY_VARGS_nxp_imx_flexspi_nor(fn, ...) fn(DT_N_S_soc_S_spi_134000_S_is25wp064_0, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nxp_imx_flexspi_nor(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nxp_imx_flexspi_nor(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_fixed_partitions(fn) fn(DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions)
#define DT_FOREACH_OKAY_VARGS_fixed_partitions(fn, ...) fn(DT_N_S_soc_S_spi_134000_S_is25wp064_0_S_partitions, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_fixed_partitions(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_fixed_partitions(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_arm_v8m_nvic(fn) fn(DT_N_S_soc_S_interrupt_controller_e000e100)
#define DT_FOREACH_OKAY_VARGS_arm_v8m_nvic(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_arm_v8m_nvic(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_arm_v8m_nvic(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_arm_cortex_m33f(fn) fn(DT_N_S_cpus_S_cpu_0)
#define DT_FOREACH_OKAY_VARGS_arm_cortex_m33f(fn, ...) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_arm_cortex_m33f(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_arm_cortex_m33f(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_arm_armv8m_mpu(fn) fn(DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90)
#define DT_FOREACH_OKAY_VARGS_arm_armv8m_mpu(fn, ...) fn(DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_arm_armv8m_mpu(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_arm_armv8m_mpu(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_gpio_keys(fn) fn(DT_N_S_gpio_keys)
#define DT_FOREACH_OKAY_VARGS_gpio_keys(fn, ...) fn(DT_N_S_gpio_keys, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_gpio_keys(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_gpio_keys(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_gpio_leds(fn) fn(DT_N_S_leds)
#define DT_FOREACH_OKAY_VARGS_gpio_leds(fn, ...) fn(DT_N_S_leds, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_gpio_leds(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_gpio_leds(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_pwm_leds(fn) fn(DT_N_S_pwmleds)
#define DT_FOREACH_OKAY_VARGS_pwm_leds(fn, ...) fn(DT_N_S_pwmleds, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_pwm_leds(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_pwm_leds(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_zephyr_power_state(fn) fn(DT_N_S_power_states_S_idle) fn(DT_N_S_power_states_S_suspend)
#define DT_FOREACH_OKAY_VARGS_zephyr_power_state(fn, ...) fn(DT_N_S_power_states_S_idle, __VA_ARGS__) fn(DT_N_S_power_states_S_suspend, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_zephyr_power_state(fn) fn(0) fn(1)
#define DT_FOREACH_OKAY_INST_VARGS_zephyr_power_state(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__)

/*
 * Bus information for status "okay" nodes of each compatible
 */
#define DT_COMPAT_nxp_imx_flexspi_nor_BUS_spi 1
